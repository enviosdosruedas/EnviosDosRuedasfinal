// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Client {
  id         Int       @id @default(autoincrement())
  name       String
  lastName   String?
  phone      String    @unique
  email      String?   @unique
  address    String?
  addressLat Decimal?  @db.Decimal(10, 7)
  addressLng Decimal?  @db.Decimal(10, 7)
  isActive   Boolean   @default(true)
  orders     Order[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Repartidor {
  id         Int      @id @default(autoincrement())
  name       String
  phone      String
  email      String   @unique
  userAuthId String?
  isActive   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Order {
  id                      Int              @id @default(autoincrement())
  clientId                Int?
  clientNameAtOrder       String
  clientPhoneAtOrder      String
  originFullName          String
  originPhone             String
  originAddress           String
  originLat               Decimal          @db.Decimal(10, 7)
  originLng               Decimal          @db.Decimal(10, 7)
  pickupStreetAddress     String?
  destinationContactName  String
  destinationContactPhone String
  destinationContactEmail String?
  destinationAddress      String
  destinationLat          Decimal          @db.Decimal(10, 7)
  destinationLng          Decimal          @db.Decimal(10, 7)
  deliveryAddress         String?
  serviceType             ServiceTypeEnum
  status                  OrderStatusEnum  @default(PENDIENTE)
  quotedPrice             Decimal          @db.Decimal(10, 2)
  shippingCost            Decimal          @db.Decimal(10, 2)
  totalCost               Decimal          @db.Decimal(10, 2)
  distanceText            String?
  durationText            String?
  pickupDate              DateTime
  pickupTimeFrom          String
  pickupTimeTo            String
  pickupDateTime          DateTime?
  deliveryDate            DateTime
  deliveryTimeFrom        String
  deliveryTimeTo          String
  deliveryDateTime        DateTime?
  notes                   String?
  client                  Client?          @relation(fields: [clientId], references: [id])
  createdAt               DateTime         @default(now())
  updatedAt               DateTime         @updatedAt
}

model PriceRange {
  id               Int             @id @default(autoincrement())
  distanciaMinKm   Decimal         @db.Decimal(6, 2)
  distanciaMaxKm   Decimal         @db.Decimal(6, 2)
  precioRango      Decimal         @db.Decimal(10, 2)
  serviceType      ServiceTypeEnum
  isActive         Boolean         @default(true)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@unique([distanciaMinKm, distanciaMaxKm, serviceType], name: "distancia_min_max_service_type_unique")
}


model SocialPost {
  id          Int                @id @default(autoincrement())
  platform    SocialPlatformEnum
  userName    String
  userAvatar  String?
  userUrl     String?
  content     String             @db.Text
  imageUrl    String?
  imageHint   String?
  postUrl     String             @unique
  timestamp   DateTime           @default(now())
  likes       Int?
  comments    Int?
  shares      Int?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

enum ServiceTypeEnum {
  EXPRESS
  LOW_COST
}

enum OrderStatusEnum {
  PENDIENTE
  ASIGNADO
  EN_CURSO
  ENTREGADO
  CANCELADO
  INCIDENCIA
}

enum SocialPlatformEnum {
  facebook
  instagram
  whatsapp
}
