{
  "name": "src",
  "type": "directory",
  "children": [
    {
      "name": "ai",
      "type": "directory",
      "children": [
        {
          "name": "dev.ts",
          "type": "file",
          "content": "import { config } from 'dotenv';\nconfig();\n\nimport '@/ai/flows/summarize-testimonials.ts';"
        },
        {
          "name": "flows",
          "type": "directory",
          "children": [
            {
              "name": "summarize-testimonials.ts",
              "type": "file",
              "content": "// Summarize testimonials flow implemented.\n\n'use server';\n\n/**\n * @fileOverview A flow to summarize customer testimonials.\n *\n * - summarizeTestimonials - A function that summarizes customer testimonials.\n * - SummarizeTestimonialsInput - The input type for the summarizeTestimonials function.\n * - SummarizeTestimonialsOutput - The return type for the summarizeTestimonials function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SummarizeTestimonialsInputSchema = z.object({\n  testimonials: z\n    .string()\n    .describe('The testimonials to summarize.  This can be a long string.'),\n});\nexport type SummarizeTestimonialsInput = z.infer<typeof SummarizeTestimonialsInputSchema>;\n\nconst SummarizeTestimonialsOutputSchema = z.object({\n  summary: z\n    .string()\n    .describe('A summary of the testimonials, highlighting the key sentiments.'),\n});\nexport type SummarizeTestimonialsOutput = z.infer<typeof SummarizeTestimonialsOutputSchema>;\n\nexport async function summarizeTestimonials(input: SummarizeTestimonialsInput): Promise<SummarizeTestimonialsOutput> {\n  return summarizeTestimonialsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'summarizeTestimonialsPrompt',\n  input: {schema: SummarizeTestimonialsInputSchema},\n  output: {schema: SummarizeTestimonialsOutputSchema},\n  prompt: `Summarize the following customer testimonials, highlighting the overall sentiment and key points:\\n\\n{{{testimonials}}}`,\n});\n\nconst summarizeTestimonialsFlow = ai.defineFlow(\n  {\n    name: 'summarizeTestimonialsFlow',\n    inputSchema: SummarizeTestimonialsInputSchema,\n    outputSchema: SummarizeTestimonialsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"
            }
          ]
        },
        {
          "name": "genkit.ts",
          "type": "file",
          "content": "import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"
        }
      ]
    },
    {
      "name": "app",
      "type": "directory",
      "children": [
        {
          "name": "actions.ts",
          "type": "file",
          "content": "// @ts-nocheck\n// TODO: Fix typescript errors\n'use server';\n\nimport { z } from 'zod';\nimport { summarizeTestimonials as summarizeTestimonialsFlow } from '@/ai/flows/summarize-testimonials';\n\n// AI Summary Action\nconst aiSummarySchema = z.object({\n  testimonials: z.string().min(20, { message: 'El testimonio debe tener al menos 20 caracteres.' }).max(5000, { message: 'El testimonio no debe exceder los 5000 caracteres.' }),\n});\n\ninterface AISummaryState {\n  summary?: string;\n  error?: string;\n  fieldErrors?: Partial<Record<keyof z.infer<typeof aiSummarySchema>, string[]>>;\n  formError?: string;\n  timestamp?: number; \n}\n\nexport async function generateTestimonialSummary(\n  prevState: AISummaryState,\n  formData: FormData\n): Promise<AISummaryState> {\n  const rawText = formData.get('testimonials');\n  const validatedFields = aiSummarySchema.safeParse({\n    testimonials: rawText,\n  });\n\n  if (!validatedFields.success) {\n    return {\n      fieldErrors: validatedFields.error.flatten().fieldErrors,\n      formError: \"Por favor corrige los errores en el formulario.\",\n      timestamp: Date.now(),\n    };\n  }\n\n  try {\n    const result = await summarizeTestimonialsFlow({ testimonials: validatedFields.data.testimonials });\n    return { summary: result.summary, timestamp: Date.now() };\n  } catch (e) {\n    console.error(e);\n    // Check if e is an Error instance and has a message property\n    const errorMessage = e instanceof Error ? e.message : 'Error desconocido.';\n    return { error: `Error al generar el resumen: ${errorMessage}. Int\u00e9ntalo de nuevo.`, timestamp: Date.now() };\n  }\n}\n\n// Contact Form Action\nconst contactSchema = z.object({\n  name: z.string().min(2, { message: 'El nombre es requerido y debe tener al menos 2 caracteres.' }),\n  email: z.string().email({ message: 'Por favor, introduce un email v\u00e1lido.' }),\n  message: z.string().min(10, { message: 'El mensaje debe tener al menos 10 caracteres.' }).max(1000, { message: 'El mensaje no debe exceder los 1000 caracteres.'}),\n});\n\ninterface ContactFormState {\n  message?: string;\n  error?: string;\n  fieldErrors?: Partial<Record<keyof z.infer<typeof contactSchema>, string[]>>;\n  formError?: string;\n  timestamp?: number;\n}\n\nexport async function submitContactForm(\n  prevState: ContactFormState,\n  formData: FormData\n): Promise<ContactFormState> {\n  const validatedFields = contactSchema.safeParse({\n    name: formData.get('name'),\n    email: formData.get('email'),\n    message: formData.get('message'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      fieldErrors: validatedFields.error.flatten().fieldErrors,\n      formError: \"Por favor corrige los errores en el formulario.\",\n      timestamp: Date.now(),\n    };\n  }\n\n  // Simulate form submission\n  console.log('Contact form submitted:', validatedFields.data);\n  // In a real app, you would send an email or save to a database here.\n  return { message: '\u00a1Gracias por tu mensaje! Nos pondremos en contacto contigo pronto.', timestamp: Date.now() };\n}\n"
        },
        {
          "name": "admin",
          "type": "directory",
          "children": [
            {
              "name": "actions.ts",
              "type": "file",
              "content": "// src/app/admin/actions.ts\n'use server';\n\nimport { z } from 'zod';\nimport prisma from '@/lib/prisma';\nimport { Prisma, SocialPlatformEnum } from '@prisma/client';\nimport { revalidatePath } from 'next/cache';\n\n// A flexible schema for image URLs, allowing local paths or full URLs\nconst imageUrlSchema = z.string().refine(val => val === '' || val.startsWith('/') || z.string().url().safeParse(val).success, {\n    message: \"Debe ser una URL de imagen v\u00e1lida o una ruta local (ej. /redes/foto.png).\"\n});\n\nconst addPostSchema = z.object({\n  platform: z.nativeEnum(SocialPlatformEnum),\n  content: z.string().min(10, { message: 'El contenido debe tener al menos 10 caracteres.' }),\n  postUrl: z.string().url({ message: \"Por favor, introduce una URL de publicaci\u00f3n v\u00e1lida.\" }),\n  imageUrl: imageUrlSchema.optional().or(z.literal('')),\n  imageHint: z.string().optional(),\n  likes: z.coerce.number().int().min(0).optional(),\n  comments: z.coerce.number().int().min(0).optional(),\n  shares: z.coerce.number().int().min(0).optional(),\n});\n\nexport interface SocialPostState {\n  message?: string;\n  error?: string;\n  fieldErrors?: Partial<Record<keyof z.infer<typeof addPostSchema>, string[]>>;\n}\n\nexport async function addSocialPost(\n  prevState: SocialPostState,\n  formData: FormData\n): Promise<SocialPostState> {\n    const rawData = {\n        platform: formData.get('platform'),\n        content: formData.get('content'),\n        postUrl: formData.get('postUrl'),\n        imageUrl: formData.get('imageUrl'),\n        imageHint: formData.get('imageHint'),\n        likes: formData.get('likes'),\n        comments: formData.get('comments'),\n        shares: formData.get('shares'),\n    };\n\n  const validatedFields = addPostSchema.safeParse({\n        ...rawData,\n        // Treat empty strings from form as undefined for optional number fields\n        likes: rawData.likes === '' || rawData.likes === null ? undefined : rawData.likes,\n        comments: rawData.comments === '' || rawData.comments === null ? undefined : rawData.comments,\n        shares: rawData.shares === '' || rawData.shares === null ? undefined : rawData.shares,\n  });\n\n  if (!validatedFields.success) {\n    return {\n      error: 'Por favor, corrige los errores en el formulario.',\n      fieldErrors: validatedFields.error.flatten().fieldErrors,\n    };\n  }\n\n  const platformUserUrls = {\n    [SocialPlatformEnum.facebook]: \"https://facebook.com/enviosdosruedas\",\n    [SocialPlatformEnum.instagram]: \"https://instagram.com/enviosdosruedas\",\n    [SocialPlatformEnum.whatsapp]: null,\n  };\n\n  const userUrl = platformUserUrls[validatedFields.data.platform];\n\n  try {\n    await prisma.socialPost.create({\n      data: {\n        platform: validatedFields.data.platform,\n        userName: 'Envios DosRuedas', // Hardcoded for now\n        userAvatar: '/LogoEnviosDosRuedas.webp', // Hardcoded for now\n        userUrl: userUrl,\n        content: validatedFields.data.content,\n        postUrl: validatedFields.data.postUrl,\n        imageUrl: validatedFields.data.imageUrl || null,\n        imageHint: validatedFields.data.imageHint || null,\n        likes: validatedFields.data.likes,\n        comments: validatedFields.data.comments,\n        shares: validatedFields.data.shares,\n        timestamp: new Date(),\n      },\n    });\n\n    // Revalidate the path to show the new post\n    revalidatePath('/nosotros/nuestras-redes');\n\n    return {\n      message: '\u00a1Publicaci\u00f3n agregada exitosamente!',\n    };\n  } catch (e) {\n    console.error(e);\n     if (e instanceof Prisma.PrismaClientKnownRequestError) {\n      // P2002 is the unique constraint violation code\n      if (e.code === 'P2002') {\n        return {\n          error: 'Error: Ya existe una publicaci\u00f3n con esta URL.',\n          fieldErrors: { postUrl: ['Esta URL ya ha sido registrada.'] },\n        };\n      }\n    }\n    const errorMessage = e instanceof Error ? e.message : 'Error desconocido al guardar.';\n    return {\n      error: `Hubo un error al guardar la publicaci\u00f3n en la base de datos: ${errorMessage}`,\n    };\n  }\n}\n"
            },
            {
              "name": "add-post",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "// src/app/admin/add-post/page.tsx\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport { AddPostForm } from \"@/components/admin/AddPostForm\";\n\nexport default function AddSocialPostPage() {\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        <h1 className=\"text-3xl font-bold text-center mb-8 text-primary\">Agregar Nueva Publicaci\u00f3n Social</h1>\n        <AddPostForm />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
                }
              ]
            },
            {
              "name": "ordenes",
              "type": "directory",
              "children": [
                {
                  "name": "actions.ts",
                  "type": "file",
                  "content": "// src/app/admin/ordenes/actions.ts\n'use server';\n\nimport prisma from '@/lib/prisma';\nimport { revalidatePath } from 'next/cache';\n\nexport async function deleteOrder(orderId: number): Promise<{ success: boolean; error?: string }> {\n  try {\n    await prisma.order.delete({\n      where: { id: orderId },\n    });\n\n    revalidatePath('/admin/ordenes'); // Revalidate the orders list page\n    return { success: true };\n  } catch (error) {\n    console.error(`Error deleting order #${orderId}:`, error);\n    // Handle specific Prisma error for record not found\n    if (error instanceof Error && 'code' in error && error.code === 'P2025') {\n       return { success: false, error: 'No se encontr\u00f3 la orden para eliminar. Es posible que ya haya sido eliminada.' };\n    }\n    return { success: false, error: 'Ocurri\u00f3 un error al eliminar la orden.' };\n  }\n}\n"
                },
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "// src/app/admin/ordenes/page.tsx\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport prisma from \"@/lib/prisma\";\nimport { OrdenesTable } from \"@/components/admin/ordenes/OrdenesTable\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { PlusCircle } from \"lucide-react\";\nimport type { Metadata } from 'next';\n\nexport const metadata: Metadata = {\n  title: \"Gesti\u00f3n de \u00d3rdenes\",\n  description: \"Administra, visualiza, crea y modifica las \u00f3rdenes de env\u00edo.\",\n  robots: {\n    index: false, // Prevent admin pages from being indexed by search engines\n    follow: false,\n  },\n};\n\n// Revalidate data to ensure it's fresh, e.g., every 60 seconds.\nexport const revalidate = 60;\n\nexport default async function AdminOrdenesPage() {\n  const orders = await prisma.order.findMany({\n    orderBy: {\n      createdAt: 'desc',\n    },\n    include: {\n      client: true, // Include related client data\n    },\n  });\n\n  // Convert Decimal fields to numbers for client component compatibility\n  const formattedOrders = orders.map(order => ({\n    ...order,\n    quotedPrice: order.quotedPrice?.toNumber() ?? 0,\n    shippingCost: order.shippingCost?.toNumber() ?? 0,\n    totalCost: order.totalCost?.toNumber() ?? 0,\n    originLat: order.originLat?.toNumber() ?? null,\n    originLng: order.originLng?.toNumber() ?? null,\n    destinationLat: order.destinationLat?.toNumber() ?? null,\n    destinationLng: order.destinationLng?.toNumber() ?? null,\n    client: order.client ? {\n        ...order.client,\n        addressLat: order.client.addressLat?.toNumber() ?? null,\n        addressLng: order.client.addressLng?.toNumber() ?? null,\n    } : null,\n  }));\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-primary\">Gesti\u00f3n de \u00d3rdenes</h1>\n          <Button asChild>\n            <Link href=\"/ordenes\">\n              <PlusCircle className=\"mr-2 h-4 w-4\" />\n              Crear Nueva Orden\n            </Link>\n          </Button>\n        </div>\n        <OrdenesTable orders={formattedOrders} />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
                }
              ]
            }
          ]
        },
        {
          "name": "contacto",
          "type": "directory",
          "children": [
            {
              "name": "page.tsx",
              "type": "file",
              "content": "import type { Metadata } from \"next\";\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport { ContactPageClient } from \"@/components/contact/contact-page-client\";\n\nexport const metadata: Metadata = {\n  title: \"Contacto\",\n  description:\n    \"Cont\u00e1ctanos para servicios de mensajer\u00eda y delivery en Mar del Plata. Respuesta r\u00e1pida y atenci\u00f3n personalizada. WhatsApp, tel\u00e9fono y email disponibles.\",\n  keywords: \"contacto, envios mar del plata, mensajeria, delivery, whatsapp, telefono, email\",\n};\n\nexport default function ContactPage() {\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Header />\n      <main className=\"flex-grow\">\n        <ContactPageClient />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "cotizar",
          "type": "directory",
          "children": [
            {
              "name": "express",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "\nimport type { Metadata } from 'next';\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport CalculatorHero from '@/components/calculator/calculator-hero';\nimport ExpressCalculator from '@/components/calculator/express-calculator';\nimport PricingInfo from '@/components/calculator/pricing-info';\nimport CalculatorTips from '@/components/calculator/calculator-tips';\nimport CalculatorContact from '@/components/calculator/calculator-contact';\nimport MapFeatures from '@/components/calculator/map-features';\n\nexport const metadata: Metadata = {\n  title: 'Cotizador de Env\u00edos Express - Envios DosRuedas',\n  description: 'Calcula el precio de tus env\u00edos express en Mar del Plata de forma r\u00e1pida y sencilla. Ingresa origen y destino para obtener tu cotizaci\u00f3n al instante.',\n  keywords: ['cotizador env\u00edos', 'env\u00edos express', 'delivery Mar del Plata', 'calcular precio env\u00edo', 'mensajer\u00eda urgente'],\n};\n\nexport default function CotizarExpressPage() {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background\">\n      <Header />\n      <main className=\"flex-grow\">\n        <CalculatorHero />\n        <ExpressCalculator />\n        <MapFeatures />\n        <PricingInfo />\n        <CalculatorTips />\n        <CalculatorContact />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
                }
              ]
            },
            {
              "name": "lowcost",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "\nimport type { Metadata } from 'next';\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport LowCostCalculatorHero from '@/components/calculator/lowcost-calculator-hero';\nimport LowCostCalculator from '@/components/calculator/lowcost-calculator';\nimport MapFeatures from '@/components/calculator/map-features';\nimport PricingInfo from '@/components/calculator/pricing-info';\nimport CalculatorTips from '@/components/calculator/calculator-tips';\nimport CalculatorContact from '@/components/calculator/calculator-contact';\n\nexport const metadata: Metadata = {\n  title: 'Cotizador de Env\u00edos Low Cost - Envios DosRuedas',\n  description: 'Calcula el precio de tus env\u00edos econ\u00f3micos y programados en Mar del Plata. La opci\u00f3n m\u00e1s conveniente para tus necesidades no urgentes.',\n  keywords: ['cotizador env\u00edos low cost', 'env\u00edos econ\u00f3micos', 'delivery Mar del Plata barato', 'calcular precio env\u00edo econ\u00f3mico', 'mensajer\u00eda programada'],\n};\n\nexport default function CotizarLowCostPage() {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background\">\n      <Header />\n      <main className=\"flex-grow\">\n        <LowCostCalculatorHero />\n        <LowCostCalculator />\n        <MapFeatures />\n        <PricingInfo />\n        <CalculatorTips />\n        <CalculatorContact />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
                }
              ]
            }
          ]
        },
        {
          "name": "favicon.ico",
          "type": "file"
        },
        {
          "name": "globals.css",
          "type": "file"
        },
        {
          "name": "layout.tsx",
          "type": "file",
          "content": "import type { Metadata } from \"next\";\nimport { Inter, Manrope } from \"next/font/google\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport \"./globals.css\";\n\nconst inter = Inter({\n  subsets: [\"latin\"],\n  weight: [\"400\", \"500\", \"600\"],\n  variable: \"--font-inter\",\n});\n\nconst manrope = Manrope({\n  subsets: [\"latin\"],\n  weight: [\"700\", \"800\"],\n  variable: \"--font-manrope\",\n});\n\nexport const metadata: Metadata = {\n  title: 'EnviosDosRuedas | Mensajer\u00eda y Delivery Express en Mar del Plata',\n  description: 'Servicio confiable de mensajer\u00eda y delivery en moto. Env\u00edos express y low-cost para e-commerce, pymes y Mercado Libre Flex en Mar del Plata. Cotiz\u00e1 online.',\n  keywords: 'mensajeria mar del plata, delivery mar del plata, envios en moto, cadeteria mar del plata, envios flex, envios low cost, mensajeria express, envios dos ruedas',\n  alternates: {\n    canonical: 'https://www.enviosdosruedas.com',\n  },\n  openGraph: {\n    title: 'EnviosDosRuedas | Mensajer\u00eda y Delivery R\u00e1pido en Mar del Plata',\n    description: 'Env\u00edos express, low-cost, para emprendedores y Mercado Libre Flex. Cotiza online.',\n    url: 'https://www.enviosdosruedas.com',\n    images: [\n      {\n        url: 'https://www.enviosdosruedas.com/img/LogoEnviosDosRuedas.webp',\n        width: 800,\n        height: 600,\n        alt: 'Logo de Envios DosRuedas sobre un fondo de un mapa de ciudad.',\n      },\n    ],\n    type: 'website',\n    locale: 'es_AR',\n  },\n  manifest: \"/manifest.json\",\n  icons: {\n    icon: \"/LogoEnviosDosRuedas.webp\",\n    shortcut: \"/LogoEnviosDosRuedas.webp\",\n    apple: \"/LogoEnviosDosRuedas.webp\",\n  },\n};\n\n\nexport const viewport = {\n  themeColor: \"#1E40AF\",\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n    const jsonLd = {\n    '@context': 'https://schema.org',\n    '@type': 'LocalBusiness',\n    name: 'EnviosDosRuedas',\n    image: 'https://www.enviosdosruedas.com/img/LogoEnviosDosRuedas.webp',\n    url: 'https://www.enviosdosruedas.com',\n    telephone: '+5492231234567',\n    priceRange: '$$',\n    address: {\n      '@type': 'PostalAddress',\n      streetAddress: '11 de setiembre',\n      addressLocality: 'Mar del Plata',\n      postalCode: 'B7600',\n      addressCountry: 'AR',\n    },\n    openingHoursSpecification: [\n      {\n        '@type': 'OpeningHoursSpecification',\n        dayOfWeek: [\n          'Monday',\n          'Tuesday',\n          'Wednesday',\n          'Thursday',\n          'Friday',\n          'Saturday',\n        ],\n        opens: '09:00',\n        closes: '18:00',\n      },\n    ],\n  };\n\n  return (\n    <html lang=\"es\" suppressHydrationWarning>\n      <head>\n        <script\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}\n        />\n      </head>\n      <body\n        className={`${inter.variable} ${manrope.variable} font-sans antialiased`}\n      >\n        {children}\n        <Toaster />\n      </body>\n    </html>\n  );\n}\n"
        },
        {
          "name": "nosotros",
          "type": "directory",
          "children": [
            {
              "name": "nuestras-redes",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "// src/app/nosotros/nuestras-redes/page.tsx\nimport { Header } from \"@/components/header\";\nimport { SocialHero } from \"@/components/social/social-hero\";\nimport { SocialConnect } from \"@/components/social/social-connect\";\nimport { SocialBenefits } from \"@/components/social/social-benefits\";\nimport { SocialFeed } from \"@/components/social/social-feed\";\nimport { NewsletterSignup } from \"@/components/social/newsletter-signup\";\nimport { Footer } from \"@/components/footer\";\nimport { getAllPosts } from \"@/lib/social/posts\";\nimport type { Metadata } from \"next\";\n\nexport const metadata: Metadata = {\n    title: \"Con\u00e9ctate en Redes Sociales\",\n    description: \"Sigue a Envios DosRuedas en Facebook e Instagram para enterarte de las \u00faltimas noticias, promociones exclusivas y consejos de env\u00edo en Mar del Plata.\",\n    keywords: \"redes sociales, facebook, instagram, whatsapp, promociones, noticias, envios mar del plata\",\n};\n\nexport const revalidate = 3600; // Revalidate data every hour\n\nexport default async function SocialNetworksPage() {\n  const posts = await getAllPosts();\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-grow\">\n        <SocialHero />\n        <SocialConnect />\n        <SocialFeed posts={posts} />\n        <SocialBenefits />\n        <NewsletterSignup />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
                }
              ]
            },
            {
              "name": "preguntas-frecuentes",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import { Header } from \"@/components/header\"\nimport { FaqHero } from \"@/components/faq/faq-hero\"\nimport { FaqCategories } from \"@/components/faq/faq-categories\"\nimport { FaqContactCta } from \"@/components/faq/faq-contact-cta\"\nimport { Footer } from \"@/components/footer\"\nimport type { Metadata } from \"next\"\n\nexport const metadata: Metadata = {\n  title: \"Preguntas Frecuentes - Envios DosRuedas | FAQ Mensajer\u00eda y Delivery\",\n  description:\n    \"Encuentra respuestas a las preguntas m\u00e1s frecuentes sobre nuestros servicios de mensajer\u00eda y delivery en Mar del Plata. Tarifas, tiempos, cobertura y m\u00e1s.\",\n  keywords: \"preguntas frecuentes, faq, envios mar del plata, mensajeria, delivery, tarifas, tiempos entrega\",\n}\n\nexport default function FaqPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <main>\n        <FaqHero />\n        <FaqCategories />\n        <FaqContactCta />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
                }
              ]
            },
            {
              "name": "sobre-nosotros",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import { Header } from \"@/components/header\"\nimport { AboutHero } from \"@/components/about/about-hero\"\nimport { WhoWeAre } from \"@/components/about/who-we-are\"\nimport { CompanyValues } from \"@/components/about/company-values\"\nimport { CompanyStory } from \"@/components/about/company-story\"\nimport { TeamSection } from \"@/components/about/team-section\"\nimport { MissionVision } from \"@/components/about/mission-vision\"\nimport { Footer } from \"@/components/footer\"\nimport type { Metadata } from \"next\"\n\nexport const metadata: Metadata = {\n  title: \"Sobre Nosotros - Envios DosRuedas | Nuestra Historia y Valores\",\n  description:\n    \"Conoce la historia de Envios DosRuedas, tu aliado confiable en mensajer\u00eda y delivery en Mar del Plata. 4.9 estrellas en Google Reviews. Compromiso, rapidez y confiabilidad.\",\n  keywords: \"sobre nosotros, envios dosruedas, historia empresa, valores, equipo, mar del plata, mensajeria\",\n}\n\nexport default function AboutPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <main>\n        <AboutHero />\n        <WhoWeAre />\n        <CompanyValues />\n        <CompanyStory />\n        <TeamSection />\n        <MissionVision />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
                }
              ]
            }
          ]
        },
        {
          "name": "not-found.tsx",
          "type": "file",
          "content": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Header } from \"@/components/header\"\nimport { Footer } from \"@/components/footer\"\nimport { NotFoundIllustration } from \"@/components/error/not-found-illustration\"\nimport { Home, ArrowLeft } from \"lucide-react\"\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      <main className=\"flex-1\">\n        <section className=\"py-20 px-4\">\n          <div className=\"container mx-auto text-center\">\n            <NotFoundIllustration />\n\n            <div className=\"mt-8 max-w-2xl mx-auto\">\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Esta p\u00e1gina se perdi\u00f3</h1>\n              <p className=\"text-lg text-gray-600 mb-8\">\n                Buscamos por todas partes y no la encontramos. Revisa que el link sea correcto.\n              </p>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button asChild size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700\">\n                  <Link href=\"/\">\n                    <Home className=\"w-5 h-5 mr-2\" />\n                    Ir al Inicio\n                  </Link>\n                </Button>\n\n                <Button asChild variant=\"outline\" size=\"lg\">\n                  <Link href=\"javascript:history.back()\">\n                    <ArrowLeft className=\"w-5 h-5 mr-2\" />\n                    Volver Atr\u00e1s\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
        },
        {
          "name": "ordenes",
          "type": "directory",
          "children": [
            {
              "name": "actions.ts",
              "type": "file",
              "content": "\n'use server';\n\nimport prisma from '@/lib/prisma';\nimport { Prisma, ServiceTypeEnum as PrismaServiceTypeEnum, type Client, type Order as PrismaOrder } from '@prisma/client';\nimport { z } from 'zod';\nimport type {\n  ClientSearchInput, ClientSearchResult,\n  RegisterClientInput, RegisterClientResult,\n  QuoteShipmentInput, QuoteDetails, QuoteShipmentResult,\n  SaveShipmentInput, SaveShipmentResult\n} from '@/types/order-actions';\nimport { obtenerPrecioExpressPorDistancia } from '@/lib/preciosexpress';\nimport { obtenerPrecioLowCostPorDistancia } from '@/lib/precioslowcost';\nimport { format, parse } from 'date-fns';\n\n\n// --- Google Maps API Helper ---\nconst GOOGLE_MAPS_API_KEY = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\nconst MAR_DEL_PLATA_COMPONENT_FILTER = '&components=country:AR|administrative_area:Buenos%20Aires|locality:Mar%20del%20Plata';\n\ninterface GeocodeResult {\n  lat: number;\n  lng: number;\n}\n\ninterface GoogleGeocodeResponse {\n  results: {\n    geometry: { location: GeocodeResult };\n    formatted_address: string;\n  }[];\n  status: string;\n  error_message?: string;\n}\n\nasync function geocodeAddressWithGoogle(address: string, cityHint: string = \"Mar del Plata\"): Promise<GeocodeResult | null> {\n  if (!GOOGLE_MAPS_API_KEY || GOOGLE_MAPS_API_KEY === \"YOUR_GOOGLE_MAPS_API_KEY\" || GOOGLE_MAPS_API_KEY === \"demo-key\") {\n    console.warn(`Google Maps API key not configured or is placeholder. Geocoding for \"${address}\" skipped. Returning simulated coordinates for ${cityHint}.`);\n    // Simulate coordinates based on hints to distinguish them in tests\n    if (address.toLowerCase().includes(\"origen\") || cityHint.toLowerCase().includes(\"origen\")) return { lat: -38.0055, lng: -57.5426 }; // Simulated origin\n    if (address.toLowerCase().includes(\"destino\") || cityHint.toLowerCase().includes(\"destino\")) return { lat: -37.9948, lng: -57.5576 }; // Simulated destination\n    if (address.toLowerCase().includes(\"cliente\") || cityHint.toLowerCase().includes(\"cliente\")) return { lat: -38.0174, lng: -57.5209 }; // Simulated client address\n    return { lat: -38.0023, lng: -57.5575 }; // Default Mar del Plata\n  }\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address + \", \" + cityHint + \", Argentina\")}${MAR_DEL_PLATA_COMPONENT_FILTER}&key=${GOOGLE_MAPS_API_KEY}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`Geocoding HTTP error for \"${address}\": ${response.status} ${response.statusText}. Response: ${errorText}`);\n      return null;\n    }\n    const data = await response.json() as GoogleGeocodeResponse;\n    if (data.status === 'OK' && data.results.length > 0) {\n      return data.results[0].geometry.location;\n    }\n    console.error(`Geocoding API error for \"${address}\": ${data.status} - ${data.error_message || 'No results'}`);\n    return null;\n  } catch (error: unknown) {\n    const e = error instanceof Error ? error : new Error(String(error));\n    console.error(`Network error during geocoding for \"${address}\":`, e.message);\n    return null;\n  }\n}\n\n// --- Client Search and Registration ---\nconst clientSearchSchema = z.object({\n  phone: z.string().min(1, 'El n\u00famero de tel\u00e9fono es requerido.').regex(/^\\+?\\d{7,15}$/, 'Formato de tel\u00e9fono inv\u00e1lido.'),\n});\n\nexport async function searchClientByPhone(input: ClientSearchInput): Promise<ClientSearchResult> {\n  try {\n    const validatedData = clientSearchSchema.parse(input);\n    const client = await prisma.client.findUnique({\n      where: { phone: validatedData.phone },\n    });\n    if (client) {\n      const clientData = {\n        ...client,\n        addressLat: client.addressLat?.toNumber() ?? null,\n        addressLng: client.addressLng?.toNumber() ?? null,\n      };\n      return { success: true, data: clientData as unknown as Client }; // Cast needed due to Decimal to number\n    }\n    return { success: true, data: null, message: 'Cliente no encontrado.' };\n  } catch (error: unknown) {\n    if (error instanceof z.ZodError) {\n      return { success: false, error: 'Datos de entrada inv\u00e1lidos.', fieldErrors: error.issues };\n    }\n    console.error('Error searching client by phone:', error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    return { success: false, error: `Error al buscar cliente: ${errorMessage}` };\n  }\n}\n\nconst registerClientSchema = z.object({\n  name: z.string().min(2, 'El nombre es requerido y debe tener al menos 2 caracteres.'),\n  lastName: z.string().min(2, 'El apellido es requerido y debe tener al menos 2 caracteres.').optional().or(z.literal('')),\n  phone: z.string().min(1, 'El tel\u00e9fono es requerido.').regex(/^\\+?\\d{7,15}$/, 'Formato de tel\u00e9fono inv\u00e1lido.'),\n  email: z.string().email('El email no es v\u00e1lido.').optional().or(z.literal('')), \n  address: z.string().min(5, 'La direcci\u00f3n es requerida y debe tener al menos 5 caracteres.'),\n});\n\nexport async function registerClient(input: RegisterClientInput): Promise<RegisterClientResult> {\n  try {\n    const validatedData = registerClientSchema.parse(input);\n\n    const existingByPhone = await prisma.client.findUnique({ where: { phone: validatedData.phone } });\n    if (existingByPhone) {\n      return { success: false, error: `Ya existe un cliente con el tel\u00e9fono ${validatedData.phone}.` };\n    }\n    if (validatedData.email && validatedData.email.trim() !== '') {\n      const existingByEmail = await prisma.client.findUnique({ where: { email: validatedData.email } });\n      if (existingByEmail) {\n        return { success: false, error: `Ya existe un cliente con el email ${validatedData.email}.` };\n      }\n    }\n\n    const coords = await geocodeAddressWithGoogle(validatedData.address, \"cliente\");\n\n    const newClient = await prisma.client.create({\n      data: {\n        name: validatedData.name,\n        lastName: validatedData.lastName || null,\n        phone: validatedData.phone,\n        email: validatedData.email || null,\n        address: validatedData.address,\n        addressLat: coords ? new Prisma.Decimal(coords.lat.toFixed(7)) : null,\n        addressLng: coords ? new Prisma.Decimal(coords.lng.toFixed(7)) : null,\n        isActive: true,\n      },\n    });\n     const clientData = {\n        ...newClient,\n        addressLat: newClient.addressLat?.toNumber() ?? null,\n        addressLng: newClient.addressLng?.toNumber() ?? null,\n      };\n    return { success: true, data: clientData as unknown as Client }; // Cast for lat/lng\n  } catch (error: unknown) {\n    if (error instanceof z.ZodError) {\n      return { success: false, error: 'Datos de entrada inv\u00e1lidos.', fieldErrors: error.issues };\n    }\n    if (error instanceof Prisma.PrismaClientKnownRequestError) {\n      if (error.code === 'P2002') {\n        const target = error.meta?.target as string[] | undefined;\n        if (target?.includes('phone')) return { success: false, error: 'El n\u00famero de tel\u00e9fono ya est\u00e1 registrado.' };\n        if (target?.includes('email')) return { success: false, error: 'La direcci\u00f3n de email ya est\u00e1 registrada.' };\n        return { success: false, error: 'Error de duplicado al guardar el cliente.' };\n      }\n    }\n    console.error('Error registering client:', error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    return { success: false, error: `Error al registrar cliente: ${errorMessage}` };\n  }\n}\n\n\n// --- Shipment Quoting ---\ninterface GoogleDirectionsResponse {\n  routes: {\n    legs: {\n      distance: { text: string; value: number }; // value is in meters\n      duration: { text: string; value: number }; // value is in seconds\n    }[];\n  }[];\n  status: string;\n  error_message?: string;\n}\n\nconst quoteShipmentSchema = z.object({\n  originAddress: z.string().min(5, \"La direcci\u00f3n de origen es requerida.\"),\n  destinationAddress: z.string().min(5, \"La direcci\u00f3n de destino es requerida.\"),\n  serviceType: z.nativeEnum(PrismaServiceTypeEnum, { errorMap: () => ({ message: \"Tipo de servicio inv\u00e1lido.\" }) }),\n});\n\nexport async function quoteShipment(input: QuoteShipmentInput): Promise<QuoteShipmentResult> {\n  try {\n    const validatedData = quoteShipmentSchema.parse(input);\n\n    const originCoords = await geocodeAddressWithGoogle(validatedData.originAddress, \"origen\");\n    if (!originCoords) return { success: false, error: `No se pudo geolocalizar la direcci\u00f3n de origen: ${validatedData.originAddress}` };\n\n    const destinationCoords = await geocodeAddressWithGoogle(validatedData.destinationAddress, \"destino\");\n    if (!destinationCoords) return { success: false, error: `No se pudo geolocalizar la direcci\u00f3n de destino: ${validatedData.destinationAddress}` };\n    \n    let distanceKm: number;\n    let distanceText: string;\n    let durationText: string;\n    let price: number | null;\n\n    if (!GOOGLE_MAPS_API_KEY || GOOGLE_MAPS_API_KEY === \"YOUR_GOOGLE_MAPS_API_KEY\" || GOOGLE_MAPS_API_KEY === \"demo-key\") {\n      console.warn(\"Google Maps API key not configured or is placeholder. Simulating directions for quote.\");\n      // Simulate distance (e.g., between 1 and 15 km)\n      distanceKm = Math.random() * 14 + 1; \n      distanceText = `${distanceKm.toFixed(1)} km (simulado)`;\n      durationText = `${Math.round(distanceKm * 5 + 5)} min (simulado)`; // Simulate duration\n\n      const priceRangeRecord = await prisma.priceRange.findFirst({\n        where: {\n          distanciaMinKm: { lte: new Prisma.Decimal(distanceKm.toFixed(2)) },\n          distanciaMaxKm: { gte: new Prisma.Decimal(distanceKm.toFixed(2)) },\n          serviceType: validatedData.serviceType,\n          isActive: true,\n        },\n      });\n      price = priceRangeRecord ? priceRangeRecord.precioRango.toNumber() : null;\n\n    } else {\n      const directionsUrl = `https://maps.googleapis.com/maps/api/directions/json?origin=${originCoords.lat},${originCoords.lng}&destination=${destinationCoords.lat},${destinationCoords.lng}&key=${GOOGLE_MAPS_API_KEY}&language=es`;\n      \n      const directionsResponse = await fetch(directionsUrl);\n      if (!directionsResponse.ok) {\n        const errorText = await directionsResponse.text();\n        console.error(`Google Directions API HTTP error: ${directionsResponse.status}. URL: ${directionsUrl}. Response: ${errorText}`);\n        return { success: false, error: `Error del API de Google Maps (status ${directionsResponse.status}): ${directionsResponse.statusText}` };\n      }\n\n      const directionsData = await directionsResponse.json() as GoogleDirectionsResponse;\n\n      if (directionsData.status !== 'OK' || !directionsData.routes || directionsData.routes.length === 0) {\n        console.error(`Google Directions API logical error. Status: ${directionsData.status}. Message: ${directionsData.error_message}`);\n        return { success: false, error: `No se pudo calcular la ruta: ${directionsData.error_message || directionsData.status}` };\n      }\n\n      const leg = directionsData.routes[0].legs[0];\n      distanceKm = leg.distance.value / 1000; // Convert meters to km\n      distanceText = leg.distance.text;\n      durationText = leg.duration.text;\n\n      if (validatedData.serviceType === PrismaServiceTypeEnum.EXPRESS) {\n        price = obtenerPrecioExpressPorDistancia(distanceKm) ?? null;\n      } else if (validatedData.serviceType === PrismaServiceTypeEnum.LOW_COST) {\n        price = obtenerPrecioLowCostPorDistancia(distanceKm) ?? null;\n      } else {\n        price = null; // Should not happen if serviceType is validated\n        console.warn(\"Unknown service type for pricing:\", validatedData.serviceType);\n      }\n    }\n\n    return {\n      success: true,\n      data: {\n        price,\n        distanceText,\n        durationText,\n        originLat: originCoords.lat,\n        originLng: originCoords.lng,\n        destinationLat: destinationCoords.lat,\n        destinationLng: destinationCoords.lng,\n      },\n    };\n\n  } catch (error: unknown) {\n    if (error instanceof z.ZodError) {\n      return { success: false, error: \"Datos de entrada para cotizaci\u00f3n inv\u00e1lidos.\", fieldErrors: error.issues };\n    }\n    console.error('Error quoting shipment (outer catch):', error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    return { success: false, error: `Error al cotizar env\u00edo: ${errorMessage}` };\n  }\n}\n\n// --- Shipment Saving ---\nexport async function getAuthenticatedRepartidorIdFromServerSession(): Promise<number | null> {\n  console.warn(\"DEV MODE: `getAuthenticatedRepartidorIdFromServerSession` is using simulated authentication.\");\n  try {\n    const firstRepartidor = await prisma.repartidor.findFirst({ \n        where: { isActive: true } \n    }); \n    if (firstRepartidor) {\n      console.log(`DEV MODE: Using Repartidor ID ${firstRepartidor.id} for order creation authorization check.`);\n      return firstRepartidor.id;\n    }\n    console.error(\"DEV MODE: No active repartidor found for authorization check. Please seed repartidores.\");\n    return null;\n  } catch (e: unknown) {\n    const error = e instanceof Error ? e : new Error(String(e));\n    console.error(\"Error fetching placeholder repartidor:\", error.message);\n    return null;\n  }\n}\n\nconst saveShipmentSchema = z.object({\n  clientId: z.number().int().optional(),\n  \n  originFullName: z.string().min(3, 'Nombre del punto de recogida es requerido.'),\n  originPhone: z.string().regex(/^\\+?\\d{7,15}$/, 'Tel\u00e9fono de recogida inv\u00e1lido.'),\n  originAddress: z.string().min(5, 'La direcci\u00f3n de origen es requerida.'),\n  originLat: z.number(),\n  originLng: z.number(),\n\n  destinationContactName: z.string().min(3, 'Nombre del destinatario es requerido.'),\n  destinationContactPhone: z.string().regex(/^\\+?\\d{7,15}$/, 'Tel\u00e9fono del destinatario inv\u00e1lido.'),\n  destinationContactEmail: z.string().email('Email del destinatario inv\u00e1lido.').optional().or(z.literal('')),\n  destinationAddress: z.string().min(5, 'La direcci\u00f3n de destino es requerida.'),\n  destinationLat: z.number(),\n  destinationLng: z.number(),\n  \n  serviceType: z.nativeEnum(PrismaServiceTypeEnum),\n  quotedPrice: z.number().positive('El precio cotizado debe ser positivo.'),\n  distanceText: z.string().optional(),\n  durationText: z.string().optional(),\n  \n  clientNameAtOrder: z.string().optional(),\n  clientPhoneAtOrder: z.string().optional(),\n\n  pickupDate: z.coerce.date({ required_error: \"Fecha de retiro es requerida.\" }),\n  pickupTimeFrom: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para retiro desde.\"),\n  pickupTimeTo: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para retiro hasta.\"),\n  deliveryDate: z.coerce.date({ required_error: \"Fecha de entrega es requerida.\" }),\n  deliveryTimeFrom: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para entrega desde.\"),\n  deliveryTimeTo: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para entrega hasta.\"),\n  \n  shippingCost: z.number().positive().optional(),\n  totalCost: z.number().positive().optional(),\n})\n.refine(data => {\n    if(data.pickupTimeFrom && data.pickupTimeTo) return data.pickupTimeFrom < data.pickupTimeTo;\n    return true;\n}, { message: \"La hora de inicio de retiro debe ser anterior a la hora de fin.\", path: [\"pickupTimeTo\"] })\n.refine(data => {\n    if(data.deliveryTimeFrom && data.deliveryTimeTo) return data.deliveryTimeFrom < data.deliveryTimeTo;\n    return true;\n}, { message: \"La hora de inicio de entrega debe ser anterior a la hora de fin.\", path: [\"deliveryTimeTo\"] })\n.refine(data => {\n    if (data.pickupDate && data.deliveryDate) return data.pickupDate <= data.deliveryDate;\n    return true;\n}, {\n    message: \"La fecha de entrega no puede ser anterior a la fecha de retiro.\",\n    path: [\"deliveryDate\"],\n})\n.refine(data => {\n    if (data.pickupDate && data.deliveryDate && data.pickupDate.getTime() === data.deliveryDate.getTime()) { \n        const pickupEndMinutes = parseInt(data.pickupTimeTo.split(':')[0], 10) * 60 + parseInt(data.pickupTimeTo.split(':')[1], 10);\n        const deliveryStartMinutes = parseInt(data.deliveryTimeFrom.split(':')[0], 10) * 60 + parseInt(data.deliveryTimeFrom.split(':')[1], 10);\n        return deliveryStartMinutes > pickupEndMinutes;\n    }\n    return true;\n}, {\n    message: \"Si la entrega es el mismo d\u00eda, la hora 'desde' de entrega debe ser posterior a la hora 'hasta' de retiro.\",\n    path: [\"deliveryTimeFrom\"],\n});\n\n\nexport async function saveShipment(input: SaveShipmentInput): Promise<SaveShipmentResult> {\n  try {\n    const authenticatedRepartidorId = await getAuthenticatedRepartidorIdFromServerSession();\n    if (authenticatedRepartidorId === null) {\n      return { success: false, error: 'No autorizado. Debes ser un repartidor autenticado para crear \u00f3rdenes.' };\n    }\n\n    const validatedData = saveShipmentSchema.parse(input);\n    \n    const [pHoursFrom, pMinutesFrom] = validatedData.pickupTimeFrom.split(':').map(Number);\n    const finalPickupDateTime = new Date(validatedData.pickupDate);\n    finalPickupDateTime.setHours(pHoursFrom, pMinutesFrom, 0, 0);\n\n    const [dHoursFrom, dMinutesFrom] = validatedData.deliveryTimeFrom.split(':').map(Number);\n    const finalDeliveryDateTime = new Date(validatedData.deliveryDate);\n    finalDeliveryDateTime.setHours(dHoursFrom, dMinutesFrom, 0, 0);\n\n\n    const orderData: Prisma.OrderCreateInput = {\n      client: validatedData.clientId !== undefined ? { connect: { id: validatedData.clientId } } : undefined,\n      \n      originFullName: validatedData.originFullName,\n      originPhone: validatedData.originPhone,\n      originAddress: validatedData.originAddress, // Mapped to primary originAddress\n      originLat: new Prisma.Decimal(validatedData.originLat.toFixed(7)),\n      originLng: new Prisma.Decimal(validatedData.originLng.toFixed(7)),\n      \n      destinationContactName: validatedData.destinationContactName,\n      destinationContactPhone: validatedData.destinationContactPhone,\n      destinationContactEmail: validatedData.destinationContactEmail || null,\n      destinationAddress: validatedData.destinationAddress, // Mapped to primary destinationAddress\n      destinationLat: new Prisma.Decimal(validatedData.destinationLat.toFixed(7)),\n      destinationLng: new Prisma.Decimal(validatedData.destinationLng.toFixed(7)),\n      \n      serviceType: validatedData.serviceType,\n      quotedPrice: new Prisma.Decimal(validatedData.quotedPrice.toFixed(2)),\n      distanceText: validatedData.distanceText,\n      durationText: validatedData.durationText,\n      \n      clientNameAtOrder: validatedData.clientNameAtOrder || validatedData.destinationContactName,\n      clientPhoneAtOrder: validatedData.clientPhoneAtOrder || validatedData.destinationContactPhone,\n\n      pickupDate: validatedData.pickupDate, \n      pickupTimeFrom: validatedData.pickupTimeFrom,\n      pickupTimeTo: validatedData.pickupTimeTo,\n      \n      deliveryDate: validatedData.deliveryDate, \n      deliveryTimeFrom: validatedData.deliveryTimeFrom,\n      deliveryTimeTo: validatedData.deliveryTimeTo,\n\n      pickupDateTime: finalPickupDateTime, \n      deliveryDateTime: finalDeliveryDateTime,\n      \n      // The following fields (pickupStreetAddress, deliveryAddress) are nullable in your schema image.\n      // If they are distinct from originAddress/destinationAddress and need to be populated,\n      // ensure validatedData contains them or derive them appropriately.\n      // For now, to ensure the main non-nullable address fields are set, I'm focusing on those.\n      // If they are intended as aliases, the primary mapping above is correct.\n      // pickupStreetAddress: validatedData.originAddress, // This was the previous mapping\n      // deliveryAddress: validatedData.destinationAddress, // This was the previous mapping\n      \n      shippingCost: new Prisma.Decimal((validatedData.shippingCost ?? validatedData.quotedPrice).toFixed(2)),\n      totalCost: new Prisma.Decimal((validatedData.totalCost ?? validatedData.quotedPrice).toFixed(2)),\n      // status will default to \"pendiente\" as per Prisma schema\n    };\n\n    const order: PrismaOrder = await prisma.order.create({ data: orderData });\n    return { success: true, message: `Env\u00edo ${order.id} creado exitosamente.`, shipmentId: order.id as number };\n\n  } catch (error: unknown) {\n     if (error instanceof z.ZodError) {\n      console.error(\"Zod validation error during saveShipment:\", error.flatten().fieldErrors);\n      return { success: false, error: \"Error de validaci\u00f3n al guardar el env\u00edo.\", fieldErrors: error.issues };\n    }\n    if (error instanceof Prisma.PrismaClientKnownRequestError) {\n      console.error(\"Prisma Known Request Error on saveShipment:\", error.code, error.meta);\n      if (error.code === 'P2002') return { success: false, error: 'Error de duplicado al guardar el env\u00edo (P2002).' };\n      if (error.code === 'P2003') {\n         const fieldNameMeta = error.meta as { field_name?: string };\n         const fieldName = fieldNameMeta?.field_name;\n         if (fieldName && typeof fieldName === 'string') {\n            if (fieldName.includes('clientId_fkey')) return { success: false, error: 'El cliente especificado no existe (Error P2003 en clientId).' };\n         }\n        return { success: false, error: 'Error de referencia al guardar el env\u00edo (cliente no v\u00e1lido - P2003).' };\n      }\n      return { success: false, error: `Error de base de datos (${error.code}) al guardar el env\u00edo.` };\n    }\n    console.error('Error saving shipment (unknown):', error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    return { success: false, error: `Error inesperado al guardar el env\u00edo: ${errorMessage}` };\n  }\n}\n\n    \n"
            },
            {
              "name": "page.tsx",
              "type": "file",
              "content": "// src/app/ordenes/page.tsx\n\"use client\"; \n\nimport { Header } from \"@/components/header\";\nimport { GenerarEnvioForm } from \"@/components/ordenes/GenerarEnvioForm\";\nimport { Footer } from \"@/components/footer\"; \n// Toaster is already in RootLayout, so it's removed from here to avoid redundancy.\n\nexport default function OrdenesPage() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-grow container mx-auto px-2 sm:px-4 py-8\">\n        <GenerarEnvioForm />\n      </main>\n      <Footer />\n      {/* <Toaster /> Removed as it's in RootLayout */}\n    </div>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "page.tsx",
          "type": "file",
          "content": "import { OptimizedHeader } from \"@/components/homenew/optimized-header\"\nimport { EnhancedHero } from \"@/components/homenew/enhanced-hero\"\nimport { ServicesOverview } from \"@/components/homenew/services-overview\"\nimport { VisionSection } from \"@/components/homenew/vision-section\"\nimport { EntrepreneurSolutions } from \"@/components/homenew/entrepreneur-solutions\"\nimport { CtaSection } from \"@/components/homenew/cta-section\"\nimport { CarruselRedes } from \"@/components/homenew/carrusel-redes\"\nimport { Footer } from \"@/components/homenew/footer\"\n\nexport default function HomePage() {\n  return (\n    <div className=\"min-h-screen\">\n      <OptimizedHeader />\n      <EnhancedHero />\n      <ServicesOverview />\n      <VisionSection />\n      <EntrepreneurSolutions />\n      <CtaSection />\n      <CarruselRedes />\n      <Footer />\n    </div>\n  )\n}\n"
        },
        {
          "name": "politica-de-privacidad",
          "type": "directory",
          "children": [
            {
              "name": "page.tsx",
              "type": "file",
              "content": "import type { Metadata } from \"next\";\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Shield, FileText } from \"lucide-react\";\n\nexport const metadata: Metadata = {\n  title: \"Pol\u00edtica de Privacidad\",\n  description: \"Conoce c\u00f3mo Envios DosRuedas protege y gestiona tus datos personales. Nuestra pol\u00edtica de privacidad detalla la informaci\u00f3n que recopilamos y su uso.\",\n  robots: {\n    index: true,\n    follow: true,\n  }\n};\n\nexport default function PoliticaDePrivacidadPage() {\n  const sections = [\n    {\n      title: \"1. Informaci\u00f3n que Recopilamos\",\n      content: [\n        \"Recopilamos informaci\u00f3n que nos proporcionas directamente, como tu nombre, n\u00famero de tel\u00e9fono, direcci\u00f3n de correo electr\u00f3nico y direcciones de recogida/entrega al utilizar nuestros servicios.\",\n        \"Tambi\u00e9n podemos recopilar informaci\u00f3n t\u00e9cnica sobre tu dispositivo y uso de nuestro sitio web a trav\u00e9s de cookies y tecnolog\u00edas similares para mejorar la experiencia del usuario.\",\n      ],\n    },\n    {\n      title: \"2. Uso de la Informaci\u00f3n\",\n      content: [\n        \"Utilizamos tu informaci\u00f3n para proveer y gestionar nuestros servicios de env\u00edo, incluyendo la cotizaci\u00f3n, programaci\u00f3n, seguimiento y finalizaci\u00f3n de entregas.\",\n        \"Para comunicarnos contigo sobre el estado de tus env\u00edos, ofertas promocionales y actualizaciones importantes de nuestros servicios.\",\n        \"Para mejorar y personalizar nuestro sitio web y servicios, as\u00ed como para fines de an\u00e1lisis y estad\u00edsticos internos.\",\n      ],\n    },\n    {\n      title: \"3. C\u00f3mo Compartimos tu Informaci\u00f3n\",\n      content: [\n        \"No vendemos ni alquilamos tu informaci\u00f3n personal a terceros. Podemos compartir informaci\u00f3n con nuestros repartidores y socios log\u00edsticos con el \u00fanico fin de completar tu servicio de env\u00edo.\",\n        \"Podemos divulgar tu informaci\u00f3n si es requerido por ley o en respuesta a solicitudes v\u00e1lidas de autoridades p\u00fablicas.\",\n      ],\n    },\n    {\n      title: \"4. Seguridad de los Datos\",\n      content: [\n        \"Implementamos medidas de seguridad t\u00e9cnicas y organizativas para proteger tu informaci\u00f3n personal contra el acceso no autorizado, la alteraci\u00f3n, la divulgaci\u00f3n o la destrucci\u00f3n.\",\n      ],\n    },\n    {\n      title: \"5. Tus Derechos\",\n      content: [\n        \"Tienes derecho a acceder, rectificar o suprimir tus datos personales. Tambi\u00e9n puedes oponerte al tratamiento de tus datos en determinadas circunstancias. Para ejercer estos derechos, por favor cont\u00e1ctanos.\",\n      ],\n    },\n     {\n      title: \"6. Cambios en esta Pol\u00edtica\",\n      content: [\n        \"Nos reservamos el derecho de actualizar esta pol\u00edtica de privacidad en cualquier momento. Te notificaremos de cualquier cambio publicando la nueva pol\u00edtica en esta p\u00e1gina. Se te aconseja revisar esta pol\u00edtica peri\u00f3dicamente.\",\n      ],\n    },\n     {\n      title: \"7. Contacto\",\n      content: [\n        \"Si tienes alguna pregunta sobre esta Pol\u00edtica de Privacidad, puedes contactarnos a trav\u00e9s de nuestro formulario de contacto o en matiascejas@enviosdosruedas.com.\",\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-grow\">\n        <HeroSection\n          preTitle={\n            <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Shield className=\"w-8 h-8 text-primary\" />\n            </div>\n          }\n          title={<span className=\"text-primary\">Pol\u00edtica de Privacidad</span>}\n          description=\"En Envios DosRuedas, tu confianza es nuestra prioridad. Aqu\u00ed te explicamos c\u00f3mo protegemos y utilizamos tu informaci\u00f3n personal.\"\n          backgroundType=\"color\"\n          backgroundColor=\"bg-gray-50 dark:bg-gray-900\"\n          textColorClassName=\"text-foreground\"\n          minHeight=\"min-h-fit\"\n          className=\"py-12 md:py-16\"\n          titleClassName=\"text-3xl md:text-4xl font-bold\"\n        />\n\n        <div className=\"container mx-auto px-4 py-8 md:py-12 max-w-4xl\">\n          <Card className=\"shadow-lg\">\n            <CardHeader>\n               <CardTitle className=\"flex items-center gap-3 text-2xl\">\n                 <FileText className=\"h-6 w-6 text-primary\" />\n                 Detalles de nuestra pol\u00edtica\n               </CardTitle>\n                <div className=\"text-sm text-muted-foreground pt-2\">\n                    <p>\u00daltima actualizaci\u00f3n: 1 de Agosto de 2024</p>\n                    <p>\n                        Bienvenido a Envios DosRuedas. Nos comprometemos a proteger tu privacidad y a manejar tus datos personales de manera transparente y segura.\n                    </p>\n                </div>\n            </CardHeader>\n            <CardContent className=\"space-y-6 prose prose-lg dark:prose-invert max-w-none\">\n              {sections.map((section) => (\n                <div key={section.title}>\n                  <h3 className=\"font-semibold text-xl mb-2 text-primary\">{section.title}</h3>\n                  <div className=\"space-y-2 text-base text-muted-foreground\">\n                    {section.content.map((paragraph, index) => (\n                      <p key={index}>{paragraph}</p>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}"
            }
          ]
        },
        {
          "name": "robots.ts",
          "type": "file",
          "content": "import { MetadataRoute } from 'next'\n \nexport default function robots(): MetadataRoute.Robots {\n  // IMPORTANT: Replace with your actual production domain\n  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'https://enviosdosruedas.com';\n\n  return {\n    rules: {\n      userAgent: '*',\n      allow: '/',\n      disallow: ['/admin/'], // Disallow crawling of admin pages\n    },\n    sitemap: `${baseUrl}/sitemap.xml`,\n  }\n}\n"
        },
        {
          "name": "seguimiento",
          "type": "directory",
          "children": [
            {
              "name": "actions.ts",
              "type": "file",
              "content": "\n'use server';\n\nimport prisma from '@/lib/prisma';\nimport type { Order } from '@prisma/client';\n\nexport interface TrackingData {\n  order: Order;\n  pickupLocation: { lat: number; lng: number } | null;\n  deliveryLocation: { lat: number; lng: number } | null;\n  driverLocation: { lat: number; lng: number } | null; // Simulated\n  status: string; // Simulated\n  estimatedArrival: string; // Simulated, raw time or ISO string preferred\n  timeRemaining: string; // Simulated\n  driverInfo: {\n    name: string;\n    title: string;\n    photo: string;\n    phone: string;\n  }; // Simulated\n  updates: {\n    time: string; // Should be ISO string from server\n    status: string;\n    description: string;\n    icon: string;\n    isActive: boolean;\n  }[]; // Simulated\n}\n\nexport async function getOrderTrackingDetails(orderId: string): Promise<{ success: boolean; data?: TrackingData; error?: string }> {\n  try {\n    // Ensure orderId is treated as number if your Prisma schema ID is Int\n    const numericOrderId = parseInt(orderId, 10);\n    if (isNaN(numericOrderId)) {\n        return { success: false, error: `ID de pedido inv\u00e1lido: \"${orderId}\". Debe ser un n\u00famero.` };\n    }\n\n    const order = await prisma.order.findUnique({\n      where: { id: numericOrderId }, // Use numericOrderId\n    });\n\n    if (!order) {\n      return { success: false, error: `Pedido con ID \"${orderId}\" no encontrado.` };\n    }\n\n    const plainOrderObject = {\n      ...order,\n      // Convert all Decimal fields to numbers so they can be passed to client components\n      originLat: order.originLat?.toNumber() ?? null,\n      originLng: order.originLng?.toNumber() ?? null,\n      destinationLat: order.destinationLat?.toNumber() ?? null,\n      destinationLng: order.destinationLng?.toNumber() ?? null,\n      quotedPrice: order.quotedPrice?.toNumber() ?? null,\n      shippingCost: order.shippingCost?.toNumber() ?? null,\n      totalCost: order.totalCost?.toNumber() ?? null,\n    };\n    \n    // Use the coordinates stored in the order, don't geocode again.\n    const pickupLocation = plainOrderObject.originLat && plainOrderObject.originLng\n      ? { lat: plainOrderObject.originLat, lng: plainOrderObject.originLng }\n      : null;\n    \n    const deliveryLocation = plainOrderObject.destinationLat && plainOrderObject.destinationLng\n      ? { lat: plainOrderObject.destinationLat, lng: plainOrderObject.destinationLng }\n      : null;\n    \n    const driverLocation = pickupLocation || { lat: -38.0023, lng: -57.5575 }; \n\n    const now = new Date();\n    const estimatedArrivalTime = new Date(now.getTime() + 47 * 60000);\n\n    // Prepare pickupDateTime as ISO string for the 'updates' array\n    const pickupDateTimeISO = order.pickupDateTime ? order.pickupDateTime.toISOString() : new Date().toISOString();\n\n\n    const trackingData: TrackingData = {\n      order: plainOrderObject as any, // Cast to bypass strict type check for Decimal fields. The runtime object is what matters.\n      pickupLocation,\n      deliveryLocation,\n      driverLocation,\n      status: \"En curso\",\n      estimatedArrival: estimatedArrivalTime.toISOString(), // Return as ISO string\n      timeRemaining: \"47 minutos\", \n      driverInfo: {\n        name: \"Matias C.\",\n        title: \"Tu Conductor Asignado\",\n        photo: \"https://placehold.co/80x80.png\", \n        phone: \"02231234567\"\n      },\n      updates: [\n        {\n          time: pickupDateTimeISO, // Use ISO string\n          status: \"Pedido Recibido\",\n          description: `Tu pedido ${order.id} ha sido confirmado.`,\n          icon: \"started\",\n          isActive: true\n        },\n      ],\n    };\n\n    return { success: true, data: trackingData };\n  } catch (error) {\n    console.error('Error fetching order tracking details:', error);\n    if (error instanceof Error) {\n      return { success: false, error: error.message };\n    }\n    return { success: false, error: 'An unknown error occurred while fetching tracking details.' };\n  }\n}\n"
            },
            {
              "name": "page.tsx",
              "type": "file",
              "content": "\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport { OrderStatus } from \"@/components/tracking/order-status\";\nimport { DriverInfo } from \"@/components/tracking/driver-info\";\nimport { UpdatesTimeline } from \"@/components/tracking/updates-timeline\";\nimport { OrderDetails } from \"@/components/tracking/order-details\";\nimport { InteractiveTrackingMap } from \"@/components/tracking/interactive-tracking-map\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport Link from \"next/link\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, Search } from \"lucide-react\";\nimport type { TrackingData } from \"./actions\";\nimport { getOrderTrackingDetails } from \"./actions\";\nimport { format, parseISO, isValid } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\n\nexport default function SeguimientoPage() {\n  const { toast } = useToast();\n  const [orderIdInput, setOrderIdInput] = useState(\"\");\n  const [trackingData, setTrackingData] = useState<TrackingData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [formattedEstimatedArrival, setFormattedEstimatedArrival] = useState<string>(\"N/A\");\n\n  useEffect(() => {\n    if (trackingData?.estimatedArrival) {\n      try {\n        const dateObj = parseISO(trackingData.estimatedArrival);\n        if (isValid(dateObj)) {\n          setFormattedEstimatedArrival(format(dateObj, \"p\", { locale: es }));\n        } else {\n          setFormattedEstimatedArrival(\"Hora inv\u00e1lida\");\n        }\n      } catch (e) {\n        console.error(\"Error parsing estimated arrival for display:\", trackingData.estimatedArrival, e);\n        setFormattedEstimatedArrival(\"Hora inv\u00e1lida\");\n      }\n    } else {\n      setFormattedEstimatedArrival(\"N/A\");\n    }\n  }, [trackingData?.estimatedArrival]);\n\n\n  const handleTrackOrder = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!orderIdInput.trim()) {\n      toast({\n        title: \"Error de Entrada\",\n        description: \"Por favor, ingrese un ID de pedido.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setTrackingData(null);\n\n    const result = await getOrderTrackingDetails(orderIdInput.trim());\n\n    if (result.success && result.data) {\n      setTrackingData(result.data);\n    } else {\n      setError(result.error || \"No se pudieron obtener los detalles del seguimiento.\");\n      toast({\n        title: \"Error de Seguimiento\",\n        description: result.error || \"No se pudo encontrar el pedido o hubo un problema al obtener los datos.\",\n        variant: \"destructive\",\n      });\n    }\n    setIsLoading(false);\n  };\n  \n  const formatCurrency = (value: number | bigint | undefined | null): string => {\n    if (value === undefined || value === null) return \"$0.00\";\n    const numValue = typeof value === 'bigint' ? Number(value) : value;\n    return `$${numValue.toLocaleString('es-AR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  const mapCenter = trackingData?.driverLocation || trackingData?.pickupLocation || { lat: -38.0023, lng: -57.5575 };\n\n  const getPickupTimeForTimeline = () => {\n    // This ensures the raw ISO string is passed to UpdatesTimeline if it's the first update\n    // UpdatesTimeline will then format it client-side.\n    if (trackingData?.order?.pickupDateTime) {\n      const dateObj = typeof trackingData.order.pickupDateTime === 'string' \n                      ? parseISO(trackingData.order.pickupDateTime) \n                      : trackingData.order.pickupDateTime;\n      if (isValid(dateObj)) {\n        return dateObj.toISOString();\n      }\n    }\n    return new Date().toISOString(); // Fallback, though should be handled by server\n  };\n\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Header />\n\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        <div className=\"text-center mb-6\">\n          <Link href=\"/\">\n            <Button variant=\"outline\" className=\"text-primary border-primary hover:bg-accent\">\n              \u2190 Volver al Inicio\n            </Button>\n          </Link>\n        </div>\n\n        <div className=\"max-w-md mx-auto mb-8 p-6 bg-card rounded-lg shadow-sm border border-border\">\n          <form onSubmit={handleTrackOrder} className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold text-foreground text-center\">\n              Rastrear Pedido\n            </h2>\n            <div>\n              <label htmlFor=\"orderId\" className=\"block text-sm font-medium text-muted-foreground mb-1\">\n                ID del Pedido\n              </label>\n              <Input\n                id=\"orderId\"\n                type=\"text\"\n                value={orderIdInput}\n                onChange={(e) => setOrderIdInput(e.target.value)}\n                placeholder=\"Ej: 101 o tu ID de env\u00edo\"\n                className=\"w-full\"\n                required\n              />\n            </div>\n            <Button type=\"submit\" disabled={isLoading} className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\">\n              {isLoading ? (\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              ) : (\n                <Search className=\"mr-2 h-4 w-4\" />\n              )}\n              {isLoading ? \"Buscando...\" : \"Rastrear\"}\n            </Button>\n          </form>\n        </div>\n\n        {trackingData && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Left Column */}\n            <div className=\"space-y-6\">\n              <OrderStatus\n                status={trackingData.status}\n                estimatedArrival={formattedEstimatedArrival}\n                timeRemaining={trackingData.timeRemaining}\n              />\n\n              <DriverInfo driver={trackingData.driverInfo} />\n\n              <UpdatesTimeline updates={\n                  // Construct initial update with ISO string time for client-side formatting\n                  trackingData.order.pickupDateTime ? \n                  [\n                    {\n                      time: getPickupTimeForTimeline(), \n                      status: \"Pedido Recibido y Programado\",\n                      description: `Tu pedido ${trackingData.order.id} ha sido confirmado y programado para retiro.`,\n                      icon: \"started\",\n                      isActive: true\n                    },\n                     ...trackingData.updates.filter(u => u.icon !== 'started' && u.status !== \"Pedido Recibido\") \n                  ]\n                  : trackingData.updates\n                } \n              />\n\n\n              <OrderDetails\n                orderId={String(trackingData.order.id)} \n                orderSummary={{\n                  items: 1, \n                  subtotal: formatCurrency(trackingData.order.shippingCost), \n                  total: formatCurrency(trackingData.order.totalCost),\n                }}\n              />\n            </div>\n\n            {/* Right Column - Map */}\n            <div className=\"lg:sticky lg:top-6 h-[400px] lg:h-auto\">\n               <InteractiveTrackingMap\n                center={mapCenter}\n                pickupLocation={trackingData.pickupLocation || undefined}\n                deliveryLocation={trackingData.deliveryLocation || undefined}\n                driverLocation={trackingData.driverLocation || undefined}\n                orderId={String(trackingData.order.id)}\n              />\n            </div>\n          </div>\n        )}\n        {!isLoading && error && !trackingData && (\n          <div className=\"text-center py-10\">\n            <p className=\"text-red-600\">{error}</p>\n          </div>\n        )}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "servicios",
          "type": "directory",
          "children": [
            {
              "name": "envios-express",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import type { Metadata } from \"next\";\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport { ExpressPageClient } from \"@/components/express/express-page-client\";\n\nexport const metadata: Metadata = {\n  title: \"Env\u00edos Express Inmediatos en Mar del Plata\",\n  description:\n    \"Servicio de Env\u00edos Express en Mar del Plata. Entrega r\u00e1pida y garantizada el mismo d\u00eda para tus paquetes y documentos. Cotiza ahora.\",\n  keywords: \"envios express mar del plata, mensajeria urgente, delivery rapido, entrega mismo dia, paqueteria express\",\n};\n\nexport default function EnviosExpressPage() {\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Header />\n      <main className=\"flex-grow\">\n        <ExpressPageClient />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"
                }
              ]
            },
            {
              "name": "envios-lowcost",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import { Header } from \"@/components/header\"\nimport { LowcostHero } from \"@/components/lowcost/lowcost-hero\"\nimport { LowcostContent } from \"@/components/lowcost/lowcost-content\"\nimport { PricingComparison } from \"@/components/lowcost/pricing-comparison\"\nimport { LowcostBenefits } from \"@/components/lowcost/lowcost-benefits\"\nimport { HowLowcostWorks } from \"@/components/lowcost/how-lowcost-works\"\nimport { LowcostCta } from \"@/components/lowcost/lowcost-cta\"\nimport { Footer } from \"@/components/footer\"\nimport type { Metadata } from \"next\"\n\nexport const metadata: Metadata = {\n  title: \"Envios Low Cost - Envios DosRuedas | Mensajer\u00eda Econ\u00f3mica en Mar del Plata\",\n  description:\n    \"Servicio de mensajer\u00eda econ\u00f3mica con rutas optimizadas. Ahorra hasta 50% en tus env\u00edos sin sacrificar calidad.\",\n  keywords:\n    \"envios low cost, mensajeria economica, envios baratos, mar del plata, rutas optimizadas, envios programados\",\n}\n\nexport default function EnviosLowCostPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <main>\n        <LowcostHero />\n        <LowcostContent />\n        <PricingComparison />\n        <LowcostBenefits />\n        <HowLowcostWorks />\n        <LowcostCta />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
                }
              ]
            },
            {
              "name": "enviosflex",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import { Header } from \"@/components/header\"\nimport { EnviosFlexHero } from \"@/components/envios-flex/envios-flex-hero\"\nimport { EnviosFlexContent } from \"@/components/envios-flex/envios-flex-content\"\nimport { MercadoLibreBenefits } from \"@/components/envios-flex/mercadolibre-benefits\"\nimport { FlexPricingRanges } from \"@/components/envios-flex/flex-pricing-ranges\"\nimport { HowItWorks } from \"@/components/envios-flex/how-it-works\"\nimport { Requirements } from \"@/components/envios-flex/requirements\"\nimport { EnviosFlexCta } from \"@/components/envios-flex/envios-flex-cta\"\nimport { Footer } from \"@/components/footer\"\nimport type { Metadata } from \"next\"\n\nexport const metadata: Metadata = {\n  title: \"Envios Flex MercadoLibre - Envios DosRuedas | Potencia tus Ventas Online\",\n  description:\n    \"Servicio especializado de Envios Flex para vendedores de MercadoLibre. Entregas r\u00e1pidas garantizadas, integraci\u00f3n sencilla y amplia cobertura en Mar del Plata.\",\n  keywords:\n    \"envios flex, mercadolibre, vendedores online, entregas rapidas, mar del plata, reputacion vendedor, envios mismo dia\",\n}\n\nexport default function EnviosFlexPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <main>\n        <EnviosFlexHero />\n        <EnviosFlexContent />\n        <MercadoLibreBenefits />\n        <FlexPricingRanges />\n        <HowItWorks />\n        <Requirements />\n        <EnviosFlexCta />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
                }
              ]
            },
            {
              "name": "moto-fija",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import { Header } from \"@/components/header\"\nimport { MotoFijaHero } from \"@/components/moto-fija/moto-fija-hero\"\nimport { MotoFijaContent } from \"@/components/moto-fija/moto-fija-content\"\nimport { ServiceFeatures } from \"@/components/moto-fija/service-features\"\nimport { IdealClients } from \"@/components/moto-fija/ideal-clients\"\nimport { PricingPlans } from \"@/components/moto-fija/pricing-plans\"\nimport { MotoFijaCta } from \"@/components/moto-fija/moto-fija-cta\"\nimport { Footer } from \"@/components/footer\"\nimport type { Metadata } from \"next\"\n\nexport const metadata: Metadata = {\n  title: \"Moto Fija - Envios DosRuedas | Servicio de Delivery Dedicado para Empresas\",\n  description:\n    \"Servicio premium de moto fija con repartidor dedicado para tu negocio. Horarios personalizados, rutas optimizadas y comunicaci\u00f3n directa. Ideal para restaurantes y comercios.\",\n  keywords:\n    \"moto fija, delivery dedicado, repartidor exclusivo, servicio premium, restaurantes, comercios, mar del plata\",\n}\n\nexport default function MotoFijaPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <main>\n        <MotoFijaHero />\n        <MotoFijaContent />\n        <ServiceFeatures />\n        <IdealClients />\n        <PricingPlans />\n        <MotoFijaCta />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
                }
              ]
            },
            {
              "name": "plan-emprendedores",
              "type": "directory",
              "children": [
                {
                  "name": "page.tsx",
                  "type": "file",
                  "content": "import { Header } from \"@/components/header\"\nimport { EntrepreneurHero } from \"@/components/entrepreneur/entrepreneur-hero\"\nimport { PlanInformation } from \"@/components/entrepreneur/plan-information\"\nimport { EntrepreneurBenefits } from \"@/components/entrepreneur/entrepreneur-benefits\"\nimport { EntrepreneurPricingRanges } from \"@/components/entrepreneur/entrepreneur-pricing-ranges\"\nimport { EntrepreneurCta } from \"@/components/entrepreneur/entrepreneur-cta\"\nimport { Footer } from \"@/components/footer\"\nimport type { Metadata } from \"next\"\n\nexport const metadata: Metadata = {\n  title: \"Plan Emprendedores - Envios DosRuedas | Impulsa tu Negocio Online\",\n  description:\n    \"Plan especializado para emprendedores y negocios online. Tarifas preferenciales, flexibilidad horaria y soporte dedicado. Potencia tus ventas con env\u00edos profesionales.\",\n  keywords:\n    \"plan emprendedores, envios negocios online, tarifas preferenciales, emprendedores mar del plata, envios ecommerce\",\n}\n\nexport default function EntrepreneurPlanPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <main>\n        <EntrepreneurHero />\n        <PlanInformation />\n        <EntrepreneurBenefits />\n        <EntrepreneurPricingRanges />\n        <EntrepreneurCta />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n"
                }
              ]
            }
          ]
        },
        {
          "name": "sitemap.ts",
          "type": "file",
          "content": "import { MetadataRoute } from 'next'\n \nexport default function sitemap(): MetadataRoute.Sitemap {\n  // IMPORTANT: Replace with your actual production domain\n  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'https://enviosdosruedas.com';\n\n  const staticRoutes = [\n    '/',\n    '/contacto',\n    '/cotizar/express',\n    '/cotizar/lowcost',\n    '/nosotros/nuestras-redes',\n    '/nosotros/preguntas-frecuentes',\n    '/nosotros/sobre-nosotros',\n    '/servicios/envios-express',\n    '/servicios/envios-lowcost',\n    '/servicios/enviosflex',\n    '/servicios/moto-fija',\n    '/servicios/plan-emprendedores',\n    '/ordenes',\n    '/seguimiento',\n    '/politica-de-privacidad',\n    '/terminos-y-condiciones',\n  ];\n \n  return staticRoutes.map((route) => ({\n    url: `${baseUrl}${route}`,\n    lastModified: new Date(),\n    changeFrequency: 'weekly',\n    priority: route === '/' ? 1 : 0.8,\n  }));\n}"
        },
        {
          "name": "terminos-y-condiciones",
          "type": "directory",
          "children": [
            {
              "name": "page.tsx",
              "type": "file",
              "content": "import type { Metadata } from \"next\";\nimport { Header } from \"@/components/header\";\nimport { Footer } from \"@/components/footer\";\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { FileText, Handshake } from \"lucide-react\";\n\nexport const metadata: Metadata = {\n  title: \"T\u00e9rminos y Condiciones\",\n  description: \"Lee los t\u00e9rminos y condiciones del servicio de Envios DosRuedas. Al utilizar nuestros servicios, aceptas nuestras pol\u00edticas y procedimientos.\",\n  robots: {\n    index: true,\n    follow: true,\n  }\n};\n\nexport default function TerminosYCondicionesPage() {\n  const sections = [\n    {\n      title: \"1. Aceptaci\u00f3n de los T\u00e9rminos\",\n      content: [\n        \"Al solicitar o utilizar cualquiera de los servicios de env\u00edo proporcionados por Envios DosRuedas ('nosotros', 'nuestro'), usted ('el cliente', 'usuario') acepta y se compromete a cumplir con los siguientes t\u00e9rminos y condiciones. Si no est\u00e1 de acuerdo con estos t\u00e9rminos, no utilice nuestros servicios.\",\n      ],\n    },\n    {\n      title: \"2. Descripci\u00f3n del Servicio\",\n      content: [\n        \"Envios DosRuedas proporciona servicios de mensajer\u00eda y paqueter\u00eda local en Mar del Plata y \u00e1reas circundantes. Los detalles espec\u00edficos de cada servicio (Express, Low-Cost, etc.) se describen en las secciones correspondientes de nuestro sitio web.\",\n      ],\n    },\n    {\n      title: \"3. Obligaciones del Usuario\",\n      content: [\n        \"El cliente es responsable de proporcionar informaci\u00f3n precisa y completa para la recogida y entrega, incluyendo nombres, direcciones y n\u00fameros de tel\u00e9fono.\",\n        \"El cliente debe asegurarse de que el contenido del paquete sea legal y cumpla con nuestras pol\u00edticas. No transportamos art\u00edculos ilegales, peligrosos o prohibidos.\",\n        \"El embalaje adecuado del paquete para su transporte seguro es responsabilidad del cliente.\",\n      ],\n    },\n    {\n      title: \"4. Tarifas y Pago\",\n      content: [\n        \"Las tarifas se calculan en base a la distancia, el tipo de servicio y las caracter\u00edsticas del paquete, seg\u00fan se indica en nuestro cotizador. Las tarifas son finales a menos que haya cambios significativos en el servicio solicitado.\",\n        \"El pago debe realizarse en el momento de la solicitud o seg\u00fan los t\u00e9rminos acordados para clientes corporativos.\",\n      ],\n    },\n     {\n      title: \"5. Limitaci\u00f3n de Responsabilidad\",\n      content: [\n        \"No seremos responsables por retrasos causados por circunstancias fuera de nuestro control, como condiciones clim\u00e1ticas extremas, accidentes o cortes de tr\u00e1fico.\",\n      ],\n    },\n     {\n      title: \"6. Modificaciones de los T\u00e9rminos\",\n      content: [\n        \"Nos reservamos el derecho de modificar estos t\u00e9rminos y condiciones en cualquier momento. Las modificaciones ser\u00e1n efectivas inmediatamente despu\u00e9s de su publicaci\u00f3n en nuestro sitio web. El uso continuado de nuestros servicios constituir\u00e1 la aceptaci\u00f3n de los nuevos t\u00e9rminos.\",\n      ],\n    },\n  ];\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      <main className=\"flex-grow\">\n        <HeroSection\n          preTitle={\n            <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Handshake className=\"w-8 h-8 text-primary\" />\n            </div>\n          }\n          title={<span className=\"text-primary\">T\u00e9rminos y Condiciones</span>}\n          description=\"Las reglas del juego. Al usar nuestros servicios, aceptas estos t\u00e9rminos. Te recomendamos leerlos detenidamente.\"\n          backgroundType=\"color\"\n          backgroundColor=\"bg-gray-50 dark:bg-gray-900\"\n          textColorClassName=\"text-foreground\"\n          minHeight=\"min-h-fit\"\n          className=\"py-12 md:py-16\"\n          titleClassName=\"text-3xl md:text-4xl font-bold\"\n        />\n\n        <div className=\"container mx-auto px-4 py-8 md:py-12 max-w-4xl\">\n          <Card className=\"shadow-lg\">\n            <CardHeader>\n               <CardTitle className=\"flex items-center gap-3 text-2xl\">\n                 <FileText className=\"h-6 w-6 text-primary\" />\n                 Acuerdo de Servicio\n               </CardTitle>\n                <div className=\"text-sm text-muted-foreground pt-2\">\n                    <p>\u00daltima actualizaci\u00f3n: 1 de Agosto de 2024</p>\n                </div>\n            </CardHeader>\n            <CardContent className=\"space-y-6 prose prose-lg dark:prose-invert max-w-none\">\n              {sections.map((section) => (\n                <div key={section.title}>\n                  <h3 className=\"font-semibold text-xl mb-2 text-primary\">{section.title}</h3>\n                  <div className=\"space-y-2 text-base text-muted-foreground\">\n                    {section.content.map((paragraph, index) => (\n                      <p key={index}>{paragraph}</p>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "components",
      "type": "directory",
      "children": [
        {
          "name": "AboutSectionnuevo.tsx",
          "type": "file",
          "content": "\"use client\"\n\nimport { useRef } from \"react\"\nimport Image from \"next/image\"\nimport { motion, useScroll, useTransform } from \"framer-motion\"\nimport { Headphones, Music, Mic2, Award } from \"lucide-react\"\n\nconst achievements = [\n  { icon: <Headphones className=\"w-6 h-6\" />, label: \"Years of Experience\", value: \"10+\" },\n  { icon: <Music className=\"w-6 h-6\" />, label: \"Tracks Produced\", value: \"500+\" },\n  { icon: <Mic2 className=\"w-6 h-6\" />, label: \"Artists Collaborated\", value: \"100+\" },\n  { icon: <Award className=\"w-6 h-6\" />, label: \"Awards Won\", value: \"15+\" },\n]\n\nexport default function AboutSection() {\n  const ref = useRef(null)\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"end start\"],\n  })\n\n  const y = useTransform(scrollYProgress, [0, 1], [100, -100])\n  const opacity = useTransform(scrollYProgress, [0, 0.3, 0.6, 1], [0, 1, 1, 0])\n\n  return (\n    <section ref={ref} id=\"about\" className=\"py-20 relative overflow-hidden\">\n      <div className=\"container mx-auto px-4\">\n        <motion.div className=\"grid md:grid-cols-2 gap-12 items-center\" style={{ y, opacity }}>\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-white/10 to-white/0 rounded-3xl transform -rotate-6\"></div>\n            <Image\n              src=\"/placeholder.svg?height=600&width=600\"\n              alt=\"drannel\"\n              width={600}\n              height={600}\n              className=\"rounded-3xl relative z-10\"\n            />\n          </div>\n          <div>\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6\">About drannel</h2>\n            <p className=\"text-lg mb-6 text-zinc-300\">\n              drannel is not just a beat maker; he's a sonic architect crafting the soundscapes of tomorrow. With a\n              decade of experience and an ear for innovation, drannel pushes the boundaries of what's possible in music\n              production.\n            </p>\n            <p className=\"text-lg mb-8 text-zinc-300\">\n              From chart-topping hits to underground anthems, drannel's versatile style and meticulous attention to\n              detail ensure that each beat is not just a track, but a journey waiting to be explored by the right\n              artist.\n            </p>\n            <div className=\"grid grid-cols-2 gap-6\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.label}\n                  className=\"bg-zinc-900/50 rounded-lg p-4 border border-white/10\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <div className=\"mr-2 text-white\">{achievement.icon}</div>\n                    <div className=\"text-2xl font-bold\">{achievement.value}</div>\n                  </div>\n                  <div className=\"text-sm text-zinc-400\">{achievement.label}</div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n"
        },
        {
          "name": "InteractiveBackground.tsx",
          "type": "file",
          "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useEffect, useRef } from \"react\"\n\nconst InteractiveBackground: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) return\n\n    const ctx = canvas.getContext(\"2d\")\n    if (!ctx) return\n\n    let animationFrameId: number\n    let mouseX = 0\n    let mouseY = 0\n\n    const particles: Particle[] = []\n    const particleCount = 100\n\n    class Particle {\n      x: number\n      y: number\n      size: number\n      speedX: number\n      speedY: number\n      color: string\n\n      constructor() {\n        this.x = Math.random() * canvas.width\n        this.y = Math.random() * canvas.height\n        this.size = Math.random() * 5 + 1\n        this.speedX = Math.random() * 3 - 1.5\n        this.speedY = Math.random() * 3 - 1.5\n        this.color = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 255, 0.7)`\n      }\n\n      update() {\n        this.x += this.speedX + (mouseX - canvas.width / 2) * 0.01\n        this.y += this.speedY + (mouseY - canvas.height / 2) * 0.01\n\n        if (this.x < 0 || this.x > canvas.width) this.speedX *= -1\n        if (this.y < 0 || this.y > canvas.height) this.speedY *= -1\n      }\n\n      draw() {\n        ctx.fillStyle = this.color\n        ctx.beginPath()\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2)\n        ctx.fill()\n      }\n    }\n\n    const init = () => {\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle())\n      }\n    }\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      for (const particle of particles) {\n        particle.update()\n        particle.draw()\n      }\n      animationFrameId = requestAnimationFrame(animate)\n    }\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n    }\n\n    const handleMouseMove = (event: MouseEvent) => {\n      mouseX = event.clientX\n      mouseY = event.clientY\n    }\n\n    handleResize()\n    init()\n    animate()\n\n    window.addEventListener(\"resize\", handleResize)\n    window.addEventListener(\"mousemove\", handleMouseMove)\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n      cancelAnimationFrame(animationFrameId)\n    }\n  }, [])\n\n  return <canvas ref={canvasRef} className=\"fixed inset-0 w-full h-full -z-10\" />\n}\n\nexport default InteractiveBackground\n"
        },
        {
          "name": "about",
          "type": "directory",
          "children": [
            {
              "name": "about-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\n\nexport function AboutHero() {\n  return (\n    <HeroSection\n      title={<span className=\"text-yellow-400\">Envios DosRuedas</span>}\n      description={\n        <div className=\"mt-4\">\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mb-2 font-semibold\">Sobre Nosotros</h2>\n          <p className=\"text-lg md:text-xl text-primary-foreground/80 max-w-3xl mx-auto leading-relaxed\">\n            Resolvemos tus dudas sobre env\u00edos y delivery. \u00bfNo encuentras lo que buscas? \u00a1Cont\u00e1ctanos!\n          </p>\n        </div>\n      }\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner Sobre Nosotros Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[50vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"text-4xl md:text-5xl lg:text-6xl font-bold\"\n    />\n  );\n}\n"
            },
            {
              "name": "company-story.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Calendar, MapPin, TrendingUp, Award } from \"lucide-react\"\n\nexport function CompanyStory() {\n  const milestones = [\n    {\n      icon: Calendar,\n      year: \"2020\",\n      title: \"Nuestros Inicios\",\n      description: \"Comenzamos como un peque\u00f1o servicio de mensajer\u00eda local con una sola moto y mucha pasi\u00f3n.\",\n    },\n    {\n      icon: TrendingUp,\n      year: \"2021\",\n      title: \"Crecimiento\",\n      description: \"Expandimos nuestra flota y comenzamos a ofrecer servicios especializados para emprendedores.\",\n    },\n    {\n      icon: Award,\n      year: \"2022\",\n      title: \"Reconocimiento\",\n      description: \"Alcanzamos las 4.9 estrellas en Google Reviews y nos convertimos en referentes locales.\",\n    },\n    {\n      icon: MapPin,\n      year: \"2024\",\n      title: \"Expansi\u00f3n\",\n      description: \"Hoy cubrimos toda Mar del Plata y localidades cercanas con un equipo de profesionales.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Nuestra Historia</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Desde nuestros humildes comienzos hasta convertirnos en la empresa de confianza en Mar del Plata\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {milestones.map((milestone, index) => {\n            const IconComponent = milestone.icon\n            return (\n              <Card key={index} className=\"relative overflow-hidden hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center mb-4\">\n                    <div className=\"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mr-4\">\n                      <IconComponent className=\"w-6 h-6 text-yellow-600\" />\n                    </div>\n                    <span className=\"text-2xl font-bold text-yellow-500\">{milestone.year}</span>\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{milestone.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{milestone.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "company-values.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Heart, Zap, Shield, Users } from \"lucide-react\"\n\nexport function CompanyValues() {\n  const values = [\n    {\n      icon: Heart,\n      title: \"Compromiso\",\n      description: \"Nos comprometemos con cada env\u00edo como si fuera nuestro, garantizando el mejor servicio posible.\",\n    },\n    {\n      icon: Zap,\n      title: \"Rapidez\",\n      description: \"Entendemos que el tiempo es valioso, por eso optimizamos cada ruta para entregas m\u00e1s r\u00e1pidas.\",\n    },\n    {\n      icon: Shield,\n      title: \"Confiabilidad\",\n      description: \"Tu tranquilidad es nuestra prioridad. Cada paquete est\u00e1  monitoreado en tiempo real.\",\n    },\n    {\n      icon: Users,\n      title: \"Cercan\u00eda\",\n      description: \"Somos una empresa local que entiende las necesidades espec\u00edficas de Mar del Plata y su gente.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Nuestros Valores</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Los principios que gu\u00edan nuestro trabajo diario y nos permiten brindar un servicio excepcional\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {values.map((value, index) => {\n            const IconComponent = value.icon\n            return (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <IconComponent className=\"w-8 h-8 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{value.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{value.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "mission-vision.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Target, Eye, Lightbulb } from \"lucide-react\"\n\nexport function MissionVision() {\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Mission */}\n          <Card className=\"hover:shadow-lg transition-shadow duration-300\">\n            <CardContent className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Target className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <h3 className=\"text-2xl font-bold text-gray-800 mb-4\">Nuestra Misi\u00f3n</h3>\n              <p className=\"text-gray-600 leading-relaxed\">\n                Conectar personas y negocios en Mar del Plata a trav\u00e9s de un servicio de mensajer\u00eda y delivery\n                confiable, r\u00e1pido y accesible, contribuyendo al crecimiento de nuestra comunidad local.\n              </p>\n            </CardContent>\n          </Card>\n\n          {/* Vision */}\n          <Card className=\"hover:shadow-lg transition-shadow duration-300\">\n            <CardContent className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Eye className=\"w-8 h-8 text-yellow-600\" />\n              </div>\n              <h3 className=\"text-2xl font-bold text-gray-800 mb-4\">Nuestra Visi\u00f3n</h3>\n              <p className=\"text-gray-600 leading-relaxed\">\n                Ser la empresa l\u00edder en servicios de mensajer\u00eda y delivery en la regi\u00f3n, reconocida por nuestra\n                excelencia, innovaci\u00f3n y compromiso con la satisfacci\u00f3n del cliente.\n              </p>\n            </CardContent>\n          </Card>\n\n          {/* Innovation */}\n          <Card className=\"hover:shadow-lg transition-shadow duration-300\">\n            <CardContent className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Lightbulb className=\"w-8 h-8 text-green-600\" />\n              </div>\n              <h3 className=\"text-2xl font-bold text-gray-800 mb-4\">Innovaci\u00f3n</h3>\n              <p className=\"text-gray-600 leading-relaxed\">\n                Incorporamos constantemente nuevas tecnolog\u00edas y metodolog\u00edas para mejorar nuestros servicios y ofrecer\n                soluciones cada vez m\u00e1s eficientes a nuestros clientes.\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "team-section.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { User, Bike, Headphones, Settings } from \"lucide-react\"\n\nexport function TeamSection() {\n  const teamRoles = [\n    {\n      icon: User,\n      title: \"Equipo Directivo\",\n      description: \"Liderazgo comprometido con la excelencia en el servicio y la satisfacci\u00f3n del cliente.\",\n      count: \"3\",\n    },\n    {\n      icon: Bike,\n      title: \"Repartidores\",\n      description: \"Profesionales capacitados que conocen cada rinc\u00f3n de Mar del Plata para entregas eficientes.\",\n      count: \"15+\",\n    },\n    {\n      icon: Headphones,\n      title: \"Atenci\u00f3n al Cliente\",\n      description: \"Equipo dedicado a resolver consultas y brindar soporte personalizado las 24 horas.\",\n      count: \"5\",\n    },\n    {\n      icon: Settings,\n      title: \"Soporte T\u00e9cnico\",\n      description: \"Especialistas en log\u00edstica y tecnolog\u00eda que optimizan nuestros procesos continuamente.\",\n      count: \"4\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Nuestro Equipo</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Un equipo de profesionales apasionados por brindar el mejor servicio de mensajer\u00eda y delivery\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {teamRoles.map((role, index) => {\n            const IconComponent = role.icon\n            return (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"relative mb-4\">\n                    <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto\">\n                      <IconComponent className=\"w-8 h-8 text-blue-600\" />\n                    </div>\n                    <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center text-sm font-bold text-gray-900\">\n                      {role.count}\n                    </div>\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{role.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{role.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "who-we-are.tsx",
              "type": "file",
              "content": "import { Star } from \"lucide-react\"\n\nexport function WhoWeAre() {\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-yellow-500 mb-6\">Qui\u00e9nes Somos</h2>\n          <div className=\"w-24 h-1 bg-yellow-400 mx-auto mb-8\"></div>\n        </div>\n\n        <div className=\"space-y-8\">\n          <div className=\"text-center\">\n            <p className=\"text-lg md:text-xl text-gray-700 leading-relaxed mb-6\">\n              Envios DosRuedas es tu aliado confiable en mensajer\u00eda y delivery en Mar del Plata.\n            </p>\n\n            <div className=\"flex items-center justify-center mb-6\">\n              <div className=\"flex items-center space-x-1 mr-3\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <Star key={star} className=\"w-5 h-5 fill-yellow-400 text-yellow-400\" />\n                ))}\n              </div>\n              <span className=\"text-lg font-semibold text-gray-800\">4.9 estrellas en Google Reviews</span>\n            </div>\n\n            <p className=\"text-lg text-gray-700 leading-relaxed\">\n              Mantenemos una calificaci\u00f3n de 4.9 estrellas en Google Reviews gracias a la confianza de nuestros\n              clientes. Nos dedicamos a brindar soluciones r\u00e1pidas, seguras y econ\u00f3micas para todas tus necesidades de\n              env\u00edo.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "admin",
          "type": "directory",
          "children": [
            {
              "name": "AddPostForm.tsx",
              "type": "file",
              "content": "// src/components/admin/AddPostForm.tsx\n\"use client\";\n\nimport { useActionState, useEffect, useTransition } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { SocialPlatformEnum } from '@prisma/client';\n\nimport { addSocialPost } from '@/app/admin/actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Loader2, PlusCircle } from 'lucide-react';\nimport type { SocialPostState } from '@/app/admin/actions';\n\n// A flexible schema for image URLs, allowing local paths or full URLs\nconst imageUrlSchema = z.string().refine(val => val === '' || val.startsWith('/') || z.string().url().safeParse(val).success, {\n    message: \"Debe ser una URL de imagen v\u00e1lida o una ruta local (ej. /redes/foto.png).\"\n});\n\nconst addPostSchema = z.object({\n  platform: z.nativeEnum(SocialPlatformEnum, { required_error: 'La plataforma es requerida.' }),\n  content: z.string().min(10, { message: 'El contenido debe tener al menos 10 caracteres.' }),\n  postUrl: z.string().url({ message: \"Por favor, introduce una URL de publicaci\u00f3n v\u00e1lida.\" }),\n  imageUrl: imageUrlSchema.optional().or(z.literal('')),\n  imageHint: z.string().optional(),\n  likes: z.coerce.number().int().min(0).optional(),\n  comments: z.coerce.number().int().min(0).optional(),\n  shares: z.coerce.number().int().min(0).optional(),\n});\n\ntype AddPostFormValues = z.infer<typeof addPostSchema>;\n\nconst initialState: SocialPostState = {\n  message: undefined,\n  error: undefined,\n  fieldErrors: {},\n};\n\nfunction SubmitButton({ isPending }: { isPending: boolean }) {\n    return (\n        <Button type=\"submit\" disabled={isPending} className=\"w-full\">\n            {isPending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <PlusCircle className=\"mr-2 h-4 w-4\" />}\n            {isPending ? 'Agregando Publicaci\u00f3n...' : 'Agregar Publicaci\u00f3n'}\n        </Button>\n    )\n}\n\nexport function AddPostForm() {\n  const [state, formAction] = useActionState(addSocialPost, initialState);\n  const [isPending, startTransition] = useTransition();\n  const { toast } = useToast();\n\n  const form = useForm<AddPostFormValues>({\n    resolver: zodResolver(addPostSchema),\n    defaultValues: {\n      platform: SocialPlatformEnum.instagram,\n      content: '',\n      postUrl: '',\n      imageUrl: '',\n      imageHint: '',\n      likes: 0,\n      comments: 0,\n      shares: 0,\n    },\n  });\n\n  const { setError, reset } = form;\n\n  useEffect(() => {\n    if (state?.message) {\n      toast({\n        title: '\u00c9xito',\n        description: state.message,\n        variant: 'default',\n        className: 'bg-green-100 border-green-400 text-green-700',\n      });\n      reset();\n    }\n    if (state?.error) {\n      toast({\n        title: 'Error',\n        description: state.error,\n        variant: 'destructive',\n      });\n    }\n     if (state?.fieldErrors) {\n        for (const [fieldName, errors] of Object.entries(state.fieldErrors)) {\n          if (errors) {\n            setError(fieldName as keyof AddPostFormValues, {\n              type: 'server',\n              message: errors.join(', '),\n            });\n          }\n        }\n      }\n  }, [state, toast, setError, reset]);\n  \n  const handleFormSubmit = form.handleSubmit((data) => {\n    const formData = new FormData();\n    \n    Object.entries(data).forEach(([key, value]) => {\n      if (value !== null && value !== undefined) {\n          formData.append(key, String(value));\n      }\n    });\n\n    startTransition(() => {\n        formAction(formData);\n    });\n  });\n\n  return (\n    <Card className=\"max-w-2xl mx-auto shadow-lg\">\n      <CardHeader>\n        <CardTitle>Detalles de la Publicaci\u00f3n</CardTitle>\n        <CardDescription>Completa el formulario para agregar una nueva publicaci\u00f3n al feed de redes sociales.</CardDescription>\n      </CardHeader>\n      <Form {...form}>\n        <form onSubmit={handleFormSubmit}>\n          <CardContent className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"platform\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Plataforma</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Selecciona una plataforma\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value={SocialPlatformEnum.instagram}>Instagram</SelectItem>\n                      <SelectItem value={SocialPlatformEnum.facebook}>Facebook</SelectItem>\n                      <SelectItem value={SocialPlatformEnum.whatsapp}>WhatsApp</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"content\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Contenido del Post</FormLabel>\n                  <FormControl>\n                    <Textarea placeholder=\"Escribe el contenido de la publicaci\u00f3n aqu\u00ed...\" {...field} rows={5} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"postUrl\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>URL de la Publicaci\u00f3n</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"https://instagram.com/p/...\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"imageUrl\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Ruta o URL de la Imagen (Opcional)</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"Ej: /redes/mi-foto.png o https://...\" {...field} />\n                  </FormControl>\n                  <FormDescription>\n                    Para usar una imagen de tu proyecto, ingresa la ruta desde la carpeta `public`.\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"likes\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Likes (Opcional)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.value === '' ? '' : +e.target.value)} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"comments\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Comentarios (Opcional)</FormLabel>\n                    <FormControl>\n                       <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.value === '' ? '' : +e.target.value)} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"shares\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Compartidos (Opcional)</FormLabel>\n                    <FormControl>\n                       <Input type=\"number\" {...field} onChange={e => field.onChange(e.target.value === '' ? '' : +e.target.value)} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <SubmitButton isPending={isPending} />\n          </CardFooter>\n        </form>\n      </Form>\n    </Card>\n  );\n}\n"
            },
            {
              "name": "ordenes",
              "type": "directory",
              "children": [
                {
                  "name": "OrdenesTable.tsx",
                  "type": "file",
                  "content": "// src/components/admin/ordenes/OrdenesTable.tsx\n'use client';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n  TableCaption,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { MoreHorizontal, Pencil, Trash2 } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { es } from \"date-fns/locale\";\nimport type { Order as PrismaOrder, Client } from \"@prisma/client\";\nimport { deleteOrder } from '@/app/admin/ordenes/actions';\nimport { useToast } from \"@/hooks/use-toast\";\n\n// The formatted order type that the component will receive\ntype FormattedOrder = Omit<PrismaOrder, 'quotedPrice' | 'shippingCost' | 'totalCost' | 'originLat' | 'originLng' | 'destinationLat' | 'destinationLng' | 'client'> & {\n  quotedPrice: number;\n  shippingCost: number;\n  totalCost: number;\n  originLat: number | null;\n  originLng: number | null;\n  destinationLat: number | null;\n  destinationLng: number | null;\n  client: (Omit<Client, 'addressLat' | 'addressLng'> & {\n    addressLat: number | null;\n    addressLng: number | null;\n  }) | null;\n};\n\ninterface OrdenesTableProps {\n  orders: FormattedOrder[];\n}\n\nconst statusVariantMap: { [key: string]: \"default\" | \"secondary\" | \"destructive\" | \"outline\" } = {\n  'pendiente': 'outline',\n  'en_curso': 'secondary',\n  'entregado': 'default',\n  'cancelado': 'destructive',\n};\n\nexport function OrdenesTable({ orders }: OrdenesTableProps) {\n  const { toast } = useToast();\n\n  const handleDelete = async (orderId: number) => {\n    if (!confirm('\u00bfEst\u00e1s seguro de que deseas eliminar esta orden? Esta acci\u00f3n no se puede deshacer.')) {\n      return;\n    }\n\n    const result = await deleteOrder(orderId);\n\n    if (result.success) {\n      toast({\n        title: \"Orden Eliminada\",\n        description: `La orden #${orderId} ha sido eliminada. La lista se actualizar\u00e1.`,\n        variant: 'default',\n        className: \"bg-green-100 border-green-400 text-green-700\",\n      });\n    } else {\n      toast({\n        title: \"Error al Eliminar\",\n        description: result.error || \"No se pudo eliminar la orden.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  if (orders.length === 0) {\n    return (\n        <div className=\"text-center py-10 px-4 bg-gray-50 rounded-lg border-2 border-dashed\">\n            <h3 className=\"text-lg font-medium text-gray-800\">No hay \u00f3rdenes para mostrar</h3>\n            <p className=\"text-sm text-gray-500 mt-2\">Cuando se creen nuevas \u00f3rdenes, aparecer\u00e1n aqu\u00ed.</p>\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"border rounded-lg\">\n      <Table>\n        <TableCaption>Un listado de las \u00f3rdenes m\u00e1s recientes.</TableCaption>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"w-[80px]\">ID</TableHead>\n            <TableHead>Cliente</TableHead>\n            <TableHead>Origen</TableHead>\n            <TableHead>Destino</TableHead>\n            <TableHead>Estado</TableHead>\n            <TableHead>Fecha</TableHead>\n            <TableHead className=\"text-right\">Precio</TableHead>\n            <TableHead className=\"text-center w-[100px]\">Acciones</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {orders.map((order) => (\n            <TableRow key={order.id}>\n              <TableCell className=\"font-medium\">#{order.id}</TableCell>\n              <TableCell>{order.client?.name || order.clientNameAtOrder || \"N/A\"}</TableCell>\n              <TableCell>{order.originAddress}</TableCell>\n              <TableCell>{order.destinationAddress}</TableCell>\n              <TableCell>\n                <Badge variant={statusVariantMap[order.status] || 'default'} className=\"capitalize\">\n                  {order.status.replace('_', ' ')}\n                </Badge>\n              </TableCell>\n              <TableCell>\n                  {format(new Date(order.createdAt), \"dd MMM yyyy, p\", { locale: es })}\n              </TableCell>\n              <TableCell className=\"text-right\">${order.totalCost.toFixed(2)}</TableCell>\n              <TableCell className=\"text-center\">\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                      <span className=\"sr-only\">Abrir men\u00fa</span>\n                      <MoreHorizontal className=\"h-4 w-4\" />\n                    </Button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent align=\"end\">\n                    <DropdownMenuLabel>Acciones</DropdownMenuLabel>\n                    <DropdownMenuItem onSelect={() => alert('Funci\u00f3n de editar no implementada.')}>\n                      <Pencil className=\"mr-2 h-4 w-4\" />\n                      Editar\n                    </DropdownMenuItem>\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem \n                      className=\"text-destructive focus:text-destructive focus:bg-destructive/10\"\n                      onSelect={() => handleDelete(order.id)}\n                    >\n                      <Trash2 className=\"mr-2 h-4 w-4\" />\n                      Eliminar\n                    </DropdownMenuItem>\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"
                }
              ]
            }
          ]
        },
        {
          "name": "calculator",
          "type": "directory",
          "children": [
            {
              "name": "calculator-contact.tsx",
              "type": "file",
              "content": "\nimport { Button } from \"@/components/ui/button\";\nimport { Mail, Phone } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport default function CalculatorContact() {\n  return (\n    <section className=\"py-12 md:py-20 bg-background\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        <div className=\"bg-gradient-to-r from-primary to-primary/80 p-6 md:p-10 lg:p-12 rounded-lg shadow-xl text-center\">\n          <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-primary-foreground mb-3 md:mb-4\">\n            \u00bfDudas o Env\u00edos Especiales?\n          </h2>\n          <p className=\"text-md sm:text-lg md:text-xl text-primary-foreground/90 mb-6 md:mb-8 max-w-lg md:max-w-2xl mx-auto\">\n            Si tu env\u00edo excede nuestros rangos est\u00e1ndar, necesitas m\u00faltiples paradas, o tienes alguna consulta espec\u00edfica, no dudes en contactarnos.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center items-center gap-3 sm:gap-4\">\n            <Button size=\"lg\" variant=\"secondary\" asChild className=\"text-sm sm:text-base w-full sm:w-auto\">\n              <Link href=\"/contacto\">\n                <Mail className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5\" />\n                Formulario de Contacto\n              </Link>\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" asChild className=\"text-sm sm:text-base border-primary-foreground/50 text-primary-foreground hover:bg-primary-foreground/10 hover:text-primary focus-visible:ring-primary-foreground w-full sm:w-auto\">\n              <a href=\"tel:2236602699\">\n                <Phone className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5\" />\n                Ll\u00e1manos: 223-660-2699\n              </a>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "calculator-hero.tsx",
              "type": "file",
              "content": "\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, PackageSearch } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport default function CalculatorHero() {\n  return (\n    <section className=\"w-full py-12 md:py-20 lg:py-24 bg-gradient-to-br from-primary via-primary/90 to-primary/80 text-primary-foreground\">\n      <div className=\"container mx-auto px-4 md:px-6 text-center\">\n        <Badge variant=\"secondary\" className=\"text-sm sm:text-base py-1.5 px-4 shadow-lg mb-4 md:mb-6\">\n          <PackageSearch className=\"mr-2 h-4 w-4\" />\n          Cotizador Express\n        </Badge>\n        <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight mb-3 md:mb-4\">\n          Cotizador Env\u00edos <span className=\"text-secondary\">Express</span> \ud83d\ude80\n        </h1>\n        <p className=\"text-md sm:text-lg md:text-xl text-primary-foreground/90 max-w-2xl lg:max-w-3xl mx-auto mb-6 md:mb-8\">\n          Calcula el costo de tu env\u00edo urgente de forma r\u00e1pida y sencilla. Ingresa las direcciones de origen y destino para obtener tu cotizaci\u00f3n al instante.\n        </p>\n        <div className=\"flex flex-col sm:flex-row justify-center items-center gap-3 sm:gap-4\">\n          <Button size=\"lg\" asChild className=\"bg-secondary hover:bg-secondary/90 text-secondary-foreground w-full sm:w-auto\">\n            <Link href=\"/servicios/envios-express\">\n              M\u00e1s Sobre Env\u00edos Express\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "calculator-tips.tsx",
              "type": "file",
              "content": "\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Lightbulb, MapPin, Phone } from \"lucide-react\";\n\nconst tips = [\n  {\n    icon: <MapPin className=\"h-6 w-6 md:h-7 md:w-7 text-secondary\" />,\n    title: \"Direcciones Precisas\",\n    description: \"Aseg\u00farate de ingresar direcciones completas y exactas, incluyendo n\u00famero, barrio o referencias si es necesario.\",\n  },\n  {\n    icon: <Lightbulb className=\"h-6 w-6 md:h-7 md:w-7 text-secondary\" />,\n    title: \"Verifica en el Mapa\",\n    description: \"Una vez calculada la ruta, revisa que los puntos de origen y destino en el mapa sean los correctos.\",\n  },\n  {\n    icon: <Phone className=\"h-6 w-6 md:h-7 md:w-7 text-secondary\" />,\n    title: \"Datos de Contacto Claros\",\n    description: \"Al confirmar el env\u00edo (pr\u00f3ximamente), proporciona n\u00fameros de tel\u00e9fono v\u00e1lidos para origen y destino.\",\n  },\n];\n\nexport default function CalculatorTips() {\n  return (\n    <section className=\"py-12 md:py-16 bg-muted/30\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        <h2 className=\"text-3xl md:text-4xl font-bold text-center text-primary mb-3 md:mb-4\">\n          Consejos para una Cotizaci\u00f3n Exitosa\n        </h2>\n        <p className=\"text-lg md:text-xl text-muted-foreground text-center mb-8 md:mb-10 max-w-xl md:max-w-2xl mx-auto\">\n          Sigue estas recomendaciones para obtener la cotizaci\u00f3n m\u00e1s precisa y facilitar tu env\u00edo.\n        </p>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8\">\n          {tips.map((tip, index) => (\n            <Card \n              key={index} \n              className=\"bg-card shadow-lg text-center h-full flex flex-col transition-all duration-300 ease-out hover:shadow-xl hover:-translate-y-1\"\n            >\n              <CardHeader className=\"items-center pb-3\">\n                <div className=\"p-3 bg-secondary/10 rounded-full mb-2\">\n                    {tip.icon}\n                </div>\n                <CardTitle className=\"text-xl md:text-2xl\">{tip.title}</CardTitle>\n              </CardHeader>\n              <CardContent className=\"flex-grow pt-0\">\n                <CardDescription className=\"text-sm md:text-base\">{tip.description}</CardDescription>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "express-calculator.tsx",
              "type": "file",
              "content": "\n'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Calculator, Loader2, PackageCheck, RotateCcw, ThumbsUp, AlertTriangle } from 'lucide-react';\nimport React, { useState, FormEvent, useMemo } from 'react';\nimport RouteMap from './route-map';\nimport { useToast } from '@/hooks/use-toast';\nimport { quoteShipment } from '@/app/ordenes/actions';\nimport { ServiceTypeEnum } from '@prisma/client';\nimport type { QuoteDetails } from '@/types/order-actions';\nimport type { LatLngLiteral } from 'leaflet';\n\nexport default function ExpressCalculator() {\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [quoteDetails, setQuoteDetails] = useState<QuoteDetails | null>(null);\n  \n  const { toast } = useToast();\n\n  const mapCoordinates = useMemo(() => {\n    if (!quoteDetails) return null;\n    return {\n      origin: { lat: quoteDetails.originLat, lng: quoteDetails.originLng },\n      destination: { lat: quoteDetails.destinationLat, lng: quoteDetails.destinationLng },\n    };\n  }, [quoteDetails]);\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    if (!origin.trim() || !destination.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Campos incompletos\",\n        description: \"Por favor, ingresa la direcci\u00f3n de origen y destino.\",\n      });\n      return;\n    }\n    setIsCalculating(true);\n    setQuoteDetails(null);\n    \n    const result = await quoteShipment({\n        originAddress: origin,\n        destinationAddress: destination,\n        serviceType: ServiceTypeEnum.EXPRESS,\n    });\n\n    setIsCalculating(false);\n\n    if (result.success && result.data) {\n        setQuoteDetails(result.data);\n        const priceText = result.data.price !== null ? `$${result.data.price.toLocaleString('es-AR')}` : \"Consultar\";\n        toast({\n            title: \"Cotizaci\u00f3n Exitosa\",\n            description: `Distancia: ${result.data.distanceText}. Precio: ${priceText}`,\n            variant: \"default\",\n        });\n    } else {\n        toast({\n            variant: \"destructive\",\n            title: \"Error de C\u00e1lculo\",\n            description: result.error || \"No se pudo calcular la ruta o el precio. Verifica las direcciones o int\u00e9ntalo m\u00e1s tarde.\",\n        });\n    }\n  };\n\n  const handleNewQuote = () => {\n    setOrigin('');\n    setDestination('');\n    setQuoteDetails(null);\n    setIsCalculating(false);\n  };\n\n  return (\n    <section className=\"w-full py-12 md:py-16 bg-background\">\n      <div className=\"container mx-auto px-4 md:px-6 max-w-2xl lg:max-w-3xl\">\n        <Card className=\"shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl md:text-3xl text-primary\">Calcula tu Env\u00edo Express</CardTitle>\n            <CardDescription className=\"text-base md:text-lg mt-1\">\n              Ingresa las direcciones de origen y destino para obtener una cotizaci\u00f3n instant\u00e1nea.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4 md:space-y-6\">\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"origin\" className=\"text-sm md:text-base\">Direcci\u00f3n de Origen</Label>\n                <Input\n                  id=\"origin\"\n                  type=\"text\"\n                  placeholder=\"Ej: Av. Col\u00f3n 1234, Mar del Plata\"\n                  value={origin}\n                  onChange={(e) => setOrigin(e.target.value)}\n                  required\n                  className=\"text-sm md:text-base\"\n                />\n              </div>\n              <div className=\"space-y-1.5\">\n                <Label htmlFor=\"destination\" className=\"text-sm md:text-base\">Direcci\u00f3n de Destino</Label>\n                <Input\n                  id=\"destination\"\n                  type=\"text\"\n                  placeholder=\"Ej: Juan B. Justo 5678, Mar del Plata\"\n                  value={destination}\n                  onChange={(e) => setDestination(e.target.value)}\n                  required\n                  className=\"text-sm md:text-base\"\n                />\n              </div>\n              <Button type=\"submit\" className=\"w-full text-base py-2.5 md:py-3\" size=\"lg\" disabled={isCalculating}>\n                {isCalculating ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                    Calculando...\n                  </>\n                ) : (\n                  <>\n                    <Calculator className=\"mr-2 h-5 w-5\" />\n                    Calcular Ruta y Precio Express\n                  </>\n                )}\n              </Button>\n            </form>\n\n            {mapCoordinates && (\n              <RouteMap\n                origin={mapCoordinates.origin}\n                destination={mapCoordinates.destination}\n              />\n            )}\n            \n            {quoteDetails && !isCalculating && (\n              <Card className=\"mt-6 md:mt-8 bg-primary/5 border-primary/20\">\n                <CardHeader className=\"pb-4\">\n                  <CardTitle className=\"text-xl md:text-2xl text-primary flex items-center\">\n                    <PackageCheck className=\"mr-2 md:mr-3 h-6 w-6 md:h-7 md:w-7\" />\n                    Tu Cotizaci\u00f3n Express\n                  </CardTitle>\n                  <CardDescription className=\"text-sm md:text-base mt-1\">\n                    Basado en la distancia y tiempo estimados para tu env\u00edo.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-2 text-sm md:text-base\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-semibold text-foreground\">Distancia:</span>\n                    <span className=\"text-foreground\">{quoteDetails.distanceText || 'N/A'}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-semibold text-foreground\">Tiempo Estimado:</span>\n                    <span className=\"text-foreground\">{quoteDetails.durationText || 'N/A'}</span>\n                  </div>\n                  <hr className=\"my-2 border-border\" />\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-semibold text-lg md:text-xl text-primary\">Precio Estimado:</span>\n                    {quoteDetails.price !== null ? (\n                      <span className=\"text-lg md:text-xl font-bold text-primary\">${quoteDetails.price.toLocaleString('es-AR')}</span>\n                    ) : (\n                      <span className=\"text-lg md:text-xl font-bold text-amber-600\">Consultar</span>\n                    )}\n                  </div>\n                  {quoteDetails.price === null && (\n                    <p className=\"text-xs md:text-sm text-amber-700 text-center pt-1\">\n                      Distancia excede rangos est\u00e1ndar o no pudo ser calculada. Cont\u00e1ctanos para cotizaci\u00f3n.\n                    </p>\n                  )}\n                </CardContent>\n                <CardFooter className=\"flex flex-col sm:flex-row gap-2 sm:gap-3 pt-4 md:pt-6\">\n                  <Button \n                    size=\"lg\" \n                    className=\"w-full sm:w-auto bg-green-600 hover:bg-green-700 text-white text-sm md:text-base\" \n                    disabled={quoteDetails.price === null}\n                    onClick={() => alert('Funcionalidad \"Confirmar Env\u00edo\" pendiente de implementaci\u00f3n.')}\n                  >\n                    <ThumbsUp className=\"mr-2 h-4 w-4 md:h-5 md:w-5\" />\n                    Confirmar Env\u00edo Express\n                  </Button>\n                  <Button size=\"lg\" variant=\"outline\" className=\"w-full sm:w-auto text-sm md:text-base\" onClick={handleNewQuote}>\n                    <RotateCcw className=\"mr-2 h-4 w-4 md:h-5 md:w-5\" />\n                    Nueva Cotizaci\u00f3n\n                  </Button>\n                </CardFooter>\n              </Card>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "lowcost-calculator-hero.tsx",
              "type": "file",
              "content": "\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Coins } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport default function LowCostCalculatorHero() {\n  return (\n    <section className=\"w-full py-12 md:py-20 lg:py-28 bg-gradient-to-br from-primary via-primary/90 to-primary/80 text-primary-foreground\">\n      <div className=\"container mx-auto px-4 md:px-6 text-center\">\n        <Badge variant=\"secondary\" className=\"text-sm sm:text-base py-1.5 px-4 shadow-lg mb-6\">\n          <Coins className=\"mr-2 h-4 w-4\" />\n          Cotizador Low Cost\n        </Badge>\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-bold tracking-tight mb-4\">\n          Cotizador Env\u00edos <span className=\"text-secondary\">Low Cost</span> \ud83d\udcb0\n        </h1>\n        <p className=\"text-lg md:text-xl text-primary-foreground/90 max-w-3xl mx-auto mb-8\">\n          Encuentra la opci\u00f3n m\u00e1s econ\u00f3mica para tus env\u00edos programados. Ingresa origen y destino para ver tu cotizaci\u00f3n.\n        </p>\n        <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4\">\n          <Button size=\"lg\" asChild className=\"bg-secondary hover:bg-secondary/90 text-secondary-foreground\">\n            <Link href=\"/servicios/envios-lowcost\">\n              M\u00e1s Informaci\u00f3n sobre Env\u00edos Low Cost\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "lowcost-calculator.tsx",
              "type": "file",
              "content": "\n'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Calculator, Loader2, PackageCheck, RotateCcw, ThumbsUp } from 'lucide-react';\nimport React, { useState, FormEvent, useMemo } from 'react';\nimport RouteMap from './route-map';\nimport { useToast } from '@/hooks/use-toast';\nimport { quoteShipment } from '@/app/ordenes/actions';\nimport { ServiceTypeEnum } from '@prisma/client';\nimport type { QuoteDetails } from '@/types/order-actions';\nimport type { LatLngLiteral } from 'leaflet';\n\nexport default function LowCostCalculator() {\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [quoteDetails, setQuoteDetails] = useState<QuoteDetails | null>(null);\n\n  const { toast } = useToast();\n\n  const mapCoordinates = useMemo(() => {\n    if (!quoteDetails) return null;\n    return {\n      origin: { lat: quoteDetails.originLat, lng: quoteDetails.originLng },\n      destination: { lat: quoteDetails.destinationLat, lng: quoteDetails.destinationLng },\n    };\n  }, [quoteDetails]);\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    if (!origin.trim() || !destination.trim()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Campos incompletos\",\n        description: \"Por favor, ingresa la direcci\u00f3n de origen y destino.\",\n      });\n      return;\n    }\n    setIsCalculating(true);\n    setQuoteDetails(null);\n\n    const result = await quoteShipment({\n        originAddress: origin,\n        destinationAddress: destination,\n        serviceType: ServiceTypeEnum.LOW_COST,\n    });\n\n    setIsCalculating(false);\n\n    if (result.success && result.data) {\n        setQuoteDetails(result.data);\n        const priceText = result.data.price !== null ? `$${result.data.price.toLocaleString('es-AR')}` : \"Consultar\";\n        toast({\n            title: \"Cotizaci\u00f3n Exitosa\",\n            description: `Distancia: ${result.data.distanceText}. Precio: ${priceText}`,\n            variant: \"default\",\n        });\n    } else {\n        toast({\n            variant: \"destructive\",\n            title: \"Error de C\u00e1lculo\",\n            description: result.error || \"No se pudo calcular la ruta o el precio. Verifica las direcciones o int\u00e9ntalo m\u00e1s tarde.\",\n        });\n    }\n  };\n\n  const handleNewQuote = () => {\n    setOrigin('');\n    setDestination('');\n    setQuoteDetails(null);\n    setIsCalculating(false);\n  };\n\n  return (\n    <section className=\"w-full py-12 md:py-16 bg-background\">\n      <div className=\"container mx-auto px-4 md:px-6 max-w-3xl\">\n        <Card className=\"shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl md:text-3xl text-primary\">Calcula tu Env\u00edo Low Cost</CardTitle>\n            <CardDescription>\n              Ingresa las direcciones de origen y destino para obtener una cotizaci\u00f3n para env\u00edos programados.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"origin\" className=\"text-base\">Direcci\u00f3n de Origen</Label>\n                <Input\n                  id=\"origin\"\n                  type=\"text\"\n                  placeholder=\"Ej: Av. Col\u00f3n 1234, Mar del Plata\"\n                  value={origin}\n                  onChange={(e) => setOrigin(e.target.value)}\n                  required\n                  className=\"text-base\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"destination\" className=\"text-base\">Direcci\u00f3n de Destino</Label>\n                <Input\n                  id=\"destination\"\n                  type=\"text\"\n                  placeholder=\"Ej: Juan B. Justo 5678, Mar del Plata\"\n                  value={destination}\n                  onChange={(e) => setDestination(e.target.value)}\n                  required\n                  className=\"text-base\"\n                />\n              </div>\n              <Button type=\"submit\" className=\"w-full text-base py-3\" size=\"lg\" disabled={isCalculating}>\n                {isCalculating ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                    Calculando...\n                  </>\n                ) : (\n                  <>\n                    <Calculator className=\"mr-2 h-5 w-5\" />\n                    Calcular Ruta y Precio Low Cost\n                  </>\n                )}\n              </Button>\n            </form>\n\n            {mapCoordinates && (\n              <RouteMap\n                origin={mapCoordinates.origin}\n                destination={mapCoordinates.destination}\n              />\n            )}\n            \n            {quoteDetails && !isCalculating && (\n              <Card className=\"mt-8 bg-primary/5 border-primary/20\">\n                <CardHeader>\n                  <CardTitle className=\"text-xl md:text-2xl text-primary flex items-center\">\n                    <PackageCheck className=\"mr-3 h-7 w-7\" />\n                    Tu Cotizaci\u00f3n Low Cost\n                  </CardTitle>\n                  <CardDescription>\n                    Basado en la distancia y tiempo estimados para tu env\u00edo econ\u00f3mico.\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-3 text-base\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-semibold text-foreground\">Distancia:</span>\n                    <span className=\"text-foreground\">{quoteDetails.distanceText || 'N/A'}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-semibold text-foreground\">Tiempo Estimado:</span>\n                    <span className=\"text-foreground\">{quoteDetails.durationText || 'N/A'}</span>\n                  </div>\n                  <hr className=\"my-2 border-border\" />\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-semibold text-xl text-primary\">Precio Estimado:</span>\n                    {quoteDetails.price !== null ? (\n                      <span className=\"text-xl font-bold text-primary\">${quoteDetails.price.toLocaleString('es-AR')}</span>\n                    ) : (\n                      <span className=\"text-xl font-bold text-amber-600\">Consultar</span>\n                    )}\n                  </div>\n                  {quoteDetails.price === null && (\n                    <p className=\"text-sm text-amber-700 text-center pt-2\">\n                      La distancia excede nuestros rangos de precios est\u00e1ndar o no pudo ser calculada. Por favor, cont\u00e1ctanos para una cotizaci\u00f3n personalizada.\n                    </p>\n                  )}\n                </CardContent>\n                <CardFooter className=\"flex flex-col sm:flex-row gap-3 pt-6\">\n                  <Button \n                    size=\"lg\" \n                    className=\"w-full sm:w-auto bg-green-600 hover:bg-green-700 text-white\" \n                    disabled={quoteDetails.price === null}\n                    onClick={() => alert('Funcionalidad \"Confirmar Env\u00edo Low Cost\" pendiente de implementaci\u00f3n.')}\n                  >\n                    <ThumbsUp className=\"mr-2 h-5 w-5\" />\n                    Confirmar Env\u00edo Low Cost\n                  </Button>\n                  <Button size=\"lg\" variant=\"outline\" className=\"w-full sm:w-auto\" onClick={handleNewQuote}>\n                    <RotateCcw className=\"mr-2 h-5 w-5\" />\n                    Nueva Cotizaci\u00f3n\n                  </Button>\n                </CardFooter>\n              </Card>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "map-features.tsx",
              "type": "file",
              "content": "\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { CheckCircle, Map, Route } from \"lucide-react\";\n\nconst features = [\n  {\n    icon: <Map className=\"h-7 w-7 md:h-8 md:w-8 text-primary\" />,\n    title: \"Visualizaci\u00f3n en Mapa\",\n    description: \"Observa la ruta exacta que tomar\u00e1 tu env\u00edo en un mapa interactivo.\",\n  },\n  {\n    icon: <Route className=\"h-7 w-7 md:h-8 md:w-8 text-primary\" />,\n    title: \"C\u00e1lculo Preciso\",\n    description: \"Obt\u00e9n estimaciones de distancia y tiempo basadas en datos de tr\u00e1fico actualizados.\",\n  },\n  {\n    icon: <CheckCircle className=\"h-7 w-7 md:h-8 md:w-8 text-primary\" />,\n    title: \"Confirmaci\u00f3n F\u00e1cil\",\n    description: \"Una vez cotizado, puedes proceder a confirmar tu env\u00edo con pocos clics (pr\u00f3ximamente).\",\n  },\n];\n\nexport default function MapFeatures() {\n  return (\n    <section className=\"py-12 md:py-16 bg-muted/30\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        <h2 className=\"text-3xl md:text-4xl font-bold text-center text-primary mb-3 md:mb-4\">\n          Beneficios de Nuestro Cotizador\n        </h2>\n        <p className=\"text-lg md:text-xl text-muted-foreground text-center mb-8 md:mb-10 max-w-xl md:max-w-2xl mx-auto\">\n          Nuestra herramienta de cotizaci\u00f3n con mapa integrado te ofrece transparencia y control sobre tus env\u00edos.\n        </p>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8\">\n          {features.map((feature, index) => (\n            <Card \n              key={index} \n              className=\"shadow-lg hover:shadow-xl transition-all duration-300 ease-out hover:-translate-y-1\"\n            >\n              <CardHeader className=\"items-center text-center pb-3\">\n                {feature.icon}\n                <CardTitle className=\"mt-3 text-xl md:text-2xl\">{feature.title}</CardTitle>\n              </CardHeader>\n              <CardContent className=\"text-center pt-0\">\n                <p className=\"text-sm md:text-base text-muted-foreground\">{feature.description}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "pricing-info.tsx",
              "type": "file",
              "content": "\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { DollarSign, Scale, Clock } from \"lucide-react\";\n\nexport default function PricingInfo() {\n  return (\n    <section className=\"py-12 md:py-16 bg-background\">\n      <div className=\"container mx-auto px-4 md:px-6\">\n        <div className=\"max-w-xl md:max-w-3xl mx-auto text-center\">\n          <Badge variant=\"outline\" className=\"mb-3 md:mb-4 text-xs sm:text-sm py-1 px-3\">\n            Transparencia de Precios\n          </Badge>\n          <h2 className=\"text-3xl md:text-4xl font-bold text-primary mb-4 md:mb-6\">\n            \u00bfC\u00f3mo Calculamos el Precio?\n          </h2>\n          <p className=\"text-lg md:text-xl text-muted-foreground mb-8 md:mb-10\">\n            Nuestros precios se basan en la distancia. Queremos que siempre sepas qu\u00e9 est\u00e1s pagando.\n          </p>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 items-start\">\n          <Card className=\"shadow-md transition-all duration-300 ease-out hover:shadow-xl hover:-translate-y-1\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-xl md:text-2xl text-primary\">\n                <Scale className=\"mr-2 md:mr-3 h-5 w-5 md:h-6 md:w-6\" />\n                Basado en la Distancia\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground text-sm md:text-base\">\n                Utilizamos la distancia calculada entre origen y destino para determinar la tarifa base.\n                Contamos con rangos de precios predefinidos.\n              </p>\n              <ul className=\"mt-3 space-y-1.5 text-xs md:text-sm text-muted-foreground list-disc list-inside\">\n                <li>Rangos claros y sin sorpresas.</li>\n                <li>Precio justo por la distancia recorrida.</li>\n                <li>Cubre el esfuerzo y tiempo del repartidor.</li>\n              </ul>\n            </CardContent>\n          </Card>\n          <Card className=\"shadow-md transition-all duration-300 ease-out hover:shadow-xl hover:-translate-y-1\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-xl md:text-2xl text-primary\">\n                <Clock className=\"mr-2 md:mr-3 h-5 w-5 md:h-6 md:w-6\" />\n                Tiempo Estimado (Informativo)\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground text-sm md:text-base\">\n                El tiempo de entrega estimado se calcula utilizando datos de tr\u00e1fico (cuando la API lo permite) y la distancia.\n              </p>\n              <ul className=\"mt-3 space-y-1.5 text-xs md:text-sm text-muted-foreground list-disc list-inside\">\n                <li>Te ayuda a planificar mejor.</li>\n                <li>No afecta directamente el precio est\u00e1ndar.</li>\n                <li>Para servicios con espera, podr\u00edan aplicarse cargos.</li>\n              </ul>\n            </CardContent>\n          </Card>\n        </div>\n         <div className=\"mt-8 md:mt-10 text-center\">\n            <p className=\"text-sm md:text-base text-muted-foreground\">\n                Para distancias muy largas o fuera de cobertura habitual, el cotizador podr\u00eda indicar \"Consultar\".\n                En estos casos, te invitamos a <a href=\"/contacto\" className=\"text-primary hover:underline font-semibold\">contactarnos</a> para una cotizaci\u00f3n personalizada.\n            </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "route-map.tsx",
              "type": "file",
              "content": "\n'use client';\n\nimport { GoogleMap, useJsApiLoader, DirectionsRenderer } from '@react-google-maps/api';\nimport { AlertTriangle } from 'lucide-react';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Skeleton } from '../ui/skeleton';\n\n// Use a more specific type from google.maps namespace if available\n// For simplicity, using a generic literal type that's compatible.\ninterface LatLngLiteral {\n  lat: number;\n  lng: number;\n}\n\ninterface RouteMapProps {\n  origin?: LatLngLiteral;\n  destination?: LatLngLiteral;\n}\n\nconst mapContainerStyle = {\n  height: '320px',\n  width: '100%',\n  borderRadius: '0.5rem',\n};\n\nconst mapOptions = {\n  disableDefaultUI: true,\n  zoomControl: true,\n  center: {\n    lat: -38.0055,\n    lng: -57.5426,\n  },\n  zoom: 12,\n};\n\nconst PLACEHOLDER_API_KEY_MESSAGE = \"La clave API de Google Maps no est\u00e1 configurada o es inv\u00e1lida. El mapa no se puede mostrar.\";\nconst GENERIC_API_ERROR_MESSAGE = \"Error al cargar Google Maps. Por favor, intenta de nuevo m\u00e1s tarde.\";\nconst INVALID_API_KEY_PLACEHOLDERS = [\"YOUR_API_KEY_HERE\", \"YOUR_GOOGLE_MAPS_API_KEY\", \"\"];\n\nexport default function RouteMap({ origin, destination }: RouteMapProps) {\n  const googleMapsApiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || \"\";\n  const [directionsResponse, setDirectionsResponse] = useState<google.maps.DirectionsResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [apiKeyError, setApiKeyError] = useState<boolean>(false);\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: googleMapsApiKey,\n    libraries: ['places'],\n  });\n\n  useEffect(() => {\n    if (INVALID_API_KEY_PLACEHOLDERS.includes(googleMapsApiKey)) {\n      setApiKeyError(true);\n    }\n  }, [googleMapsApiKey]);\n\n  const calculateRoute = useCallback(() => {\n    if (!origin || !destination || !isLoaded || apiKeyError || !window.google) {\n      return;\n    }\n\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK && result) {\n          setDirectionsResponse(result);\n          setError(null);\n        } else {\n          console.error(`Error fetching directions ${result}`, status);\n          setError(\"No se pudo trazar la ruta. Verifica que las direcciones sean v\u00e1lidas y est\u00e9n dentro de la zona de cobertura.\");\n          setDirectionsResponse(null);\n        }\n      }\n    );\n  }, [origin, destination, isLoaded, apiKeyError]);\n\n  useEffect(() => {\n    if (origin && destination) {\n        calculateRoute();\n    } else {\n        setDirectionsResponse(null);\n    }\n  }, [origin, destination, calculateRoute]);\n\n  if (apiKeyError) {\n    return (\n      <Card className=\"mt-6 border-destructive bg-destructive/10\">\n        <CardContent className=\"p-4 flex items-center justify-center\">\n            <AlertTriangle className=\"h-5 w-5 text-destructive mr-2\" />\n            <p className=\"text-destructive text-sm\">{PLACEHOLDER_API_KEY_MESSAGE}</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (loadError) {\n     return (\n      <Card className=\"mt-6 border-destructive bg-destructive/10\">\n         <CardContent className=\"p-4 flex items-center justify-center\">\n            <AlertTriangle className=\"h-5 w-5 text-destructive mr-2\" />\n            <p className=\"text-destructive text-sm\">{GENERIC_API_ERROR_MESSAGE}</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n        <div className=\"mt-6 space-y-4\">\n            <Skeleton className=\"h-[320px] w-full rounded-md\" />\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-6\">\n       {error && (\n        <Card className=\"mb-4 border-destructive bg-destructive/10\">\n            <CardContent className=\"p-4 text-center text-destructive text-sm\">\n                {error}\n            </CardContent>\n        </Card>\n      )}\n      <div className=\"rounded-lg overflow-hidden\">\n        <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            options={mapOptions}\n            center={origin || mapOptions.center}\n            zoom={mapOptions.zoom}\n        >\n            {directionsResponse && <DirectionsRenderer directions={directionsResponse} options={{ suppressMarkers: true }} />}\n        </GoogleMap>\n      </div>\n    </div>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "contact",
          "type": "directory",
          "children": [
            {
              "name": "business-hours.tsx",
              "type": "file",
              "content": "// src/components/contact/business-hours.tsx\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Clock, Calendar, AlertTriangle } from \"lucide-react\"\nimport { motion } from \"framer-motion\";\n\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: (i: number) => ({\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: i * 0.15,\n      duration: 0.4,\n      ease: \"easeOut\",\n    },\n  }),\n};\n\nexport function BusinessHours() {\n  const schedule = [\n    { day: \"Lunes - Viernes\", hours: \"9:00 - 18:00\" },\n    { day: \"S\u00e1bados\", hours: \"10:00 - 15:00 \" },\n    { day: \"Domingos\", hours: \"Cerrado\" },\n  ]\n\n  return (\n    <section className=\"py-12 md:py-16 px-4 bg-background\">\n      <div className=\"container mx-auto\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center mb-10 md:mb-12\">\n            <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-foreground mb-3 sm:mb-4\">Horarios de Atenci\u00f3n</h2>\n            <p className=\"text-base sm:text-lg text-muted-foreground\">Estamos disponibles para atenderte en los siguientes horarios.</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 sm:gap-8\">\n            {/* Schedule Card */}\n            <motion.div\n              custom={0}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true, amount: 0.2 }}\n              variants={cardVariants}\n            >\n              <Card className=\"hover:shadow-lg transition-shadow duration-300 h-full border-border\">\n                <CardHeader className=\"pb-3 sm:pb-4\">\n                  <CardTitle className=\"flex items-center text-lg sm:text-xl text-primary\">\n                    <Calendar className=\"w-5 h-5 sm:w-6 sm:h-6 mr-2\" />\n                    Horarios Regulares\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {schedule.map((item, index) => (\n                      <div\n                        key={index}\n                        className=\"flex justify-between items-center py-2 border-b border-border/50 last:border-b-0 text-sm sm:text-base\"\n                      >\n                        <span className=\"font-medium text-foreground\">{item.day}</span>\n                        <span className=\"text-muted-foreground\">{item.hours}</span>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Emergency Contact */}\n            <motion.div\n              custom={1}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true, amount: 0.2 }}\n              variants={cardVariants}\n            >\n             \n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "contact-form.tsx",
              "type": "file",
              "content": "// src/components/contact/contact-form.tsx\n\"use client\"\n\nimport type React from \"react\"\nimport { useActionState, useEffect } from 'react'; // Corrected: useActionState and useEffect from 'react'\nimport { useFormStatus } from 'react-dom'; // Corrected: useFormStatus from 'react-dom'\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport * as z from \"zod\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Send, CheckCircle, Loader2, User, MailIcon as Mail, Phone, MessageSquare, Briefcase } from \"lucide-react\" // Aliased MailIcon to Mail\nimport { submitContactForm } from '@/app/actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { motion } from \"framer-motion\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, { message: 'El nombre es requerido y debe tener al menos 2 caracteres.' }),\n  lastName: z.string().min(2, { message: 'El apellido es requerido y debe tener al menos 2 caracteres.' }).optional().or(z.literal('')),\n  email: z.string().email({ message: 'Por favor, introduce un email v\u00e1lido.' }),\n  phone: z.string().optional().or(z.literal('')),\n  service: z.string().optional(),\n  message: z.string().min(10, { message: 'El mensaje debe tener al menos 10 caracteres.' }).max(1000, { message: 'El mensaje no debe exceder los 1000 caracteres.'}),\n});\n\ntype ContactFormValues = z.infer<typeof contactFormSchema>;\n\nconst initialState = {\n  message: undefined,\n  error: undefined,\n  fieldErrors: {},\n  formError: undefined,\n  timestamp: Date.now(),\n};\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground py-3 text-base\" size=\"lg\">\n      {pending ? (\n        <>\n          <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n          Enviando...\n        </>\n      ) : (\n        <>\n          <Send className=\"mr-2 h-5 w-5\" />\n          Enviar Mensaje\n        </>\n      )}\n    </Button>\n  );\n}\n\nexport function ContactForm() {\n  const [state, formAction] = useActionState(submitContactForm, initialState);\n  const { toast } = useToast();\n\n  const form = useForm<ContactFormValues>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      service: '',\n      message: '',\n    },\n    errors: state?.fieldErrors ? state.fieldErrors as any : {},\n  });\n\n   useEffect(() => {\n    if (state?.timestamp && state.timestamp > (initialState.timestamp || 0)) { // Check if state is new\n        if (state.message) {\n          toast({\n            title: \"Mensaje Enviado\",\n            description: state.message,\n            className: \"bg-green-100 border-green-400 text-green-700\",\n          });\n          form.reset(); // Reset form on successful submission\n        }\n        if (state.error) {\n          toast({\n            variant: \"destructive\",\n            title: \"Error al Enviar\",\n            description: state.error,\n          });\n        }\n        if (state.formError) {\n           toast({\n            variant: \"destructive\",\n            title: \"Error en el Formulario\",\n            description: state.formError,\n          });\n        }\n        if (state.fieldErrors) {\n          const fieldErrors = state.fieldErrors;\n          (Object.keys(fieldErrors) as Array<keyof ContactFormValues>).forEach((key) => {\n            if (form.getFieldState(key)) { // Check if field exists in form\n                 form.setError(key, { type: 'server', message: fieldErrors[key]?.join(', ') });\n            }\n          });\n        }\n    }\n  }, [state, toast, form]);\n\n  if (state?.message && state.timestamp > (initialState.timestamp || 0)) {\n    return (\n       <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>\n        <Card className=\"max-w-2xl mx-auto shadow-lg border-green-300 bg-green-50\">\n            <CardContent className=\"p-8 text-center\">\n            <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\n            <h3 className=\"text-2xl font-bold text-green-700 mb-2\">\u00a1Mensaje Enviado!</h3>\n            <p className=\"text-green-600\">{state.message}</p>\n            </CardContent>\n        </Card>\n      </motion.div>\n    );\n  }\n\n  return (\n    <Card className=\"max-w-2xl mx-auto shadow-xl border-border\">\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-2xl md:text-3xl font-semibold text-center text-foreground\">Env\u00edanos un Mensaje</CardTitle>\n        <CardDescription className=\"text-center text-sm sm:text-base text-muted-foreground\">\n          Resolveremos tus dudas a la brevedad.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-2 sm:pt-4\">\n        <Form {...form}>\n            <form action={formAction} className=\"space-y-5 sm:space-y-6\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-5\">\n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"flex items-center\"><User className=\"w-4 h-4 mr-2 text-muted-foreground\"/>Nombre *</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Tu nombre\" {...field} className=\"h-11 text-base\"/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"lastName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"flex items-center\"><User className=\"w-4 h-4 mr-2 text-muted-foreground\"/>Apellido</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Tu apellido\" {...field} className=\"h-11 text-base\"/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"flex items-center\"><Mail className=\"w-4 h-4 mr-2 text-muted-foreground\"/>Email *</FormLabel>\n                  <FormControl>\n                    <Input type=\"email\" placeholder=\"tu@email.com\" {...field} className=\"h-11 text-base\"/>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"flex items-center\"><Phone className=\"w-4 h-4 mr-2 text-muted-foreground\"/>Tel\u00e9fono (Opcional)</FormLabel>\n                  <FormControl>\n                    <Input type=\"tel\" placeholder=\"Ej: 223-000-0000\" {...field} className=\"h-11 text-base\"/>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"service\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"flex items-center\"><Briefcase className=\"w-4 h-4 mr-2 text-muted-foreground\"/>Servicio de Inter\u00e9s (Opcional)</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger className=\"h-11 text-base\">\n                        <SelectValue placeholder=\"Selecciona un servicio\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"envios-express\">Env\u00edos Express</SelectItem>\n                      <SelectItem value=\"envios-lowcost\">Env\u00edos LowCost</SelectItem>\n                      <SelectItem value=\"moto-fija\">Moto Fija</SelectItem>\n                      <SelectItem value=\"plan-emprendedores\">Plan Emprendedores</SelectItem>\n                      <SelectItem value=\"envios-flex\">Env\u00edos Flex MercadoLibre</SelectItem>\n                      <SelectItem value=\"otro\">Otro / Consulta General</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"message\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"flex items-center\"><MessageSquare className=\"w-4 h-4 mr-2 text-muted-foreground\"/>Mensaje *</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Cu\u00e9ntanos sobre tu consulta o necesidad de env\u00edo...\"\n                      rows={5}\n                      {...field}\n                      className=\"text-base\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <div className=\"pt-2\">\n                <SubmitButton />\n            </div>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  )\n}\n"
            },
            {
              "name": "contact-hero.tsx",
              "type": "file",
              "content": "// This file is no longer needed and will be deleted.\n// The functionality has been moved to src/components/ui/HeroSection.tsx\n// and implemented in src/app/contacto/page.tsx.\n"
            },
            {
              "name": "contact-info.tsx",
              "type": "file",
              "content": "// src/components/contact/contact-info.tsx\n\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Phone, Home, Mail, Facebook, Instagram } from \"lucide-react\"\nimport { motion } from \"framer-motion\"\nimport Image from \"next/image\"\nimport type React from 'react';\n\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: (i: number) => ({\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: i * 0.15,\n      duration: 0.4,\n      ease: \"easeOut\",\n    },\n  }),\n};\n\n// Define an interface for the contact methods to solve the TS error\ninterface ContactMethod {\n  icon: React.ElementType | null;\n  title: string;\n  description: string;\n  actionText: string;\n  href?: string;\n  onClick?: () => void;\n  colorClasses: string;\n  iconBg: string;\n  iconColor: string;\n}\n\nexport function ContactInfo() {\n  const handleWhatsAppClick = () => {\n    const phoneNumber = \"5492236602699\"\n    const message = \"Hola, me gustar\u00eda obtener informaci\u00f3n sobre sus servicios de env\u00edo.\"\n    const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`\n    window.open(whatsappUrl, \"_blank\")\n  }\n\n  const contactMethods: ContactMethod[] = [\n    {\n      icon: Mail,\n      title: \"Email\",\n      description: \"Para consultas detalladas o corporativas.\",\n      actionText: \"Enviar Email\",\n      href: \"mailto:matiascejas@enviosdosruedas.com\",\n      colorClasses: \"border-yellow-500 text-yellow-600 hover:bg-yellow-500 hover:text-white\",\n      iconBg: \"bg-yellow-100\",\n      iconColor: \"text-yellow-600\",\n    },\n    {\n      icon: Facebook,\n      title: \"Facebook\",\n      description: \"S\u00edguenos para novedades y promociones.\",\n      actionText: \"Ir a Facebook\",\n      href: \"https://facebook.com/enviosdosruedas\",\n      colorClasses: \"border-blue-800 text-blue-800 hover:bg-blue-800 hover:text-white\",\n      iconBg: \"bg-blue-100\",\n      iconColor: \"text-blue-800\",\n    },\n    {\n      icon: Instagram,\n      title: \"Instagram\",\n      description: \"Mira nuestro d\u00eda a d\u00eda y ofertas visuales.\",\n      actionText: \"Ir a Instagram\",\n      href: \"https://instagram.com/enviosdosruedas\",\n      colorClasses: \"border-pink-500 text-pink-500 hover:bg-pink-500 hover:text-white\",\n      iconBg: \"bg-pink-100\",\n      iconColor: \"text-pink-500\",\n    },\n  ];\n\n  return (\n    <section className=\"py-12 md:py-16 px-4 bg-gray-50 dark:bg-slate-900\">\n      <div className=\"container mx-auto\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Main Contact Card */}\n          <motion.div\n            custom={0}\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true, amount: 0.2 }}\n            variants={cardVariants}\n          >\n            <Card className=\"mb-8 sm:mb-10 shadow-lg border-primary/20\">\n              <CardContent className=\"p-6 sm:p-8 text-center\">\n                <div className=\"flex items-center justify-center mb-2 sm:mb-3\">\n                    <Home className=\"w-7 h-7 sm:w-8 sm:h-8 text-primary mr-2 sm:mr-3\" />\n                    <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-primary\">Envios DosRuedas</h2>\n                </div>\n                <p className=\"text-sm sm:text-base text-muted-foreground mb-4 sm:mb-6\">Mensajer\u00eda y Delivery</p>\n\n                <div className=\"flex flex-col sm:flex-row items-center justify-center mb-4 sm:mb-6 gap-2 sm:gap-3\">\n                  <Phone className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary\" />\n                  <span className=\"text-xl sm:text-2xl md:text-3xl font-bold text-foreground\">223-660-2699</span>\n                </div>\n\n                <Button\n                  onClick={handleWhatsAppClick}\n                  className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 text-sm sm:px-6 sm:py-2.5 sm:text-base font-semibold rounded-full shadow-md hover:shadow-lg transition-all duration-300 transform hover:scale-105\"\n                >\n                  <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={20} height={20} className=\"w-4 h-4 sm:w-5 sm:h-5 mr-2\" />\n                  Contactar por WhatsApp\n                </Button>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Contact Methods Grid */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n            {contactMethods.map((method, index) => {\n              const IconComponent = method.icon;\n              return (\n                <motion.div\n                  key={method.title}\n                  custom={index + 1}\n                  initial=\"hidden\"\n                  whileInView=\"visible\"\n                  viewport={{ once: true, amount: 0.2 }}\n                  variants={cardVariants}\n                >\n                  <Card className=\"hover:shadow-xl transition-all duration-300 ease-in-out hover:-translate-y-1.5 h-full flex flex-col\">\n                    <CardContent className=\"p-6 text-center flex flex-col items-center flex-grow\">\n                      <div className={`w-14 h-14 sm:w-16 sm:h-16 ${method.iconBg} rounded-full flex items-center justify-center mx-auto mb-4 transform group-hover:scale-110 transition-transform duration-300`}>\n                        {IconComponent && <IconComponent className={`w-7 h-7 sm:w-8 sm:h-8 ${method.iconColor}`} />}\n                      </div>\n                      <h3 className=\"text-lg sm:text-xl font-semibold text-foreground mb-1\">{method.title}</h3>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground mb-4 flex-grow\">{method.description}</p>\n                      <Button\n                        onClick={method.onClick}\n                        asChild={!!method.href}\n                        variant=\"outline\"\n                        size=\"sm\"\n                        className={`mt-auto ${method.colorClasses} transition-all duration-300 w-full text-xs sm:text-sm`}\n                      >\n                        {method.href ? (\n                          <a href={method.href} target={method.href.startsWith(\"mailto:\") ? \"_self\" : \"_blank\"} rel=\"noopener noreferrer\">\n                            {method.actionText}\n                          </a>\n                        ) : (\n                          <span>{method.actionText}</span>\n                        )}\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "contact-map.tsx",
              "type": "file",
              "content": "'use client';\n\nimport { useGoogleMaps } from '@/hooks/useGoogleMaps';\nimport { Loader2, AlertTriangle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useEffect } from 'react';\n\nconst MAP_CENTER = { lat: -38.0054771, lng: -57.5426106 }; // Center of Mar del Plata\nconst BUSINESS_LOCATION = { lat: -38.002287, lng: -57.557540 }; // A central location, e.g., Av. Col\u00f3n\n\nexport function ContactMap() {\n  const { mapRef, map, isLoaded, error: mapError } = useGoogleMaps({\n    center: MAP_CENTER,\n    zoom: 13,\n  });\n\n  useEffect(() => {\n    if (isLoaded && map && window.google) {\n      // Add a custom marker for the business\n      const marker = new window.google.maps.Marker({\n        position: BUSINESS_LOCATION,\n        map: map,\n        title: 'Envios DosRuedas',\n        icon: {\n          url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" width=\"40\" height=\"48\">\n              <path fill=\"#1E40AF\" d=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z\"/>\n              <circle cx=\"192\" cy=\"192\" r=\"64\" fill=\"#F9A825\"/>\n            </svg>\n          `),\n          scaledSize: new window.google.maps.Size(40, 48),\n          anchor: new window.google.maps.Point(20, 48)\n        },\n        animation: window.google.maps.Animation.BOUNCE,\n      });\n\n      // Stop the bouncing after a few seconds to avoid being distracting\n      setTimeout(() => {\n        marker.setAnimation(null);\n      }, 2100); // ~3 bounces\n\n      // Add an InfoWindow\n      const infoWindow = new window.google.maps.InfoWindow({\n        content: `\n          <div style=\"display: flex; align-items: center; gap: 12px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; padding: 8px; max-width: 250px;\">\n            <img src=\"/LogoEnviosDosRuedas.webp\" alt=\"Logo Envios DosRuedas\" style=\"width: 50px; height: 50px; border-radius: 50%; border: 2px solid #3B82F6;\">\n            <div>\n              <h3 style=\"font-weight: 600; font-size: 1rem; margin: 0 0 4px 0; color: #1E40AF;\">Envios DosRuedas</h3>\n              <p style=\"font-size: 0.8rem; color: #4A5568; margin: 0;\">Nuestra base de operaciones.</p>\n              <p style=\"font-size: 0.8rem; color: #4A5568; margin: 0;\">Mar del Plata, Buenos Aires</p>\n            </div>\n          </div>\n        `,\n        ariaLabel: \"Envios DosRuedas\",\n      });\n      \n      // Open the info window by default\n      infoWindow.open({\n        anchor: marker,\n        map,\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open({\n          anchor: marker,\n          map,\n        });\n        // Optional: restart bounce on click\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        setTimeout(() => marker.setAnimation(null), 2100);\n      });\n    }\n  }, [isLoaded, map]);\n\n  return (\n    <section className=\"py-12 md:py-16 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-10 md:mb-12\">\n          <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-foreground mb-3 sm:mb-4\">\n            Nuestra Ubicaci\u00f3n\n          </h2>\n          <p className=\"text-base sm:text-lg text-muted-foreground max-w-xl mx-auto\">\n            Nos encontramos en el coraz\u00f3n de Mar del Plata, listos para llegar a donde nos necesites.\n          </p>\n        </div>\n        <div className=\"relative h-[400px] md:h-[500px] w-full rounded-lg overflow-hidden shadow-xl border border-border\">\n          {mapError ? (\n            <div className=\"bg-destructive/10 w-full h-full flex flex-col items-center justify-center p-6 text-center\">\n              <AlertTriangle className=\"w-12 h-12 mx-auto mb-4 text-destructive\" />\n              <h3 className=\"text-lg font-semibold text-destructive mb-2\">\n                Error al Cargar el Mapa\n              </h3>\n              <p className=\"text-sm text-destructive/80 mb-4 max-w-md\">\n                {mapError}\n              </p>\n              <Button\n                onClick={() => window.open(`https://www.google.com/maps/search/?api=1&query=${MAP_CENTER.lat},${MAP_CENTER.lng}`, '_blank')}\n                variant=\"destructive\"\n                size=\"sm\"\n              >\n                Abrir en Google Maps\n              </Button>\n            </div>\n          ) : !isLoaded ? (\n             <div className=\"absolute inset-0 bg-muted/50 flex items-center justify-center z-10\">\n                <div className=\"text-center\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-primary mx-auto mb-2\" />\n                    <p className=\"text-sm text-muted-foreground\">Cargando mapa...</p>\n                </div>\n            </div>\n          ) : null}\n          <div ref={mapRef} className=\"w-full h-full\" />\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "contact-page-client.tsx",
              "type": "file",
              "content": "'use client';\n\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { ContactInfo } from \"@/components/contact/contact-info\";\nimport { ContactForm } from \"@/components/contact/contact-form\";\nimport { BusinessHours } from \"@/components/contact/business-hours\";\nimport { ContactMap } from \"@/components/contact/contact-map\";\nimport { motion } from \"framer-motion\";\n\nconst sectionVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: (i: number) => ({\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: i * 0.2,\n      duration: 0.5,\n      ease: \"easeOut\",\n    },\n  }),\n};\n\nexport function ContactPageClient() {\n  return (\n    <>\n      <motion.div\n        custom={0}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={sectionVariants}\n      >\n        <HeroSection\n          title={\n            <span className=\"text-yellow-400\">Contacta con Nosotros</span>\n          }\n          description={\n            <>\n              <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mb-4 font-semibold\">Envios DosRuedas</h2>\n              <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">Somos tu soluci\u00f3n confiable en servicios de mensajer\u00eda y delivery en Mar del Plata. Cont\u00e1ctanos y obt\u00e9n una respuesta r\u00e1pida.</p>\n            </>\n          }\n          backgroundType=\"image\"\n          backgroundImageUrl=\"/bannerenvios.png\"\n          backgroundImageAlt=\"Banner contacto Envios DosRuedas\"\n          backgroundOverlayOpacity={0.75}\n          textColorClassName=\"text-primary-foreground\"\n          textAlignment=\"text-center\"\n          minHeight=\"min-h-[40vh] sm:min-h-[50vh]\"\n          contentMaxWidth=\"max-w-3xl\"\n          titleClassName=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold\"\n          descriptionClassName=\"text-base sm:text-lg md:text-xl\"\n          className=\"py-10 sm:py-12 md:py-16\"\n        />\n      </motion.div>\n      <motion.div\n        custom={1}\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, amount: 0.1 }}\n        variants={sectionVariants}\n      >\n        <ContactInfo />\n      </motion.div>\n      <motion.div\n        custom={2}\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, amount: 0.1 }}\n        variants={sectionVariants}\n        className=\"py-12 md:py-16 px-4 bg-gray-50 dark:bg-gray-900\"\n      >\n        <div className=\"container mx-auto\">\n          <div className=\"text-center mb-10 md:mb-12\">\n            <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-gray-800 dark:text-gray-100 mb-3 sm:mb-4\">\u00bfTienes alguna consulta?</h2>\n            <p className=\"text-base sm:text-lg text-gray-600 dark:text-gray-300 max-w-xl mx-auto\">Completa el formulario y te responderemos a la brevedad.</p>\n          </div>\n          <ContactForm />\n        </div>\n      </motion.div>\n      <motion.div\n        custom={3}\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, amount: 0.1 }}\n        variants={sectionVariants}\n      >\n        <BusinessHours />\n      </motion.div>\n      <motion.div\n        custom={4}\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, amount: 0.1 }}\n        variants={sectionVariants}\n      >\n        <ContactMap />\n      </motion.div>\n    </>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "delivery-form.tsx",
          "type": "file",
          "content": "\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport Image from \"next/image\";\nimport type { Dispatch, SetStateAction } from 'react';\n\ninterface DeliveryFormProps {\n  deliveryFullName: string;\n  setDeliveryFullName: Dispatch<SetStateAction<string>>;\n  phoneNumber: string;\n  setPhoneNumber: Dispatch<SetStateAction<string>>;\n  deliveryEmail: string;\n  setDeliveryEmail: Dispatch<SetStateAction<string>>;\n  address: string;\n  setAddress: Dispatch<SetStateAction<string>>;\n  deliveryDate: string;\n  setDeliveryDate: Dispatch<SetStateAction<string>>;\n  deliveryTime: string;\n  setDeliveryTime: Dispatch<SetStateAction<string>>;\n  deliveryNote: string;\n  setDeliveryNote: Dispatch<SetStateAction<string>>;\n  deliveryTip: string;\n  setDeliveryTip: Dispatch<SetStateAction<string>>;\n}\n\nexport function DeliveryForm({\n  deliveryFullName,\n  setDeliveryFullName,\n  phoneNumber,\n  setPhoneNumber,\n  deliveryEmail,\n  setDeliveryEmail,\n  address,\n  setAddress,\n  deliveryDate,\n  setDeliveryDate,\n  deliveryTime,\n  setDeliveryTime,\n  deliveryNote,\n  setDeliveryNote,\n  deliveryTip,\n  setDeliveryTip,\n}: DeliveryFormProps) {\n  return (\n    <div className=\"bg-white shadow-sm border border-gray-200 rounded-lg p-4 sm:p-6 mb-4\">\n      <label className=\"pb-3 block text-sm font-semibold text-gray-900\">\n        ENTREGAR A\n      </label>\n      <div className=\"space-y-4\">\n        <Input\n          type=\"text\"\n          required\n          value={deliveryFullName}\n          onChange={(e) => setDeliveryFullName(e.target.value)}\n          placeholder=\"Nombre completo del destinatario\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <Input\n          type=\"tel\"\n          required\n          value={phoneNumber}\n          onChange={(e) => setPhoneNumber(e.target.value)}\n          placeholder=\"N\u00famero de tel\u00e9fono del destinatario\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <Input\n          type=\"email\"\n          value={deliveryEmail}\n          onChange={(e) => setDeliveryEmail(e.target.value)}\n          placeholder=\"Direcci\u00f3n de correo electr\u00f3nico del destinatario (Opcional)\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <div className=\"flex flex-col sm:flex-row gap-2\">\n          <Input\n            required\n            type=\"text\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            placeholder=\"Direcci\u00f3n postal del destinatario\"\n            className=\"flex-1 border-gray-300 focus:border-primary focus:ring-primary\"\n          />\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-gray-300 hover:border-gray-400 self-start w-full sm:w-auto\"\n            title=\"Ubicar en mapa\"\n          >\n            <Image\n              src=\"https://ext.same-assets.com/4138676004/1916837550.svg\"\n              alt=\"Ubicar en mapa\"\n              width={24}\n              height={24}\n              data-ai-hint=\"location pin\"\n            />\n            <span className=\"ml-2 sm:hidden\">Ubicar en mapa</span>\n          </Button>\n        </div>\n        <Input\n          type=\"date\"\n          required\n          value={deliveryDate}\n          onChange={(e) => setDeliveryDate(e.target.value)}\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <Input\n          type=\"time\"\n          required\n          value={deliveryTime}\n          onChange={(e) => setDeliveryTime(e.target.value)}\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <Textarea\n          required\n          value={deliveryNote}\n          onChange={(e) => setDeliveryNote(e.target.value)}\n          placeholder=\"Nota de entrega\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <Input\n          type=\"number\"\n          value={deliveryTip}\n          onChange={(e) => setDeliveryTip(e.target.value)}\n          placeholder=\"Propina de entrega (Opcional)\"\n          min=\"0\"\n          step=\"0.01\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n      </div>\n    </div>\n  );\n}"
        },
        {
          "name": "entrepreneur",
          "type": "directory",
          "children": [
            {
              "name": "entrepreneur-benefits.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { TrendingUp, DollarSign, Clock, Users, Shield, Zap } from \"lucide-react\"\n\nexport function EntrepreneurBenefits() {\n  const benefits = [\n    {\n      icon: TrendingUp,\n      title: \"Impulsa tus Ventas\",\n      description: \"Ofrece env\u00edos profesionales que generen confianza en tus clientes y aumenten tus conversiones.\",\n    },\n    {\n      icon: DollarSign,\n      title: \"Tarifas Preferenciales\",\n      description: \"Accedes a Tarifas LowCost con elecci\u00f3n de rango horario.\",\n    },\n    {\n      icon: Clock,\n      title: \"Flexibilidad Horaria\",\n      description: \"Elige entre franjas de ma\u00f1ana o tarde seg\u00fan las necesidades de tus clientes.\",\n    },\n    {\n      icon: Users,\n      title: \"Comunicaci\u00f3n Clara\",\n      description: \"Comunica de manera transparente tus tarifas fijas de env\u00edo a tus clientes.\",\n    },\n    {\n      icon: Shield,\n      title: \"Env\u00edos Confiables\",\n      description: \"Todos los env\u00edos incluyen seguimiento en tiempo real para mayor tranquilidad.\",\n    },\n    {\n      icon: Zap,\n      title: \"Proceso Simplificado\",\n      description: \"Sistema optimizado para procesar m\u00faltiples env\u00edos de manera r\u00e1pida y eficiente.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Beneficios del Plan</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Descubre todas las ventajas dise\u00f1adas espec\u00edficamente para hacer crecer tu negocio online\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {benefits.map((benefit, index) => {\n            const IconComponent = benefit.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mb-4\">\n                    <IconComponent className=\"w-6 h-6 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{benefit.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "entrepreneur-cta.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Phone, Mail, ArrowRight } from \"lucide-react\"\nimport Image from \"next/image\"\n\nexport function EntrepreneurCta() {\n  return (\n    <section className=\"py-16 px-4 bg-blue-600\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-white\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfListo para Hacer Crecer tu Negocio?</h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-2xl mx-auto\">\n              \u00danete a cientos de emprendedores que ya conf\u00edan en nosotros para sus env\u00edos. Comienza hoy mismo y\n              experimenta la diferencia.\n            </p>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700\">\n                <ArrowRight className=\"w-5 h-5 mr-2\" />\n                Solicitar Plan Ahora\n              </Button>\n              <Button variant=\"outline\" size=\"lg\">\n                Calcular Ahorros\n              </Button>\n            </div>\n\n            <div className=\"border-t pt-6\">\n              <p className=\"text-sm text-gray-600 mb-4\">\u00bfTienes preguntas? Cont\u00e1ctanos:</p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-green-600 hover:text-green-700\">\n                  <Image src=\"/icon/icon-whatsapp-verde.svg\" alt=\"WhatsApp Icon\" width={16} height={16} className=\"w-4 h-4 mr-2\" />\n                  WhatsApp: 223-660-2699\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "entrepreneur-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { BarChart3, ShoppingCart } from \"lucide-react\";\n\nexport function EntrepreneurHero() {\n  return (\n    <HeroSection\n      preTitle={\n        <Badge className=\"bg-blue-600 text-white hover:bg-blue-700 mb-6 px-4 py-2 text-sm font-medium\">\n          Beneficio Emprendedores\n        </Badge>\n      }\n      title={\n        <div className=\"flex items-center justify-center gap-4\">\n          <BarChart3 className=\"w-10 h-10 md:w-12 md:h-12 text-yellow-400\" />\n          <span className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-yellow-400\">\n            Plan Emprendedor\n          </span>\n          <ShoppingCart className=\"w-10 h-10 md:w-12 md:h-12 text-yellow-400\" />\n        </div>\n      }\n      description={\n        <>\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mt-6 mb-2 font-semibold\">Envios DosRuedas</h2>\n          <div className=\"max-w-4xl mx-auto space-y-2\">\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n              <strong>Potencia tus ventas online con env\u00edos profesionales.</strong>\n            </p>\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n            Optimiza tus ventas online con nuestro servicio especializado para emprendedores.\n            </p>\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n            Accede a env\u00edos de bajo costo con la opci\u00f3n de elegir tu rango horario.\n            </p>\n          </div>\n        </>\n      }\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner Plan Emprendedor Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[60vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"mb-4\" \n      descriptionClassName=\"mb-8\"\n    />\n  );\n}\n"
            },
            {
              "name": "entrepreneur-pricing-ranges.tsx",
              "type": "file",
              "content": "\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Coins, MapPin, ArrowRightCircle, HelpCircle } from \"lucide-react\";\nimport { preciosLowCost, type PrecioRango } from \"@/lib/precioslowcost\";\nimport Image from \"next/image\";\n\nexport function EntrepreneurPricingRanges() {\n  // We'll use the same logic as the low-cost pricing\n  const displayedPriceRanges = preciosLowCost.filter(\n    (rango) => rango.distancia_max_km < 13\n  );\n\n  const formatKmDisplay = (km: number, isMaxBoundaryInTitleOrRange: boolean = false) => {\n    const kmFixed = parseFloat(km.toFixed(2));\n    if (isMaxBoundaryInTitleOrRange && String(kmFixed.toFixed(2)).endsWith('.99')) {\n      return Math.ceil(kmFixed).toString();\n    }\n    return Number.isInteger(kmFixed) ? kmFixed.toFixed(0) : kmFixed.toFixed(2).replace(\".\", \",\");\n  };\n\n  const entrepreneurTiers = displayedPriceRanges.map((rango: PrecioRango) => {\n    const titleMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n    const rangeMinKmFormatted = formatKmDisplay(rango.distancia_min_km);\n    const rangeMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n\n    return {\n      name: `Hasta ${titleMaxKmFormatted} km`,\n      price: `$${rango.precio_rango.toLocaleString(\"es-AR\", {\n        minimumFractionDigits: rango.precio_rango % 1 === 0 ? 0 : 2,\n        maximumFractionDigits: 2,\n      })}`,\n      distanceRange: `${rangeMinKmFormatted} km - ${rangeMaxKmFormatted} km`,\n      description: \"Tarifa preferencial para miembros del Plan Emprendedor.\",\n      features: [\n        \"Servicio econ\u00f3mico y confiable\",\n        \"Entrega en el d\u00eda solicitando antes de 13hs\",\n        \"Ideal para alto volumen de env\u00edos\",\n      ],\n      color: \"border-blue-200 bg-blue-50\",\n      badgeText: \"Plan Emprendedor\",\n      badgeColor: \"bg-blue-600\",\n    };\n  });\n\n  const handleWhatsAppClick = () => {\n    const phoneNumber = \"5492236602699\";\n    const message = \"Hola, necesito cotizar un env\u00edo para mi emprendimiento de m\u00e1s de 13 km.\";\n    const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`;\n    window.open(whatsappUrl, \"_blank\");\n  };\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\n            Tarifas Preferenciales del Plan Emprendedor\n          </h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Precios exclusivos para nuestros socios emprendedores, basados en la estructura de Low Cost para maximizar tu ahorro.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {entrepreneurTiers.map((tier, index) => {\n            return (\n              <Card\n                key={index}\n                className={`relative ${tier.color} border-2 hover:shadow-lg transition-shadow duration-300 flex flex-col`}\n              >\n                <Badge\n                  className={`absolute -top-3 left-1/2 transform -translate-x-1/2 ${tier.badgeColor} text-white px-3 py-1 text-xs`}\n                >\n                  {tier.badgeText}\n                </Badge>\n                <CardHeader className=\"text-center pb-4 pt-8\">\n                  <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border-2 border-blue-200\">\n                    <Coins className=\"w-8 h-8 text-blue-600\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold text-gray-800\">\n                    {tier.name}\n                  </CardTitle>\n                  <p className=\"text-sm text-gray-500\">\n                    {tier.distanceRange}\n                  </p>\n                  <div className=\"text-3xl font-bold text-blue-700 my-2\">\n                    {tier.price}\n                  </div>\n                </CardHeader>\n                <CardContent className=\"flex-grow\">\n                  <p className=\"text-gray-600 mb-4 text-center text-sm\">\n                    {tier.description}\n                  </p>\n                  <ul className=\"space-y-2 text-sm\">\n                    {tier.features.map((feature, featureIndex) => (\n                      <li\n                        key={featureIndex}\n                        className=\"flex items-center text-gray-700\"\n                      >\n                        <ArrowRightCircle className=\"w-4 h-4 text-blue-500 mr-2 flex-shrink-0\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            );\n          })}\n\n          <Card className=\"relative border-gray-300 bg-gray-100 border-2 hover:shadow-lg transition-shadow duration-300 flex flex-col\">\n            <Badge\n                className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white px-3 py-1 text-xs\"\n            >\n                Cotizaci\u00f3n Personalizada\n            </Badge>\n            <CardHeader className=\"text-center pb-4 pt-8\">\n              <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border-2 border-gray-300\">\n                <HelpCircle className=\"w-8 h-8 text-gray-700\" />\n              </div>\n              <CardTitle className=\"text-2xl font-bold text-gray-800\">\n                M\u00e1s de 13 km\n              </CardTitle>\n              <p className=\"text-sm text-gray-500\">\n                Env\u00edos de Larga Distancia\n              </p>\n            </CardHeader>\n            <CardContent className=\"flex-grow flex flex-col justify-between\">\n              <p className=\"text-gray-600 mb-4 text-center text-sm\">\n                Para env\u00edos que superen los 13 km, cont\u00e1ctanos para una cotizaci\u00f3n especial para tu emprendimiento.\n              </p>\n              <Button\n                onClick={handleWhatsAppClick}\n                className=\"w-full bg-green-500 hover:bg-green-600 text-white mt-4\"\n              >\n                <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={20} height={20} className=\"w-5 h-5 mr-2\" />\n                Consultar por WhatsApp\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "plan-information.tsx",
              "type": "file",
              "content": "import { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Clock, Settings, List, CheckCircle } from \"lucide-react\"\n\nexport function PlanInformation() {\n  const planDetails = [\n    {\n      icon: Clock,\n      title: \"Horarios\",\n      items: [\"Lunes a Viernes de 9:00 a 19:00 hrs.\", \"S\u00e1bados de 10:00 a 15:00 hrs.\"],\n    },\n    {\n      icon: Settings,\n      title: \"\u00bfC\u00f3mo Funciona?\",\n      items: [\"Elige tu franja de entrega: ma\u00f1ana (9-13hrs) o tarde (15-19hrs)\"],\n    },\n    {\n      icon: List,\n      title: \"Requisitos\",\n      items: [\n        \"Ser vendedor online activo\",\n        \"Tener un m\u00ednimo de env\u00edos semanales\",\n        \"M\u00ednimo de 6 env\u00edos semanales (Lunes a S\u00e1bado)\",\n      ],\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <Badge className=\"bg-blue-600 text-white hover:bg-blue-700 mb-6 px-4 py-2 text-sm font-medium\">\n            Informaci\u00f3n Importante\n          </Badge>\n          <h2 className=\"text-3xl md:text-4xl font-bold text-blue-800 mb-8\">Plan Emprendedores</h2>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {planDetails.map((detail, index) => {\n            const IconComponent = detail.icon\n            return (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-8\">\n                  <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                    <IconComponent className=\"w-8 h-8 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-gray-800 mb-6\">{detail.title}</h3>\n                  <div className=\"space-y-3\">\n                    {detail.items.map((item, itemIndex) => (\n                      <div key={itemIndex} className=\"flex items-start text-left\">\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                        <p className=\"text-gray-600 leading-relaxed\">{item}</p>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "success-stories.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Star, Quote } from \"lucide-react\"\n\nexport function SuccessStories() {\n  const testimonials = [\n    {\n      name: \"Mar\u00eda Gonz\u00e1lez\",\n      business: \"Tienda de Ropa Online\",\n      image: \"/placeholder.svg?height=80&width=80\",\n      rating: 5,\n      testimonial:\n        \"Desde que uso el Plan Emprendedor, mis ventas aumentaron un 40%. Los clientes conf\u00edan m\u00e1s en mi tienda porque saben que sus pedidos llegar\u00e1n r\u00e1pido y seguro.\",\n      results: \"40% aumento en ventas\",\n    },\n    {\n      name: \"Carlos Rodr\u00edguez\",\n      business: \"Productos Artesanales\",\n      image: \"/placeholder.svg?height=80&width=80\",\n      rating: 5,\n      testimonial:\n        \"La flexibilidad horaria me permite coordinar mejor con mis clientes. El soporte es excelente y siempre resuelven mis consultas r\u00e1pidamente.\",\n      results: \"95% satisfacci\u00f3n del cliente\",\n    },\n    {\n      name: \"Ana Mart\u00ednez\",\n      business: \"Cosm\u00e9tica Natural\",\n      image: \"/placeholder.svg?height=80&width=80\",\n      rating: 5,\n      testimonial:\n        \"Las tarifas preferenciales me permiten ofrecer env\u00edo gratis a mis clientes sin afectar mis m\u00e1rgenes. Es una ventaja competitiva importante.\",\n      results: \"30% m\u00e1s pedidos\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Historias de \u00c9xito</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Conoce c\u00f3mo otros emprendedores han hecho crecer sus negocios con nuestro Plan Emprendedor\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {testimonials.map((testimonial, index) => (\n            <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-16 h-16 bg-gray-200 rounded-full mr-4 flex items-center justify-center\">\n                    <span className=\"text-gray-500 text-sm\">Foto</span>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-gray-800\">{testimonial.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{testimonial.business}</p>\n                    <div className=\"flex items-center mt-1\">\n                      {[...Array(testimonial.rating)].map((_, i) => (\n                        <Star key={i} className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <Quote className=\"w-8 h-8 text-blue-200 mb-3\" />\n                <p className=\"text-gray-700 mb-4 leading-relaxed italic\">\"{testimonial.testimonial}\"</p>\n\n                <div className=\"bg-blue-50 p-3 rounded-lg\">\n                  <p className=\"text-sm font-semibold text-blue-800\">Resultado: {testimonial.results}</p>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "envios-flex",
          "type": "directory",
          "children": [
            {
              "name": "envios-flex-content.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { Zap, ShoppingCart, MapPin } from \"lucide-react\"\nimport Image from \"next/image\"\n\nexport function EnviosFlexContent() {\n  const features = [\n    {\n      icon: Zap,\n      title: \"Entregas R\u00e1pidas Garantizadas\",\n      description: \"Cumplimos con los plazos de Mercado Envios Flex para mejorar tu reputaci\u00f3n.\",\n    },\n    {\n      icon: ShoppingCart,\n      title: \"Integraci\u00f3n Sencilla\",\n      description: \"Nos adaptamos a tu flujo de trabajo de Mercado Libre.\",\n    },\n    {\n      icon: MapPin,\n      title: \"Amplia Cobertura\",\n      description: \"Llegamos a las zonas habilitadas para Envios Flex en Mar del plata.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <div>\n            <h2 className=\"text-3xl md:text-4xl font-bold text-blue-800 mb-6\">Envios Flex Mercado Libre</h2>\n            <p className=\"text-lg text-gray-700 mb-8 leading-relaxed\">\n            \u00bfVend\u00e9s por Mercado Libre? Potenci\u00e1 tus ventas con Envios Flex. Entregamos tus productos en el d\u00eda o al d\u00eda siguiente, mejorando tu reputaci\u00f3n y la satisfacci\u00f3n de tus compradores. Nos integramos f\u00e1cilmente a tu operatoria.\n            </p>\n\n            {/* Features */}\n            <div className=\"space-y-6 mb-8\">\n              {features.map((feature, index) => {\n                const IconComponent = feature.icon\n                return (\n                  <div key={index} className=\"flex items-start\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4 flex-shrink-0\">\n                      <IconComponent className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">{feature.title}</h3>\n                      <p className=\"text-gray-600 leading-relaxed\">{feature.description}</p>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n\n            {/* CTA Button */}\n            <Button size=\"lg\" className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold px-8 py-3\">\n              Sumate a Envios Flex con Nosotros\n            </Button>\n          </div>\n\n          {/* Right Content - Logo */}\n          <div className=\"flex justify-center lg:justify-end\">\n            <div className=\"relative w-80 h-80\">\n               <Image\n                src=\"/LogoEnviosDosRuedas.webp\"\n                alt=\"Logo Envios DosRuedas\"\n                fill\n                sizes=\"(min-width: 1024px) 320px, 100vw\"\n                className=\"rounded-full object-contain filter drop-shadow-lg\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "envios-flex-cta.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Phone, Mail, ArrowRight } from \"lucide-react\"\nimport Image from \"next/image\"\n\nexport function EnviosFlexCta() {\n  return (\n    <section className=\"py-16 px-4 bg-blue-600\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-white\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\n              \u00bfListo para Potenciar tus Ventas en MercadoLibre?\n            </h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-2xl mx-auto\">\n              \u00danete a los vendedores que ya conf\u00edan en nosotros para sus env\u00edos Flex. Mejora tu reputaci\u00f3n y aumenta tus\n              ventas hoy mismo.\n            </p>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button size=\"lg\" className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold\">\n                <ArrowRight className=\"w-5 h-5 mr-2\" />\n                Registrarme Ahora\n              </Button>\n              <Button variant=\"outline\" size=\"lg\">\n                Ver Tarifas\n              </Button>\n            </div>\n\n            <div className=\"border-t pt-6\">\n              <p className=\"text-sm text-gray-600 mb-4\">\u00bfNecesitas m\u00e1s informaci\u00f3n? Cont\u00e1ctanos:</p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-green-600 hover:text-green-700\">\n                  <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={16} height={16} className=\"w-4 h-4 mr-2\" />\n                  WhatsApp: 223-660-2699\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "envios-flex-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { BarChart3, ShoppingCart } from \"lucide-react\";\n\nexport function EnviosFlexHero() {\n  return (\n    <HeroSection\n      preTitle={\n        <Badge className=\"bg-blue-600 text-white hover:bg-blue-700 mb-6 px-4 py-2 text-sm font-medium\">\n          Beneficio Emprendedores\n        </Badge>\n      }\n      title={\n        <div className=\"flex items-center justify-center gap-4\">\n          <BarChart3 className=\"w-10 h-10 md:w-12 md:h-12 text-yellow-400\" />\n          <span className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-yellow-400\">\n            Env\u00edos Flex - MercadoLibre\n          </span>\n          <ShoppingCart className=\"w-10 h-10 md:w-12 md:h-12 text-yellow-400\" />\n        </div>\n      }\n      description={\n        <>\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mt-6 mb-2 font-semibold\">Envios DosRuedas</h2>\n          <div className=\"max-w-4xl mx-auto space-y-2\">\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n              Potencia tus ventas online con env\u00edos profesionales y entregas en el d\u00eda.\n            </p>\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n              Optimiza tus entregas con nuestro servicio especializado.\n            </p>\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n              Ofrece env\u00edos en el d\u00eda para tus ventas antes de las 15hs.\n            </p>\n          </div>\n        </>\n      }\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner Env\u00edos Flex Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[60vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"mb-4\"\n      descriptionClassName=\"mb-8\"\n    />\n  );\n}\n"
            },
            {
              "name": "flex-pricing-ranges.tsx",
              "type": "file",
              "content": "\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Coins, MapPin, ArrowRightCircle, HelpCircle } from \"lucide-react\";\nimport { preciosLowCost, type PrecioRango } from \"@/lib/precioslowcost\";\nimport Image from \"next/image\";\n\nexport function FlexPricingRanges() {\n    const displayedPriceRanges = preciosLowCost.filter(\n        (rango) => rango.distancia_max_km < 13\n    );\n\n    const formatKmDisplay = (km: number, isMaxBoundaryInTitleOrRange: boolean = false) => {\n        const kmFixed = parseFloat(km.toFixed(2));\n        if (isMaxBoundaryInTitleOrRange && String(kmFixed.toFixed(2)).endsWith('.99')) {\n            return Math.ceil(kmFixed).toString();\n        }\n        return Number.isInteger(kmFixed) ? kmFixed.toFixed(0) : kmFixed.toFixed(2).replace(\".\", \",\");\n    };\n\n    const flexTiers = displayedPriceRanges.map((rango: PrecioRango) => {\n        const titleMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n        const rangeMinKmFormatted = formatKmDisplay(rango.distancia_min_km);\n        const rangeMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n\n        return {\n            name: `Hasta ${titleMaxKmFormatted} km`,\n            price: `$${rango.precio_rango.toLocaleString(\"es-AR\", {\n                minimumFractionDigits: rango.precio_rango % 1 === 0 ? 0 : 2,\n                maximumFractionDigits: 2,\n            })}`,\n            distanceRange: `${rangeMinKmFormatted} km - ${rangeMaxKmFormatted} km`,\n            description: \"Tarifa aplicable para env\u00edos de Mercado Libre Flex.\",\n            features: [\n                \"Entrega en el d\u00eda para ventas Flex\",\n                \"Mejora tu reputaci\u00f3n en Mercado Libre\",\n                \"Integraci\u00f3n con tu cuenta de vendedor\",\n            ],\n            color: \"border-yellow-300 bg-yellow-50\",\n            badgeText: \"Mercado Libre Flex\",\n            badgeColor: \"bg-yellow-500\",\n        };\n    });\n\n    const handleWhatsAppClick = () => {\n        const phoneNumber = \"5492236602699\";\n        const message = \"Hola, necesito cotizar un Env\u00edo Flex de m\u00e1s de 13 km.\";\n        const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, \"_blank\");\n    };\n\n    return (\n        <section className=\"py-16 px-4 bg-white\">\n            <div className=\"container mx-auto max-w-6xl\">\n                <div className=\"text-center mb-12\">\n                    <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\n                        Tarifas para Env\u00edos Flex\n                    </h2>\n                    <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n                        Precios competitivos para tus ventas de Mercado Libre, basados en nuestra estructura de costos optimizada.\n                    </p>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {flexTiers.map((tier, index) => {\n                        return (\n                            <Card\n                                key={index}\n                                className={`relative ${tier.color} border-2 hover:shadow-lg transition-shadow duration-300 flex flex-col`}\n                            >\n                                <Badge\n                                    className={`absolute -top-3 left-1/2 transform -translate-x-1/2 ${tier.badgeColor} text-white px-3 py-1 text-xs`}\n                                >\n                                    {tier.badgeText}\n                                </Badge>\n                                <CardHeader className=\"text-center pb-4 pt-8\">\n                                    <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border-2 border-yellow-300\">\n                                        <Coins className=\"w-8 h-8 text-yellow-600\" />\n                                    </div>\n                                    <CardTitle className=\"text-2xl font-bold text-gray-800\">\n                                        {tier.name}\n                                    </CardTitle>\n                                    <p className=\"text-sm text-gray-500\">\n                                        {tier.distanceRange}\n                                    </p>\n                                    <div className=\"text-3xl font-bold text-yellow-700 my-2\">\n                                        {tier.price}\n                                    </div>\n                                </CardHeader>\n                                <CardContent className=\"flex-grow\">\n                                    <p className=\"text-gray-600 mb-4 text-center text-sm\">\n                                        {tier.description}\n                                    </p>\n                                    <ul className=\"space-y-2 text-sm\">\n                                        {tier.features.map((feature, featureIndex) => (\n                                            <li\n                                                key={featureIndex}\n                                                className=\"flex items-center text-gray-700\"\n                                            >\n                                                <ArrowRightCircle className=\"w-4 h-4 text-yellow-500 mr-2 flex-shrink-0\" />\n                                                {feature}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </CardContent>\n                            </Card>\n                        );\n                    })}\n\n                    <Card className=\"relative border-gray-300 bg-gray-100 border-2 hover:shadow-lg transition-shadow duration-300 flex flex-col\">\n                        <Badge\n                            className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white px-3 py-1 text-xs\"\n                        >\n                            Cotizaci\u00f3n Personalizada\n                        </Badge>\n                        <CardHeader className=\"text-center pb-4 pt-8\">\n                            <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border-2 border-gray-300\">\n                                <HelpCircle className=\"w-8 h-8 text-gray-700\" />\n                            </div>\n                            <CardTitle className=\"text-2xl font-bold text-gray-800\">\n                                M\u00e1s de 13 km\n                            </CardTitle>\n                            <p className=\"text-sm text-gray-500\">\n                                Zonas Extendidas\n                            </p>\n                        </CardHeader>\n                        <CardContent className=\"flex-grow flex flex-col justify-between\">\n                            <p className=\"text-gray-600 mb-4 text-center text-sm\">\n                                Para zonas m\u00e1s alejadas o env\u00edos Flex que superen los 13 km, cont\u00e1ctanos para una cotizaci\u00f3n a medida.\n                            </p>\n                            <Button\n                                onClick={handleWhatsAppClick}\n                                className=\"w-full bg-green-500 hover:bg-green-600 text-white mt-4\"\n                            >\n                                <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={20} height={20} className=\"w-5 h-5 mr-2\" />\n                                Consultar por WhatsApp\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        </section>\n    );\n}\n"
            },
            {
              "name": "how-it-works.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\n\nexport function HowItWorks() {\n  const steps = [\n    {\n      step: \"1\",\n      title: \"Registrate\",\n      description: \"Completa el formulario de registro y valida tu cuenta de MercadoLibre.\",\n    },\n    {\n      step: \"2\",\n      title: \"Configura\",\n      description: \"Configura tu cuenta para que funcione con Envios Flex seg\u00fan la distancia de entregas que prefieras.\",\n    },\n    {\n      step: \"3\",\n      title: \"Vende\",\n      description: \"Publica tus productos con la opci\u00f3n de Envios Flex habilitada.\",\n    },\n    {\n      step: \"4\",\n      title: \"Nosotros Entregamos\",\n      description: \"Recibimos la orden y entregamos en el d\u00eda o al d\u00eda siguiente seg\u00fan el horario.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <Badge className=\"bg-blue-600 text-white hover:bg-blue-700 mb-6 px-4 py-2 text-sm font-medium\">\n            Proceso Simple\n          </Badge>\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfC\u00f3mo Funciona?</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            En solo 4 pasos simples estar\u00e1s vendiendo con Envios Flex y mejorando tu reputaci\u00f3n en MercadoLibre\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {steps.map((step, index) => (\n            <Card key={index} className=\"text-center hover:shadow-lg transition-shadow duration-300\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-16 h-16 bg-blue-600 text-white rounded-full flex items-center justify-center mx-auto mb-4 text-2xl font-bold\">\n                  {step.step}\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{step.title}</h3>\n                <p className=\"text-gray-600 leading-relaxed\">{step.description}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "mercadolibre-benefits.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { TrendingUp, Star, Clock, Shield, Users, Award } from \"lucide-react\"\n\nexport function MercadoLibreBenefits() {\n  const benefits = [\n    {\n      icon: TrendingUp,\n      title: \"Mejora tu Reputaci\u00f3n\",\n      description: \"Cumple con los est\u00e1ndares de MercadoLibre y mejora tu calificaci\u00f3n como vendedor.\",\n    },\n    {\n      icon: Star,\n      title: \"M\u00e1s Ventas\",\n      description: \"Los compradores prefieren vendedores con Envios Flex, aumentando tus oportunidades de venta.\",\n    },\n    {\n      icon: Clock,\n      title: \"Entregas R\u00e1pidas\",\n      description: \"Entrega el mismo d\u00eda para pedidos antes de las 15hs, al d\u00eda siguiente para el resto.\",\n    },\n    {\n      icon: Shield,\n      title: \"Seguimiento Completo\",\n      description: \"Tracking en tiempo real integrado con la plataforma de MercadoLibre.\",\n    },\n    {\n      icon: Users,\n      title: \"Satisfacci\u00f3n del Cliente\",\n      description: \"Clientes m\u00e1s satisfechos que dejan mejores calificaciones y rese\u00f1as.\",\n    },\n    {\n      icon: Award,\n      title: \"Vendedor Premium\",\n      description: \"Accede a beneficios exclusivos de MercadoLibre para vendedores con Envios Flex.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Beneficios de Envios Flex</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Descubre todas las ventajas de integrar Envios Flex a tu estrategia de ventas en MercadoLibre\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {benefits.map((benefit, index) => {\n            const IconComponent = benefit.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mb-4\">\n                    <IconComponent className=\"w-6 h-6 text-yellow-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{benefit.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "requirements.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { CheckCircle, AlertCircle } from \"lucide-react\"\n\nexport function Requirements() {\n  const requirements = [\n    \"Ser vendedor activo en MercadoLibre\",\n    \"Tener reputaci\u00f3n Amarilla o superior\",\n    \"Productos ubicados en Mar del Plata\",\n    \"Productos que cumplan con las pol\u00edticas de ML\",\n  ]\n\n  const restrictions = [\n    \"No productos fr\u00e1giles\",\n    \"Peso m\u00e1ximo 25kg por paquete\",\n    \"Dimensiones m\u00e1ximas: 60x60x40cm\",\n    \"No productos prohibidos por MercadoLibre\",\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Requisitos y Restricciones</h2>\n          <p className=\"text-lg text-gray-600\">\n            Aseg\u00farate de cumplir con estos requisitos para poder acceder a Envios Flex\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Requirements */}\n          <Card>\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-green-700 mb-6 flex items-center\">\n                <CheckCircle className=\"w-6 h-6 mr-2\" />\n                Requisitos\n              </h3>\n              <ul className=\"space-y-4\">\n                {requirements.map((requirement, index) => (\n                  <li key={index} className=\"flex items-start\">\n                    <CheckCircle className=\"w-5 h-5 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{requirement}</span>\n                  </li>\n                ))}\n              </ul>\n            </CardContent>\n          </Card>\n\n          {/* Restrictions */}\n          <Card>\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-orange-700 mb-6 flex items-center\">\n                <AlertCircle className=\"w-6 h-6 mr-2\" />\n                Restricciones\n              </h3>\n              <ul className=\"space-y-4\">\n                {restrictions.map((restriction, index) => (\n                  <li key={index} className=\"flex items-start\">\n                    <AlertCircle className=\"w-5 h-5 text-orange-500 mr-3 mt-0.5 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{restriction}</span>\n                  </li>\n                ))}\n              </ul>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "error",
          "type": "directory",
          "children": [
            {
              "name": "not-found-illustration.tsx",
              "type": "file",
              "content": "export function NotFoundIllustration() {\n  return (\n    <div className=\"relative w-full max-w-md mx-auto\">\n      {/* Large 404 Background Text */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <span className=\"text-[12rem] md:text-[16rem] font-bold text-blue-100 select-none\">404</span>\n      </div>\n\n      {/* Person with Laptop Illustration */}\n      <div className=\"relative z-10 flex justify-center items-center h-64\">\n        <svg\n          width=\"200\"\n          height=\"160\"\n          viewBox=\"0 0 200 160\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-full h-full\"\n        >\n          {/* Person sitting */}\n          <ellipse cx=\"100\" cy=\"140\" rx=\"60\" ry=\"8\" fill=\"#E5E7EB\" />\n\n          {/* Body */}\n          <rect x=\"85\" y=\"80\" width=\"30\" height=\"40\" rx=\"15\" fill=\"#60A5FA\" />\n\n          {/* Head */}\n          <circle cx=\"100\" cy=\"65\" r=\"18\" fill=\"#FED7AA\" />\n\n          {/* Hair */}\n          <path\n            d=\"M82 55 C82 45, 92 40, 100 40 C108 40, 118 45, 118 55 C118 50, 110 48, 100 48 C90 48, 82 50, 82 55 Z\"\n            fill=\"#92400E\"\n          />\n\n          {/* Arms */}\n          <rect x=\"70\" y=\"85\" width=\"12\" height=\"25\" rx=\"6\" fill=\"#FED7AA\" />\n          <rect x=\"118\" y=\"85\" width=\"12\" height=\"25\" rx=\"6\" fill=\"#FED7AA\" />\n\n          {/* Legs */}\n          <rect x=\"88\" y=\"115\" width=\"10\" height=\"25\" rx=\"5\" fill=\"#1E40AF\" />\n          <rect x=\"102\" y=\"115\" width=\"10\" height=\"25\" rx=\"5\" fill=\"#1E40AF\" />\n\n          {/* Laptop */}\n          <rect x=\"75\" y=\"100\" width=\"50\" height=\"30\" rx=\"3\" fill=\"#374151\" />\n          <rect x=\"78\" y=\"103\" width=\"44\" height=\"24\" rx=\"2\" fill=\"#60A5FA\" />\n\n          {/* Question marks floating around */}\n          <text x=\"140\" y=\"70\" fontSize=\"24\" fill=\"#93C5FD\">\n            ?\n          </text>\n          <text x=\"50\" y=\"90\" fontSize=\"20\" fill=\"#93C5FD\">\n            ?\n          </text>\n          <text x=\"160\" y=\"110\" fontSize=\"18\" fill=\"#93C5FD\">\n            ?\n          </text>\n        </svg>\n      </div>\n    </div>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "express",
          "type": "directory",
          "children": [
            {
              "name": "express-benefits.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Zap, Shield, MapPin, Phone, Clock, Award } from \"lucide-react\"\n\nexport function ExpressBenefits() {\n  const benefits = [\n    {\n      icon: Zap,\n      title: \"Velocidad M\u00e1xima\",\n      description: \"Entregas en el mismo d\u00eda con la mayor rapidez posible, priorizando tus env\u00edos.\",\n    },\n    {\n      icon: MapPin,\n      title: \"Seguimiento en Tiempo Real\",\n      description: \"Monitorea tu env\u00edo en vivo desde la recolecci\u00f3n hasta la entrega final.\",\n    },\n    {\n      icon: Phone,\n      title: \"Soporte Prioritario\",\n      description: \"L\u00ednea directa de atenci\u00f3n para clientes express con respuesta inmediata.\",\n    },\n    {\n      icon: Clock,\n      title: \"Horarios Flexibles\",\n      description: \"Elige el rango horario que mejor se adapte a tu agenda y necesidades.\",\n    },\n    {\n      icon: Award,\n      title: \"Garant\u00eda de Entrega\",\n      description: \"Tu envi\u00f3 ser\u00e1 entregado en tiempo y forma.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfPor Qu\u00e9 Elegir Express?</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Descubre todas las ventajas de nuestro servicio premium de entregas\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {benefits.map((benefit, index) => {\n            const IconComponent = benefit.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4\">\n                    <IconComponent className=\"w-6 h-6 text-red-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{benefit.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "express-content.tsx",
              "type": "file",
              "content": "\n\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Check } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\nimport Image from \"next/image\"\n\nexport function ExpressContent() {\n  const features = [\n    {\n      title: \"Entrega el mismo d\u00eda\",\n      description: \"Para pedidos realizados antes de las 15:00, garantizamos la entrega en el mismo d\u00eda.\",\n    },\n    {\n      title: \"Rango horario personalizado\",\n      description: \"Elige el rango horario que mejor se adapte a tus necesidades para recibir o enviar tu paquete.\",\n    },\n    {\n      title: \"Servicio prioritario\",\n      description: \"Tus env\u00edos tienen prioridad sobre otros servicios, asegurando la m\u00e1xima rapidez.\",\n    },\n  ]\n\n  const handleWhatsAppClick = () => {\n    const phoneNumber = \"5492236602699\"\n    const message = \"Hola, me gustar\u00eda consultar sobre el servicio de Env\u00edos Express.\"\n    const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`\n    window.open(whatsappUrl, \"_blank\")\n  }\n\n  const sectionVariants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1, transition: { staggerChildren: 0.2 } },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, x: -20 },\n    visible: { opacity: 1, x: 0, transition: { type: \"spring\", stiffness: 100 } },\n  };\n\n  return (\n    <section className=\"py-12 md:py-16 lg:py-20 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <motion.div \n          className=\"grid lg:grid-cols-2 gap-10 md:gap-12 items-center\"\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n          variants={sectionVariants}\n        >\n          {/* Left Content */}\n          <motion.div variants={itemVariants}>\n            <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-blue-800 mb-4 sm:mb-6\">\n              Entregas r\u00e1pidas y eficientes para tus necesidades\n            </h2>\n            <p className=\"text-base sm:text-lg text-gray-700 mb-6 sm:mb-8 leading-relaxed\">\n            Nuestro servicio Express est\u00e1 dise\u00f1ado para aquellas situaciones donde el tiempo es crucial. Garantizamos la entrega el mismo d\u00eda para todos los pedidos realizados antes de las 15:00, con la posibilidad de elegir un rango horario espec\u00edfico.\n            </p>\n\n            {/* Features */}\n            <div className=\"space-y-4 sm:space-y-6 mb-6 sm:mb-8\">\n              {features.map((feature, index) => (\n                <motion.div \n                  key={index} \n                  className=\"flex items-start\"\n                  custom={index}\n                  variants={itemVariants}\n                >\n                  <div className=\"w-5 h-5 sm:w-6 sm:h-6 bg-green-500 rounded-full flex items-center justify-center mr-3 sm:mr-4 flex-shrink-0 mt-1\">\n                    <Check className=\"w-3 h-3 sm:w-4 sm:h-4 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-semibold text-blue-800 mb-1 sm:mb-2\">{feature.title}</h3>\n                    <p className=\"text-sm sm:text-base text-gray-600 leading-relaxed\">{feature.description}</p>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n\n            {/* CTA Buttons */}\n            <motion.div \n              className=\"flex flex-col sm:flex-row gap-3 sm:gap-4\"\n              variants={itemVariants}\n            >\n              <Button\n                asChild\n                size=\"lg\"\n                className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold px-6 sm:px-8 py-2.5 sm:py-3 text-sm sm:text-base\"\n              >\n                <Link href=\"/cotizar/express\">Cotiza tu Env\u00edo</Link>\n              </Button>\n              <Button\n                onClick={handleWhatsAppClick}\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-green-500 text-green-600 hover:bg-green-50 px-6 sm:px-8 py-2.5 sm:py-3 text-sm sm:text-base\"\n              >\n                <Image src=\"/icon/icon-whatsapp-verde.svg\" alt=\"WhatsApp Icon\" width={20} height={20} className=\"w-4 h-4 sm:w-5 sm:h-5 mr-2\" />\n                Consultar por WhatsApp\n              </Button>\n            </motion.div>\n          </motion.div>\n\n          {/* Right Content - Large Branding */}\n          <motion.div \n            className=\"flex justify-center lg:justify-end mt-8 lg:mt-0\"\n            variants={itemVariants}\n            initial={{opacity: 0, x: 20}}\n            animate={{opacity:1, x: 0}}\n          >\n            <div className=\"text-center lg:text-right\">\n              <div className=\"space-y-1 sm:space-y-2\">\n                <div className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-bold text-transparent bg-gradient-to-r from-blue-400 to-teal-500 bg-clip-text\">\n                  ENVIOS\n                </div>\n                <div className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-bold text-gray-800\">DOS RUEDAS</div>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "express-cta.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Zap, Calculator } from \"lucide-react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\n\nexport function ExpressCta() {\n  const handleWhatsAppClick = () => {\n    const phoneNumber = \"5492236602699\"\n    const message = \"Necesito un env\u00edo express prioritario. \u00bfPueden ayudarme?\"\n    const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`\n    window.open(whatsappUrl, \"_blank\")\n  }\n\n  return (\n    <section className=\"py-16 px-4 bg-red-600\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-white\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Zap className=\"w-8 h-8 text-red-600\" />\n            </div>\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfNecesitas un Env\u00edo?</h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-2xl mx-auto\">\n            No esperes m\u00e1s. Nuestro equipo est\u00e1 listo para manejar tu env\u00edo express y garantizar que llegue a tiempo. \u00a1Cada minuto cuenta!\n            </p>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button asChild size=\"lg\" className=\"bg-red-600 hover:bg-red-700 text-white font-semibold\">\n                <Link href=\"/cotizar/express\">\n                  <Zap className=\"w-5 h-5 mr-2\" />\n                  Cotizar Express Ahora\n                </Link>\n              </Button>\n              <Button\n                onClick={handleWhatsAppClick}\n                size=\"lg\"\n                className=\"bg-green-500 hover:bg-green-600 text-white font-semibold\"\n              >\n                <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={20} height={20} className=\"w-5 h-5 mr-2\" />\n                WhatsApp Prioritario\n              </Button>\n            </div>\n\n          \n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "express-hero.tsx",
              "type": "file",
              "content": "// This file is no longer needed and has been replaced by HeroSection.tsx\n// It can be safely deleted.\n"
            },
            {
              "name": "express-page-client.tsx",
              "type": "file",
              "content": "'use client';\n\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ExpressContent } from \"@/components/express/express-content\";\nimport { ExpressBenefits } from \"@/components/express/express-benefits\";\nimport { UrgentScenarios } from \"@/components/express/urgent-scenarios\";\nimport { ExpressCta } from \"@/components/express/express-cta\";\nimport { ExpressPricingRanges } from \"@/components/express/express-pricing-ranges\";\nimport { Rocket, ArrowRight, Calculator as CalculatorIcon } from \"lucide-react\";\n\nexport function ExpressPageClient() {\n  return (\n    <>\n      <HeroSection\n        title={\n          <span className=\"text-yellow-400\">Mensajer\u00eda - Env\u00edos Express</span>\n        }\n        description={\n          <>\n            <p className=\"text-base sm:text-lg md:text-xl text-primary-foreground/90 mt-4 sm:mt-6 max-w-3xl mx-auto leading-relaxed\">\n              Servicio de mensajer\u00eda r\u00e1pido y confiable para entregas el mismo d\u00eda en Mar del Plata. Ideal para documentos y paquetes con m\u00e1xima prioridad.\n            </p>\n            <div className=\"mt-3 sm:mt-4 md:mt-6\">\n              <h2 className=\"text-xl sm:text-2xl md:text-3xl font-semibold text-primary-foreground mb-0.5 sm:mb-1\">\n                Envios DosRuedas\n              </h2>\n              <p className=\"text-xs sm:text-sm md:text-base text-primary-foreground/80\">\n                Tu Soluci\u00f3n Confiable para Env\u00edos\n              </p>\n            </div>\n          </>\n        }\n        ctaButtons={[\n          { text: \"Cotizar Env\u00edo Express\", href: \"/cotizar/express\", variant: \"secondary\", icon: \"Calculator\", className:\"text-sm sm:text-lg py-2.5 sm:py-3 px-5 sm:px-7\" },\n          { text: \"Ver Tarifas\", href: \"#express-pricing-ranges\", variant: \"outline\", className: \"bg-transparent border-primary-foreground/70 text-primary-foreground hover:bg-primary-foreground/10 hover:text-primary text-sm sm:text-lg py-2.5 sm:py-3 px-5 sm:px-7\", icon: \"ArrowRight\" },\n        ]}\n        backgroundType=\"image\"\n        backgroundImageUrl=\"/bannerenvios.png\"\n        backgroundImageAlt=\"Banner env\u00edos express Envios DosRuedas\"\n        backgroundOverlayOpacity={0.75}\n        textColorClassName=\"text-primary-foreground\"\n        layout=\"center-stacked\"\n        textAlignment=\"text-center\"\n        titleClassName=\"text-4xl sm:text-5xl md:text-6xl font-bold\"\n        minHeight=\"min-h-[65vh] sm:min-h-[70vh] md:min-h-[75vh]\"\n        className=\"py-12 sm:py-16 md:py-20\"\n      />\n      <ExpressContent />\n      <div id=\"express-pricing-ranges\">\n        <ExpressPricingRanges />\n      </div>\n      <ExpressBenefits />\n      <UrgentScenarios />\n      <ExpressCta />\n    </>\n  );\n}\n"
            },
            {
              "name": "express-pricing-ranges.tsx",
              "type": "file",
              "content": "\n\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Zap, MapPin, ArrowRightCircle, Calculator, AlertTriangle } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { preciosExpress, type PrecioRango } from \"@/lib/preciosexpress\";\nimport { motion } from \"framer-motion\";\n\nexport function ExpressPricingRanges() {\n  const displayedPriceRanges = preciosExpress.slice(0, 7);\n\n  const formatKmDisplay = (km: number, isMaxBoundaryInTitleOrRange: boolean = false) => {\n    const kmFixed = parseFloat(km.toFixed(2)); \n    if (isMaxBoundaryInTitleOrRange && String(kmFixed.toFixed(2)).endsWith('.99')) {\n      return Math.ceil(kmFixed).toString();\n    }\n    return Number.isInteger(kmFixed) ? kmFixed.toFixed(0) : kmFixed.toFixed(2).replace(\".\", \",\");\n  };\n\n  const expressTiers = displayedPriceRanges.map((rango: PrecioRango) => {\n    const titleMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n    const rangeMinKmFormatted = formatKmDisplay(rango.distancia_min_km);\n    const rangeMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n\n    return {\n      name: `Hasta ${titleMaxKmFormatted} km`,\n      icon: MapPin, \n      price: `$${rango.precio_rango.toLocaleString(\"es-AR\", {\n        minimumFractionDigits: rango.precio_rango % 1 === 0 ? 0 : 2,\n        maximumFractionDigits: 2,\n      })}`,\n      distanceRange: `${rangeMinKmFormatted} km - ${rangeMaxKmFormatted} km`,\n      description: `Para env\u00edos en el d\u00eda solicitado antes de 15hs`,\n      features: [\n        \"Servicio Express prioritario\",\n        \"Entrega en el mismo d\u00eda\",\n        \"Seguimiento en tiempo real\",\n      ],\n      color: \"border-blue-200 bg-blue-50\",\n      badgeText: \"Tarifa Express\",\n      badgeColor: \"bg-blue-600\",\n      iconColor: \"text-blue-600\",\n      priceColor: \"text-blue-700\",\n      featureIconColor: \"text-blue-500\",\n      iconBorderColor: \"border-blue-200\",\n    };\n  });\n\n  const cardVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: (i: number) => ({\n      opacity: 1,\n      y: 0,\n      transition: {\n        delay: i * 0.1,\n        type: \"spring\",\n        stiffness: 100,\n        damping: 10,\n      },\n    }),\n  };\n\n  return (\n    <section className=\"py-12 md:py-16 lg:py-20 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12 md:mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl md:text-4xl font-bold text-gray-800 mb-4\">\n            Tarifas Env\u00edos Express.\n          </h2>\n          <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n            Consulta los precios para nuestros rangos de distancia m\u00e1s comunes. Para distancias mayores o una cotizaci\u00f3n exacta con mapa, utiliza nuestro cotizador.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {expressTiers.map((tier, index) => (\n            <motion.div\n              key={index}\n              custom={index}\n              variants={cardVariants}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true, amount: 0.3 }}\n            >\n              <Card\n                className={`relative ${tier.color} border-2 hover:shadow-xl transition-all duration-300 ease-in-out hover:-translate-y-1 flex flex-col h-full`}\n              >\n                <Badge\n                  className={`absolute -top-2.5 left-1/2 transform -translate-x-1/2 ${tier.badgeColor} text-white px-3 py-1 text-xs font-medium`}\n                >\n                  {tier.badgeText}\n                </Badge>\n                <CardHeader className=\"text-center pb-3 pt-8\">\n                  <div className={`w-14 h-14 sm:w-16 sm:h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-3 border-2 ${tier.iconBorderColor}`}>\n                    <Zap className={`w-7 h-7 sm:w-8 sm:h-8 ${tier.iconColor}`} />\n                  </div>\n                  <CardTitle className=\"text-xl sm:text-2xl font-bold text-gray-800\">\n                    {tier.name}\n                  </CardTitle>\n                  <p className=\"text-xs sm:text-sm text-gray-500\">\n                    {tier.distanceRange}\n                  </p>\n                  <div className={`text-2xl sm:text-3xl font-bold ${tier.priceColor} my-1`}>\n                    {tier.price}\n                  </div>\n                </CardHeader>\n                <CardContent className=\"flex-grow\">\n                  <p className=\"text-gray-600 mb-3 text-center text-xs sm:text-sm\">\n                    {tier.description}\n                  </p>\n                  <ul className=\"space-y-1.5 text-xs sm:text-sm\">\n                    {tier.features.map((feature, featureIndex) => (\n                      <li\n                        key={featureIndex}\n                        className=\"flex items-center text-gray-700\"\n                      >\n                        <ArrowRightCircle className={`w-3.5 h-3.5 sm:w-4 sm:h-4 ${tier.featureIconColor} mr-1.5 flex-shrink-0`} />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n\n          <motion.div\n             custom={expressTiers.length}\n             variants={cardVariants}\n             initial=\"hidden\"\n             whileInView=\"visible\"\n             viewport={{ once: true, amount: 0.3 }}\n          >\n            <Card className=\"relative border-gray-300 bg-gray-100 border-2 hover:shadow-xl transition-all duration-300 ease-in-out hover:-translate-y-1 flex flex-col h-full\">\n              <Badge\n                  className=\"absolute -top-2.5 left-1/2 transform -translate-x-1/2 bg-gray-700 text-white px-3 py-1 text-xs font-medium\"\n              >\n                  Cotizaci\u00f3n Din\u00e1mica\n              </Badge>\n              <CardHeader className=\"text-center pb-3 pt-8\">\n                <div className=\"w-14 h-14 sm:w-16 sm:h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-3 border-2 border-gray-300\">\n                  <Calculator className=\"w-7 h-7 sm:w-8 sm:h-8 text-gray-700\" />\n                </div>\n                <CardTitle className=\"text-xl sm:text-2xl font-bold text-gray-800\">\n                  Distancias Mayores\n                </CardTitle>\n                <p className=\"text-xs sm:text-sm text-gray-500\">\n                  o Cotizaci\u00f3n Exacta con Mapa\n                </p>\n              </CardHeader>\n              <CardContent className=\"flex-grow flex flex-col justify-between\">\n                <p className=\"text-gray-600 mb-3 text-center text-xs sm:text-sm\">\n                  Para env\u00edos que superen los rangos mostrados o para una cotizaci\u00f3n precisa con visualizaci\u00f3n de ruta, utiliza nuestro cotizador Express.\n                </p>\n                <Button\n                  asChild\n                  className=\"w-full bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold mt-3 py-2.5 text-sm sm:text-base\"\n                  size=\"lg\"\n                >\n                  <Link href=\"/cotizar/express\">\n                    <Calculator className=\"w-4 h-4 mr-2\" />\n                    Ir al Cotizador Express\n                  </Link>\n                </Button>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n         <Card className=\"mt-8 md:mt-12 bg-yellow-50 border-yellow-300\">\n          <CardContent className=\"p-4 sm:p-6 flex items-start space-x-3\">\n            <AlertTriangle className=\"h-5 w-5 sm:h-6 sm:w-6 text-yellow-600 flex-shrink-0 mt-0.5\" />\n            <div>\n              <h4 className=\"font-semibold text-yellow-800 text-sm sm:text-base\">Nota Importante sobre Tarifas Express:</h4>\n              <p className=\"text-xs sm:text-sm text-yellow-700\">\n                Los precios mostrados son para los rangos iniciales y est\u00e1n sujetos a confirmaci\u00f3n. El Cotizador Express proporciona el precio final m\u00e1s preciso basado en la distancia exacta, tiempo estimado y posibles factores adicionales (hora pico, tama\u00f1o del paquete).\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "time-slots.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Clock, Zap, Calendar } from \"lucide-react\"\n\nexport function TimeSlots() {\n  const timeSlots = [\n    {\n      icon: Zap,\n      title: \"Express Inmediato\",\n      time: \"30-60 minutos\",\n      description: \"Para emergencias y documentos\",\n      price: \"Desde $3,500\",\n      features: [\"M\u00e1xima prioridad\", \"Seguimiento en vivo\", \"Confirmaci\u00f3n inmediata\"],\n    },\n    {\n      icon: Clock,\n      title: \"Express Ma\u00f1ana\",\n      time: \"9:00 - 13:00\",\n      description: \"Entrega garantizada en horario matutino\",\n      price: \"Desde $2,800\",\n      features: [\"Horario comercial\", \"Ideal para oficinas\", \"Seguimiento completo\"],\n    },\n    {\n      icon: Calendar,\n      title: \"Express Tarde\",\n      time: \"14:00 - 18:00\",\n      description: \"Perfecto para entregas de tarde\",\n      price: \"Desde $2,800\",\n      features: [\"Horario extendido\", \"Entregas residenciales\", \"Flexibilidad horaria\"],\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Opciones de Horarios Express</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Elige el horario que mejor se adapte a tus necesidades\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {timeSlots.map((slot, index) => {\n            const IconComponent = slot.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <IconComponent className=\"w-8 h-8 text-red-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-800 mb-2\">{slot.title}</h3>\n                  <div className=\"text-2xl font-bold text-red-600 mb-2\">{slot.time}</div>\n                  <p className=\"text-gray-600 mb-4\">{slot.description}</p>\n                  <div className=\"text-lg font-semibold text-blue-600 mb-4\">{slot.price}</div>\n                  <ul className=\"space-y-2\">\n                    {slot.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"text-sm text-gray-600 flex items-center justify-center\">\n                        <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mr-2\"></div>\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "urgent-scenarios.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { FileText, Heart, Briefcase, Gift } from \"lucide-react\"\n\nexport function UrgentScenarios() {\n  const scenarios = [\n    {\n      icon: FileText,\n      title: \"Documentos\",\n      description: \"Contratos, documentos legales, certificados que no pueden esperar.\",\n      examples: [\"Documentos notariales\", \"Contratos comerciales\", \"Certificados m\u00e9dicos\"],\n    },\n    {\n      icon: Heart,\n      title: \"Emergencias M\u00e9dicas\",\n      description: \"Medicamentos, an\u00e1lisis m\u00e9dicos y suministros de salud con prioridad de entrega.\",\n      examples: [\"Medicamentos especiales\", \"Resultados de laboratorio\", \"Suministros m\u00e9dicos\"],\n    },\n    {\n      icon: Briefcase,\n      title: \"Negocios Cr\u00edticos\",\n      description: \"Entregas comerciales que no pueden retrasarse sin afectar operaciones.\",\n      examples: [\"Repuestos\", \"Muestras comerciales\", \"Productos perecederos\"],\n    },\n    {\n      icon: Gift,\n      title: \"Ocasiones Especiales\",\n      description: \"Regalos y sorpresas que deben llegar en un rango horario acotado\",\n      examples: [\"Regalos de cumplea\u00f1os\", \"Desayunos/Meriendas\", \"Comida especial\"],\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfCu\u00e1ndo Necesitas Express?</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Situaciones donde cada minuto cuenta y la rapidez es fundamental\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-8\">\n          {scenarios.map((scenario, index) => {\n            const IconComponent = scenario.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start mb-4\">\n                    <div className=\"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mr-4 flex-shrink-0\">\n                      <IconComponent className=\"w-6 h-6 text-yellow-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">{scenario.title}</h3>\n                      <p className=\"text-gray-600 leading-relaxed mb-4\">{scenario.description}</p>\n                    </div>\n                  </div>\n                  <div className=\"ml-16\">\n                    <h4 className=\"font-semibold text-gray-700 mb-2\">Ejemplos comunes:</h4>\n                    <ul className=\"space-y-1\">\n                      {scenario.examples.map((example, exampleIndex) => (\n                        <li key={exampleIndex} className=\"text-sm text-gray-600 flex items-center\">\n                          <div className=\"w-1.5 h-1.5 bg-red-500 rounded-full mr-2\"></div>\n                          {example}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "faq",
          "type": "directory",
          "children": [
            {
              "name": "faq-categories.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { FaqItem } from \"./faq-item\"\nimport { Truck, DollarSign, Clock } from \"lucide-react\"\n\ninterface FaqData {\n  category: string\n  icon: React.ElementType\n  questions: Array<{\n    question: string\n    answer: string\n  }>\n}\n\nexport function FaqCategories() {\n  const [activeCategory, setActiveCategory] = useState(\"servicios\")\n\n  const faqData: FaqData[] = [\n    {\n      category: \"servicios\",\n      icon: Truck,\n      questions: [\n        {\n          question: \"\u00bfQu\u00e9 tipo de env\u00edos realizan?\",\n          answer:\n            \"Transportamos en moto: mandados, tr\u00e1mites, paquetes, delivery y servicios de cadeter\u00eda.\",\n        },\n        {\n          question: \"\u00bfCu\u00e1les son las zonas de cobertura? \u00bfCubren toda la ciudad/regi\u00f3n?\",\n          answer:\n            \"Cubrimos toda la ciudad, con la excepci\u00f3n de algunas zonas catalogadas como peligrosas por motivos de seguridad.\",\n        },\n        {\n          question: \"\u00bfRealizan entregas a Contrareembolso?\",\n          answer:\n            \"S\u00ed, el efectivo cobrado ser\u00e1 rendido en el transcurso del d\u00eda o al d\u00eda siguiente.\",\n        },\n        {\n          question: \"\u00bfCu\u00e1l es el tiempo estimado de entrega? \u00bfOfrecen entregas?\",\n          answer:\n            \"No trabajamos con urgencias. Solicitamos una anticipaci\u00f3n m\u00ednima de 2 horas para organizarnos y entregar todo en tiempo y forma. Seg\u00fan el tipo de env\u00edo, la entrega se realizar\u00e1 en el horario pactado.\",\n        },\n        {\n          question: \"\u00bfC\u00f3mo puedo solicitar un servicio de mensajer\u00eda?\",\n          answer:\n            \"Comun\u00edcate por mensaje de WhatsApp al 2236602699 y un operador te responder\u00e1 a la brevedad.\",\n        },\n        {\n          question: \"\u00bfCu\u00e1les son sus horarios de atenci\u00f3n/servicio?\",\n          answer:\n            \"Nuestro horario de atenci\u00f3n es de lunes a viernes de 8 a 18 hs y s\u00e1bados de 9 a 15 hs. Consulta por WhatsApp para el servicio de delivery nocturno.\",\n        },\n        {\n          question: \"\u00bfTrabajan con empresas o solo con particulares?\",\n          answer: \"Atendemos empresas, emprendedores y particulares.\",\n        },\n        {\n          question: \"\u00bfQu\u00e9 los diferencia de otros servicios de mensajer\u00eda en moto?\",\n          answer:\n            \"Buscamos brindar un servicio de excelente calidad, donde la responsabilidad y la confianza son nuestros principales pilares.\",\n        },\n      ],\n    },\n    {\n      category: \"precios\",\n      icon: DollarSign,\n      questions: [\n        {\n          question: \"\u00bfC\u00f3mo calculan el costo del env\u00edo?\",\n          answer:\n            \"El costo de env\u00edo se calcula seg\u00fan la distancia entre el retiro y la entrega, y adicionales que puedan existir (bulto, lluvia, demora, distancia de retiro).\",\n        },\n        {\n          question: \"\u00bfCu\u00e1les son las formas de pago que aceptan?\",\n          answer: \"Se puede abonar en efectivo o por transferencia.\",\n        },\n        {\n          question: \"\u00bfEmiten factura?\",\n          answer: \"Realizamos factura C.\",\n        },\n        {\n          question: \"\u00bfOfrecen descuentos para emprendedores o clientes masivos?\",\n          answer: \"S\u00ed, ofrecemos planes especiales para emprendedores y clientes con muchos env\u00edos.\",\n        },\n      ],\n    },\n    {\n      category: \"proceso\",\n      icon: Clock,\n      questions: [\n        {\n          question: \"\u00bfQu\u00e9 informaci\u00f3n necesito proporcionar para solicitar un env\u00edo?\",\n          answer:\n            \"Para solicitar un env\u00edo necesitamos los siguientes datos: direcci\u00f3n de retiro, direcci\u00f3n de entrega, tama\u00f1o del env\u00edo, nombre y tel\u00e9fono de quien recibe.\",\n        },\n        {\n          question: \"\u00bfPuedo modificar la direcci\u00f3n de entrega una vez que el env\u00edo est\u00e1 en curso?\",\n          answer:\n            \"S\u00ed, pero dependiendo de la distancia, podr\u00eda tener un costo adicional.\",\n        },\n        {\n          question: \"\u00bfQu\u00e9 sucede si el destinatario no est\u00e1 presente en el momento de la entrega?\",\n          answer:\n            \"El env\u00edo ser\u00e1 cobrado de igual manera, y se deber\u00e1 reprogramar la entrega y abonar otro env\u00edo.\",\n        },\n        {\n          question: \"\u00bfQu\u00e9 pasa si necesito cancelar un env\u00edo? \u00bfHay alg\u00fan cargo?\",\n          answer:\n            \"Depende del momento de la cancelaci\u00f3n y a qu\u00e9 distancia de la entrega o el retiro se encuentre el cadete.\",\n        },\n      ],\n    },\n  ]\n\n  const categories = [\n    { id: \"servicios\", label: \"Servicios Generales\", icon: Truck },\n    { id: \"precios\", label: \"Precios y Pagos\", icon: DollarSign },\n    { id: \"proceso\", label: \"Proceso de Env\u00edo\", icon: Clock },\n  ]\n\n  const activeFaq = faqData.find((faq) => faq.category === activeCategory)\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        {/* Category Buttons */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-12\">\n          {categories.map((category) => {\n            const IconComponent = category.icon\n            const isActive = activeCategory === category.id\n\n            return (\n              <Button\n                key={category.id}\n                onClick={() => setActiveCategory(category.id)}\n                variant={isActive ? \"default\" : \"outline\"}\n                className={`h-auto p-4 flex flex-col items-center space-y-2 transition-all duration-200 ${\n                  isActive ? \"bg-blue-600 hover:bg-blue-700 text-white shadow-lg scale-105\" : \"hover:bg-blue-50 hover:border-blue-300\"\n                }`}\n              >\n                <IconComponent className=\"w-6 h-6\" />\n                <span className=\"text-sm font-medium\">{category.label}</span>\n              </Button>\n            )\n          })}\n        </div>\n\n        {/* FAQ Items */}\n        <div className=\"max-w-4xl mx-auto\">\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-800 mb-8 text-center\">\n            {categories.find((cat) => cat.id === activeCategory)?.label}\n          </h2>\n\n          {activeFaq?.questions.map((faq, index) => (\n            <FaqItem key={index} question={faq.question} answer={faq.answer} defaultOpen={index === 0} />\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "faq-contact-cta.tsx",
              "type": "file",
              "content": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { MessageCircle, Phone, Mail } from \"lucide-react\"\n\nexport function FaqContactCta() {\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\u00bfNo encontraste lo que buscabas?</h2>\n            <p className=\"text-lg mb-8 text-blue-100\">\n              Nuestro equipo est\u00e1 listo para ayudarte con cualquier consulta espec\u00edfica sobre nuestros servicios.\n            </p>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button asChild size=\"lg\" className=\"bg-green-500 hover:bg-green-600 text-white\">\n                <a\n                  href=\"https://wa.me/5492236602699?text=Hola, tengo una consulta que no encontr\u00e9 en las FAQ\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <MessageCircle className=\"w-5 h-5 mr-2\" />\n                  WhatsApp\n                </a>\n              </Button>\n\n              <Button\n                asChild\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-white text-white hover:bg-white hover:text-blue-600\"\n              >\n                <a href=\"tel:+542236602699\">\n                  <Phone className=\"w-5 h-5 mr-2\" />\n                  223-660-2699\n                </a>\n              </Button>\n\n              <Button\n                asChild\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-white text-white hover:bg-white hover:text-blue-600\"\n              >\n                <Link href=\"/contacto\">\n                  <Mail className=\"w-5 h-5 mr-2\" />\n                  Contacto\n                </Link>\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "faq-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { HelpCircle } from \"lucide-react\";\n\nexport function FaqHero() {\n  return (\n    <HeroSection\n      preTitle={\n        <div className=\"w-20 h-20 bg-yellow-400/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n          <HelpCircle className=\"w-10 h-10 text-yellow-400\" />\n        </div>\n      }\n      title={<span className=\"text-yellow-400\">Preguntas Frecuentes</span>}\n      description={\n        <>\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mt-4 mb-2 font-semibold\">Envios DosRuedas</h2>\n          <p className=\"text-lg md:text-xl text-primary-foreground/80 max-w-3xl mx-auto leading-relaxed\">\n            Encuentra respuestas a las preguntas m\u00e1s comunes sobre nuestros servicios de mensajer\u00eda y delivery en Mar del Plata.\n          </p>\n        </>\n      }\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner FAQ Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[50vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"text-4xl md:text-5xl lg:text-6xl font-bold\"\n    />\n  );\n}\n"
            },
            {
              "name": "faq-item.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { ChevronDown, ChevronUp } from \"lucide-react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\n\ninterface FaqItemProps {\n  question: string\n  answer: string\n  defaultOpen?: boolean\n}\n\nexport function FaqItem({ question, answer, defaultOpen = false }: FaqItemProps) {\n  const [isOpen, setIsOpen] = useState(defaultOpen)\n\n  return (\n    <Card className=\"mb-4 shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <CardContent className=\"p-0\">\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className=\"w-full text-left p-6 flex items-center justify-between hover:bg-gray-50 transition-colors duration-200\"\n          aria-expanded={isOpen}\n        >\n          <h3 className=\"text-lg font-semibold text-gray-800 pr-4\">{question}</h3>\n          {isOpen ? (\n            <ChevronUp className=\"w-5 h-5 text-blue-600 flex-shrink-0\" />\n          ) : (\n            <ChevronDown className=\"w-5 h-5 text-gray-400 flex-shrink-0\" />\n          )}\n        </button>\n\n        {isOpen && (\n          <div className=\"px-6 pb-6\">\n            <div className=\"pt-2 border-t border-gray-100\">\n              <p className=\"text-gray-600 leading-relaxed\">{answer}</p>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "footer.tsx",
          "type": "file",
          "content": "\n\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Phone,\n  Mail,\n  MapPin,\n  Facebook,\n  Instagram,\n  Twitter,\n  ChevronUp,\n} from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { navGroups } from \"@/lib/navigation\"\n\nexport function Footer() {\n  const [isVisible, setIsVisible] = useState(false)\n  const [currentYear, setCurrentYear] = useState<number | null>(null);\n\n  useEffect(() => {\n    setCurrentYear(new Date().getFullYear());\n\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true)\n      } else {\n        setIsVisible(false)\n      }\n    }\n    window.addEventListener(\"scroll\", toggleVisibility)\n    return () => window.removeEventListener(\"scroll\", toggleVisibility)\n  }, [])\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    })\n  }\n\n  const socialLinks = [\n    { label: \"Facebook\", Icon: Facebook, href: \"https://facebook.com/enviosdosruedas\" },\n    { label: \"Instagram\", Icon: Instagram, href: \"https://instagram.com/enviosdosruedas\" },\n    { label: \"Twitter\", Icon: Twitter, href: \"https://twitter.com/enviosdosruedas\" },\n  ]\n\n  return (\n    <motion.footer \n      className=\"bg-primary text-primary-foreground/80 border-t border-primary-foreground/10 relative\"\n      initial={{ opacity: 0, y: 50 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true, amount: 0.2 }}\n      transition={{ duration: 0.6, ease: \"easeOut\" }}\n    >\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-10 md:py-16\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 md:gap-10\">\n          {/* Company Info */}\n          <div className=\"md:col-span-2 lg:col-span-1\">\n            <Link href=\"/\" className=\"flex items-center space-x-2.5 mb-4 group\">\n              <Image\n                src=\"/LogoEnviosDosRuedas.webp\"\n                alt=\"Envios DosRuedas Logo\"\n                width={40}\n                height={40}\n                className=\"rounded-full transform group-hover:scale-105 transition-transform duration-300\"\n                sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n              />\n              <h3 className=\"text-lg font-bold text-secondary group-hover:text-yellow-300 transition-colors\">\n                Envios DosRuedas\n              </h3>\n            </Link>\n            <p className=\"text-sm mb-6 leading-relaxed\">\n              Tu soluci\u00f3n confiable para mensajer\u00eda y delivery en Mar del Plata y alrededores.\n            </p>\n            <div className=\"flex space-x-2\">\n              {socialLinks.map(social => (\n                 <motion.a\n                    key={social.label}\n                    href={social.href}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    whileHover={{ scale: 1.15, rotate: 5 }}\n                    className=\"p-2 rounded-full text-primary-foreground/80 hover:bg-primary-foreground/10 hover:text-secondary transition-all duration-200\"\n                    aria-label={`${social.label} de Envios DosRuedas`}\n                  >\n                    <social.Icon className=\"w-5 h-5\" />\n                  </motion.a>\n              ))}\n            </div>\n          </div>\n\n          {/* Navigation Menus */}\n          {navGroups.slice(0, 2).map(group => (\n            <div key={group.label}>\n              <h4 className=\"font-heading text-base font-semibold text-primary-foreground mb-4 pb-2 border-b-2 border-secondary inline-block\">{group.label}</h4>\n              <ul className=\"space-y-2 text-sm\">\n                {group.items.map(item => {\n                  const Icon = item.icon;\n                  return (\n                    <li key={item.href}>\n                        <motion.div whileHover={{ x: 4 }}>\n                            <Link href={item.href} className=\"flex items-center gap-2 text-primary-foreground/80 hover:text-primary-foreground transition-colors duration-200 py-1.5\">\n                                {Icon && <Icon className=\"w-4 h-4 text-secondary\" />}\n                                {item.label}\n                            </Link>\n                        </motion.div>\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n          ))}\n\n          {/* Contact Info */}\n          <div className=\"lg:pl-3\">\n             <h4 className=\"font-heading text-base font-semibold text-primary-foreground mb-4 pb-2 border-b-2 border-secondary inline-block\">Contacto R\u00e1pido</h4>\n            <ul className=\"space-y-3\">\n              {[\n                {Icon: MapPin, text: \"Mar del Plata, Argentina\"},\n                {Icon: Phone, text: \"223-660-2699\", href: \"tel:2236602699\"},\n                {Icon: Mail, text: \"matiascejas@enviosdosruedas.com\", href: \"mailto:matiascejas@enviosdosruedas.com\"},\n              ].map(({Icon, text, href}) => (\n                <li key={text}>\n                    <motion.a\n                        href={href || undefined}\n                        className=\"flex items-start space-x-3 group text-sm\"\n                        whileHover={href ? { x: 4 } : {}}\n                    >\n                        <Icon className=\"w-4 h-4 text-secondary mt-1 flex-shrink-0\" />\n                        <span className={cn(\"transition-colors\", href && \"group-hover:text-primary-foreground\")}>{text}</span>\n                    </motion.a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-primary-foreground/10 mt-8 md:mt-12 pt-6 md:pt-8 text-center\">\n         {currentYear !== null && (\n            <p className=\"text-sm\">\n              &copy; {currentYear} Envios DosRuedas. Todos los derechos reservados.\n            </p>\n          )}\n        </div>\n      </div>\n\n      <AnimatePresence>\n        {isVisible && (\n          <motion.div\n            initial={{ opacity: 0, y: 20, scale: 0.8 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: 20, scale: 0.8 }}\n            whileHover={{ scale: 1.15, rotate: 5 }}\n            transition={{ duration: 0.3, ease: \"easeOut\" }}\n            className=\"fixed bottom-4 right-4 sm:bottom-5 sm:right-5 z-50\"\n          >\n            <Button\n              onClick={scrollToTop}\n              className=\"p-2.5 rounded-full bg-secondary text-primary shadow-lg hover:bg-yellow-400 focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 focus:ring-offset-gray-900\"\n              aria-label=\"Volver arriba\"\n              variant=\"secondary\"\n              size=\"icon\"\n            >\n              <ChevronUp className=\"w-6 h-6\" />\n            </Button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.footer>\n  )\n}\n"
        },
        {
          "name": "header.tsx",
          "type": "file",
          "content": "\n\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\nimport { usePathname } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger, SheetClose } from \"@/components/ui/sheet\"\nimport { Menu, X, Home, Truck, Calculator as CalculatorIcon, Users, Mail, ChevronDown } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { navGroups, type NavGroup } from \"@/lib/navigation\";\n\nconst mobileNavVariants = {\n    hidden: {},\n    visible: {\n        transition: {\n            staggerChildren: 0.05,\n        }\n    }\n};\n\nconst mobileNavItemVariants = {\n    hidden: { opacity: 0, x: -20 },\n    visible: { opacity: 1, x: 0 }\n};\n\nconst NavLink = ({ href, children, isActive }: { href: string, children: React.ReactNode, isActive: boolean }) => (\n    <motion.div whileHover={{ scale: 1.05 }} className=\"relative\">\n      <Button variant=\"ghost\" size=\"sm\" asChild className={cn(\"text-primary-foreground hover:bg-primary-foreground/20 hover:text-white\", isActive && \"bg-secondary text-secondary-foreground hover:bg-secondary/80 hover:text-secondary-foreground\")}>\n        <Link href={href}>\n          {children}\n        </Link>\n      </Button>\n      {isActive && (\n         <motion.div\n            className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-secondary rounded-full\"\n            layoutId=\"underline\"\n          />\n      )}\n    </motion.div>\n  );\n\nexport function Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [openMobileSections, setOpenMobileSections] = useState<Record<string, boolean>>({})\n  const pathname = usePathname()\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"\";\n    }\n    return () => {\n      document.body.style.overflow = \"\";\n    }\n  }, [isMenuOpen])\n\n  const toggleMobileSection = (label: string) => {\n    setOpenMobileSections((prev) => ({ ...prev, [label]: !prev[label] }))\n  }\n\n  const isActive = (href: string, isExact = false) => {\n    if (isExact) return pathname === href\n    if (href !== \"/\" && pathname.startsWith(href)) return true;\n    return false;\n  }\n\n  const isGroupActive = (group: NavGroup) => {\n    if (group.basePath && isActive(group.basePath)) return true\n    return group.items.some(item => isActive(item.href))\n  }\n  \n  const closeMenu = () => setIsMenuOpen(false);\n\n  return (\n    <>\n      <motion.header \n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        transition={{ duration: 0.5, ease: \"easeOut\" }}\n        className={cn(\n        \"sticky top-0 z-50 transition-all duration-300\",\n        isScrolled \n            ? \"py-2 bg-primary/80 backdrop-blur-lg shadow-lg border-b border-primary-foreground/10\" \n            : \"py-3 bg-primary shadow-md\"\n      )}>\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-between\">\n            <Link href=\"/\" className=\"flex items-center space-x-2.5\">\n              <Image\n                src=\"/LogoEnviosDosRuedas.webp\"\n                alt=\"Envios DosRuedas Logo\"\n                width={isScrolled ? 32 : 40}\n                height={isScrolled ? 32 : 40}\n                className=\"rounded-full transition-all duration-300\"\n                priority\n                sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n              />\n              <div>\n                <h1 className={cn(\n                  \"font-bold text-secondary transition-all duration-300\",\n                  isScrolled ? \"text-base\" : \"text-lg\"\n                )}>Envios DosRuedas</h1>\n                <p className={cn(\n                  \"text-xs text-primary-foreground/90 -mt-0.5 transition-all duration-300\",\n                   isScrolled ? \"opacity-0 h-0\" : \"opacity-100 h-auto\"\n                )}>Tu Soluci\u00f3n Confiable</p>\n              </div>\n            </Link>\n\n            <nav className=\"hidden lg:flex items-center space-x-1\">\n                 <NavLink href=\"/\" isActive={isActive(\"/\", true)}>\n                    <Home className=\"w-4 h-4 mr-1.5\" /> Inicio\n                </NavLink>\n\n              {navGroups.map((group) => (\n                <motion.div key={group.label} whileHover={{ scale: 1.05 }} className=\"relative\">\n                    <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\" className={cn(\"text-primary-foreground hover:bg-primary-foreground/20 hover:text-white\", isGroupActive(group) && \"bg-secondary text-secondary-foreground hover:bg-secondary/80 hover:text-secondary-foreground\")}>\n                        <group.icon className=\"w-4 h-4 mr-1.5\" />\n                        {group.label}\n                        <ChevronDown className=\"w-4 h-4 ml-1 opacity-70\" />\n                        </Button>\n                    </DropdownMenuTrigger>\n                    {isGroupActive(group) && <motion.div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-secondary rounded-full\" layoutId=\"underline\" />}\n                    <AnimatePresence>\n                        <DropdownMenuContent className=\"bg-popover/80 backdrop-blur-lg border text-popover-foreground shadow-lg mt-2 w-56\">\n                            {group.items.map((item) => {\n                              const Icon = item.icon;\n                              return (\n                                <DropdownMenuItem key={item.href} asChild>\n                                  <motion.div whileHover={{x:3}}>\n                                  <Link\n                                  href={item.href}\n                                  className={cn(\n                                      \"cursor-pointer transition-colors duration-150 flex items-center w-full px-3 py-2 text-sm\",\n                                      isActive(item.href)\n                                      ? \"bg-accent text-accent-foreground font-medium\"\n                                      : \"hover:bg-accent hover:text-accent-foreground\"\n                                  )}\n                                  >\n                                  {Icon && <Icon className=\"w-4 h-4 mr-2\" />}\n                                  {item.label}\n                                  </Link>\n                                  </motion.div>\n                                </DropdownMenuItem>\n                              )\n                            })}\n                        </DropdownMenuContent>\n                    </AnimatePresence>\n                    </DropdownMenu>\n                </motion.div>\n              ))}\n                <NavLink href=\"/contacto\" isActive={isActive(\"/contacto\")}>\n                  <Mail className=\"w-4 h-4 mr-1.5\" /> Contacto\n                </NavLink>\n\n                <motion.div whileHover={{ scale: 1.05 }} className=\"ml-2\">\n                    <Button asChild size=\"sm\" className=\"bg-secondary hover:bg-secondary/90 text-secondary-foreground shadow-md hover:shadow-lg\">\n                        <Link href=\"/cotizar/express\">\n                            <CalculatorIcon className=\"w-4 h-4 mr-2\" />\n                            Cotizar Env\u00edo\n                        </Link>\n                    </Button>\n                </motion.div>\n            </nav>\n\n            <Sheet open={isMenuOpen} onOpenChange={setIsMenuOpen}>\n              <SheetTrigger asChild className=\"lg:hidden\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"text-primary-foreground hover:text-secondary hover:bg-primary/80 transition-colors duration-200\"\n                  aria-label={isMenuOpen ? \"Cerrar men\u00fa\" : \"Abrir men\u00fa\"}\n                >\n                  <AnimatePresence initial={false} mode=\"wait\">\n                    <motion.div\n                      key={isMenuOpen ? \"x\" : \"menu\"}\n                      initial={{ rotate: isMenuOpen ? -90 : 90, opacity: 0 }}\n                      animate={{ rotate: 0, opacity: 1 }}\n                      exit={{ rotate: isMenuOpen ? 90 : -90, opacity: 0 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      {isMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n                    </motion.div>\n                  </AnimatePresence>\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[85vw] max-w-sm bg-primary text-primary-foreground p-0 flex flex-col\">\n                <SheetHeader className=\"p-4 border-b border-primary-foreground/20 text-left\">\n                   <SheetTitle className=\"flex items-center space-x-2.5\">\n                     <Image src=\"/LogoEnviosDosRuedas.webp\" alt=\"Logo\" width={32} height={32} className=\"rounded-full\" />\n                     <span className=\"text-md font-bold text-secondary\">Envios DosRuedas</span>\n                   </SheetTitle>\n                </SheetHeader>\n                \n                <motion.div \n                    className=\"flex-grow overflow-y-auto p-4 space-y-2\"\n                    variants={mobileNavVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                >\n                  <motion.div variants={mobileNavItemVariants}>\n                    <SheetClose asChild>\n                        <Link\n                        href=\"/\"\n                        className={cn(\n                            \"flex items-center space-x-3 py-3 px-3 rounded-md transition-colors duration-200 w-full text-left\",\n                            isActive(\"/\", true)\n                            ? \"bg-secondary text-secondary-foreground font-semibold\"\n                            : \"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10\"\n                        )}\n                        >\n                        <Home className=\"w-5 h-5\" />\n                        <span className=\"font-medium text-base\">Inicio</span>\n                        </Link>\n                    </SheetClose>\n                  </motion.div>\n\n                  {navGroups.map((group) => (\n                    <motion.div key={group.label} variants={mobileNavItemVariants}>\n                      <button\n                        onClick={() => toggleMobileSection(group.label)}\n                        className={cn(\n                          \"flex items-center justify-between w-full space-x-3 py-3 px-3 rounded-md transition-colors duration-200 text-left\",\n                          isGroupActive(group) && !openMobileSections[group.label]\n                            ? \"text-secondary font-semibold hover:bg-primary-foreground/15\"\n                            : \"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10\"\n                        )}\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <group.icon className=\"w-5 h-5\" />\n                          <span className=\"font-medium text-base\">{group.label}</span>\n                        </div>\n                        <ChevronDown className={cn(\"w-5 h-5 transition-transform\", openMobileSections[group.label] && \"rotate-180\")} />\n                      </button>\n                      <AnimatePresence>\n                        {openMobileSections[group.label] && (\n                          <motion.div\n                            initial={{ height: 0, opacity: 0 }}\n                            animate={{ height: \"auto\", opacity: 1 }}\n                            exit={{ height: 0, opacity: 0 }}\n                            transition={{ duration: 0.2, ease: \"easeInOut\" }}\n                            className=\"pl-6 mt-1 space-y-0.5 overflow-hidden\"\n                          >\n                            {group.items.map((item) => {\n                              const Icon = item.icon;\n                              return (\n                                <SheetClose asChild key={item.href}>\n                                  <Link\n                                    href={item.href}\n                                    className={cn(\n                                      \"flex items-center gap-3 py-2.5 px-3 rounded-md transition-colors duration-200 text-sm w-full text-left\",\n                                      isActive(item.href)\n                                        ? \"bg-secondary/80 text-secondary-foreground font-semibold\"\n                                        : \"text-primary-foreground/80 hover:text-secondary hover:bg-primary-foreground/10\"\n                                    )}\n                                  >\n                                    {Icon && <Icon className=\"w-4 h-4 text-secondary\" />}\n                                    <span>{item.label}</span>\n                                  </Link>\n                                </SheetClose>\n                              )\n                            })}\n                          </motion.div>\n                        )}\n                      </AnimatePresence>\n                    </motion.div>\n                  ))}\n                  <motion.div variants={mobileNavItemVariants}>\n                    <SheetClose asChild>\n                        <Link\n                        href=\"/contacto\"\n                        className={cn(\n                            \"flex items-center space-x-3 py-3 px-3 rounded-md transition-colors duration-200 w-full text-left\",\n                            isActive(\"/contacto\")\n                            ? \"bg-secondary text-secondary-foreground font-semibold\"\n                            : \"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10\"\n                        )}\n                        >\n                        <Mail className=\"w-5 h-5\" />\n                        <span className=\"font-medium text-base\">Contacto</span>\n                        </Link>\n                    </SheetClose>\n                  </motion.div>\n                </motion.div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </motion.header>\n    </>\n  )\n}\n"
        },
        {
          "name": "hero-section.tsx",
          "type": "file",
          "content": "// This file is no longer needed and will be deleted.\n// A new, unified hero component is available at src/components/ui/HeroSection.tsx.\n"
        },
        {
          "name": "home",
          "type": "directory",
          "children": [
            {
              "name": "anterior",
              "type": "directory",
              "children": [
                {
                  "name": "HeroVisual.tsx",
                  "type": "file",
                  "content": "// This file is no longer needed and can be removed.\n"
                },
                {
                  "name": "NeuralHorizonHero.tsx",
                  "type": "file",
                  "content": "\n// src/components/home/NeuralHorizonHero.tsx\n'use client';\n\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { motion } from 'framer-motion';\nimport { Calculator, Mail } from 'lucide-react';\n\nexport function NeuralHorizonHero() {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\n    const sceneRef = useRef<THREE.Scene | null>(null);\n    const cameraRef = useRef<THREE.PerspectiveCamera | null>(null);\n    const animationFrameId = useRef<number>();\n    const mouse = useRef(new THREE.Vector2());\n\n    const setupScene = useCallback(() => {\n        if (!containerRef.current || rendererRef.current) return;\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.set(0, 0, 15);\n        sceneRef.current = scene;\n        cameraRef.current = camera;\n\n        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        containerRef.current.appendChild(renderer.domElement);\n        rendererRef.current = renderer;\n\n        const nodeGeometry = new THREE.IcosahedronGeometry(0.2, 1);\n        \n        // Get colors from CSS variables\n        const primaryColorHex = getComputedStyle(document.documentElement).getPropertyValue('--primary').trim();\n        const secondaryColorHex = getComputedStyle(document.documentElement).getPropertyValue('--secondary').trim();\n\n        const nodeMaterial = new THREE.MeshStandardMaterial({\n            color: new THREE.Color(primaryColorHex || '#1E40AF'),\n            metalness: 0.3,\n            roughness: 0.6,\n        });\n        const accentMaterial = new THREE.MeshStandardMaterial({\n            color: new THREE.Color(secondaryColorHex || '#F9A825'),\n            metalness: 0.5,\n            roughness: 0.4,\n            emissive: new THREE.Color(secondaryColorHex || '#F9A825'),\n            emissiveIntensity: 0.3,\n        });\n        \n        const totalNodes = 150;\n        const accentNodesCount = Math.floor(totalNodes * 0.1);\n        const regularNodesCount = totalNodes - accentNodesCount;\n\n        const regularNodesMesh = new THREE.InstancedMesh(nodeGeometry, nodeMaterial, regularNodesCount);\n        const accentNodesMesh = new THREE.InstancedMesh(nodeGeometry, accentMaterial, accentNodesCount);\n        \n        const instances: { \n            matrix: THREE.Matrix4; \n            velocity: THREE.Vector3; \n            rotation: THREE.Euler;\n            rotationSpeed: THREE.Vector3;\n            mesh: THREE.InstancedMesh; \n            index: number \n        }[] = [];\n\n        const setupInstances = (mesh: THREE.InstancedMesh, count: number) => {\n            for (let i = 0; i < count; i++) {\n                const matrix = new THREE.Matrix4();\n                const position = new THREE.Vector3(\n                    (Math.random() - 0.5) * 30,\n                    (Math.random() - 0.5) * 30,\n                    (Math.random() - 0.5) * 30\n                );\n                matrix.setPosition(position);\n                mesh.setMatrixAt(i, matrix);\n\n                instances.push({\n                    matrix,\n                    velocity: new THREE.Vector3(\n                        (Math.random() - 0.5) * 0.01,\n                        (Math.random() - 0.5) * 0.01,\n                        (Math.random() - 0.5) * 0.01\n                    ),\n                    rotation: new THREE.Euler(0,0,0),\n                    rotationSpeed: new THREE.Vector3(\n                        (Math.random() - 0.5) * 0.01,\n                        (Math.random() - 0.5) * 0.01,\n                        (Math.random() - 0.5) * 0.01\n                    ),\n                    mesh,\n                    index: i\n                });\n            }\n        };\n\n        setupInstances(regularNodesMesh, regularNodesCount);\n        setupInstances(accentNodesMesh, accentNodesCount);\n\n        scene.add(regularNodesMesh);\n        scene.add(accentNodesMesh);\n        \n        const ambientLight = new THREE.AmbientLight(new THREE.Color(primaryColorHex || '#60A5FA'), 1);\n        scene.add(ambientLight);\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1.5);\n        directionalLight.position.set(5, 5, 5);\n        scene.add(directionalLight);\n        const pointLight = new THREE.PointLight(new THREE.Color(secondaryColorHex || '#FBBF24'), 2, 20);\n        pointLight.position.set(-10, 5, 10);\n        scene.add(pointLight);\n\n        const tempPosition = new THREE.Vector3();\n        const tempQuaternion = new THREE.Quaternion();\n        const tempScale = new THREE.Vector3(1, 1, 1);\n\n\n        const animate = () => {\n            animationFrameId.current = requestAnimationFrame(animate);\n            \n            instances.forEach(instance => {\n                tempPosition.setFromMatrixPosition(instance.matrix);\n                tempPosition.add(instance.velocity);\n\n                instance.rotation.x += instance.rotationSpeed.x;\n                instance.rotation.y += instance.rotationSpeed.y;\n                instance.rotation.z += instance.rotationSpeed.z;\n\n                tempQuaternion.setFromEuler(instance.rotation);\n\n                if (Math.abs(tempPosition.x) > 15) instance.velocity.x *= -1;\n                if (Math.abs(tempPosition.y) > 15) instance.velocity.y *= -1;\n                if (Math.abs(tempPosition.z) > 15) instance.velocity.z *= -1;\n                \n                instance.matrix.compose(tempPosition, tempQuaternion, tempScale);\n                instance.mesh.setMatrixAt(instance.index, instance.matrix);\n            });\n\n            regularNodesMesh.instanceMatrix.needsUpdate = true;\n            accentNodesMesh.instanceMatrix.needsUpdate = true;\n            \n            if (cameraRef.current) {\n                cameraRef.current.position.x += (mouse.current.x * 5 - cameraRef.current.position.x) * 0.05;\n                cameraRef.current.position.y += (-mouse.current.y * 5 - cameraRef.current.position.y) * 0.05;\n                cameraRef.current.lookAt(scene.position);\n            }\n            \n            renderer.render(scene, cameraRef.current!);\n        };\n\n        const handleResize = () => {\n            if (cameraRef.current && rendererRef.current) {\n                cameraRef.current.aspect = window.innerWidth / window.innerHeight;\n                cameraRef.current.updateProjectionMatrix();\n                rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n            }\n        };\n\n        const handleMouseMove = (event: MouseEvent) => {\n            mouse.current.x = (event.clientX / window.innerWidth) * 2 - 1;\n            mouse.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        };\n        \n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                   if (!animationFrameId.current) animate();\n                } else {\n                    if (animationFrameId.current) {\n                        cancelAnimationFrame(animationFrameId.current);\n                        animationFrameId.current = undefined;\n                    }\n                }\n            },\n            { threshold: 0.1 }\n        );\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        window.addEventListener('resize', handleResize);\n        window.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            window.removeEventListener('mousemove', handleMouseMove);\n            if (animationFrameId.current) cancelAnimationFrame(animationFrameId.current);\n            if (containerRef.current) observer.unobserve(containerRef.current);\n\n            // Cleanup THREE.js resources\n            nodeGeometry.dispose();\n            nodeMaterial.dispose();\n            accentMaterial.dispose();\n            if (rendererRef.current?.domElement && containerRef.current) {\n                containerRef.current.removeChild(rendererRef.current.domElement);\n            }\n            rendererRef.current?.dispose();\n            rendererRef.current = null;\n        };\n    }, []);\n\n    useEffect(() => {\n        const cleanup = setupScene();\n        return () => {\n            cleanup?.();\n        };\n    }, [setupScene]);\n\n    return (\n        <section className=\"h-screen w-full relative flex items-center justify-center bg-primary\">\n            <div ref={containerRef} className=\"absolute top-0 left-0 w-full h-full\" />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-primary via-primary/80 to-transparent z-0\" />\n            \n            <motion.div \n                className=\"relative z-10 flex flex-col items-center text-center p-4 text-primary-foreground\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, ease: \"easeOut\" }}\n            >\n                <motion.div \n                    className=\"mb-6 p-1 rounded-full relative bg-primary/30 animate-float\"\n                    initial={{ scale: 0 }}\n                    animate={{ scale: 1 }}\n                    transition={{ delay: 0.2, type: \"spring\", stiffness: 150 }}\n                >\n                    <div className=\"absolute inset-0 rounded-full border-2 border-transparent bg-gradient-to-r from-yellow-400 via-pink-500 to-blue-400\" \n                         style={{animation: 'spin-slow 8s linear infinite'}}\n                    />\n                    <Image\n                        src=\"/LogoEnviosDosRuedas.webp\"\n                        alt=\"Envios DosRuedas Logo\"\n                        width={180}\n                        height={180}\n                        className=\"w-32 h-32 sm:w-44 sm:h-44 rounded-full shadow-2xl relative z-10\"\n                        priority\n                    />\n                </motion.div>\n                \n                <motion.h1 \n                    className=\"text-4xl md:text-6xl font-bold text-secondary mb-4 font-heading\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: 0.4, duration: 0.6 }}\n                >\n                    Envios DosRuedas\n                </motion.h1>\n\n                <motion.p \n                    className=\"max-w-2xl text-lg md:text-xl text-primary-foreground/90 leading-relaxed mb-8 font-sans\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: 0.6, duration: 0.6 }}\n                >\n                    Somos tu soluci\u00f3n confiable en servicios de mensajer\u00eda y delivery en Mar del Plata. Ofrecemos soluciones r\u00e1pidas, seguras y econ\u00f3micas para todas tus necesidades de env\u00edo.\n                </motion.p>\n                \n                <motion.div \n                    className=\"flex flex-col sm:flex-row gap-4\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: 0.8, duration: 0.6 }}\n                >\n                    <Button asChild size=\"lg\" variant=\"secondary\" className=\"font-bold shadow-lg transform hover:scale-105 transition-transform\">\n                        <Link href=\"/cotizar/express\">\n                            <Calculator className=\"mr-2 h-5 w-5\" />\n                            Cotizar Env\u00edo\n                        </Link>\n                    </Button>\n                    <Button asChild size=\"lg\" variant=\"outline\" className=\"border-secondary text-secondary hover:bg-secondary/10 hover:text-white font-bold shadow-lg transform hover:scale-105 transition-transform\">\n                        <Link href=\"/contacto\">\n                            <Mail className=\"mr-2 h-5 w-5\" />\n                            Contacto\n                        </Link>\n                    </Button>\n                </motion.div>\n            </motion.div>\n        </section>\n    );\n}\n"
                },
                {
                  "name": "entrepreneur-solutions.tsx",
                  "type": "file",
                  "content": "\n\"use client\";\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { TrendingUp, Users, Package, Zap, DollarSign, Clock } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\n\nexport function EntrepreneurSolutions() {\n  const solutions = [\n    {\n      icon: TrendingUp,\n      title: \"Plan Emprendedores\",\n      description: \"Tarifas preferenciales y servicios adaptados para hacer crecer tu negocio online\",\n      features: [\"Tarifas LowCost\", \"Facturaci\u00f3n mensual\", \"Soporte dedicado\"],\n      link: \"/servicios/plan-emprendedores\",\n      color: \"from-primary to-blue-600\",\n      borderColor: \"border-primary\"\n    },\n    {\n      icon: Package,\n      title: \"Env\u00edos Flex MercadoLibre\",\n      description: \"Integraci\u00f3n perfecta con MercadoLibre para potenciar tus ventas\",\n      features: [\"Entregas el mismo d\u00eda\", \"Mejora tu reputaci\u00f3n\", \"Tarifas LowCost\"],\n      link: \"/servicios/enviosflex\",\n      color: \"from-secondary to-yellow-600\",\n      borderColor: \"border-secondary\"\n    },\n    {\n      icon: Users,\n      title: \"Moto Fija para Negocios\",\n      description: \"Repartidor dedicado exclusivamente para tu empresa\",\n      features: [\"Repartidor exclusivo\", \"Horarios personalizados\", \"Rutas optimizadas\"],\n      link: \"/servicios/moto-fija\",\n      color: \"from-green-500 to-green-600\",\n      borderColor: \"border-green-500\"\n    },\n  ]\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 30 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 90,\n        damping: 12,\n      },\n    },\n  };\n\n  return (\n    <section className=\"py-16 md:py-20 bg-gradient-to-b from-background to-blue-50\">\n      <div className=\"container mx-auto px-4\">\n        <motion.div \n          className=\"text-center mb-12 md:mb-16\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.3 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Badge className=\"bg-primary text-primary-foreground hover:bg-primary/90 mb-6 px-4 py-2 text-sm sm:text-base font-semibold rounded-full\">\n            <TrendingUp className=\"w-5 h-5 mr-2\" />\n            Especial para Emprendedores\n          </Badge>\n\n          <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-bold font-heading text-foreground mb-4\">\n            Soluciones Especiales para Emprendedores\n          </h2>\n\n          <p className=\"text-base sm:text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n          Dise\u00f1amos servicios espec\u00edficos para ayudar a crecer tu negocio online. Desde tarifas preferenciales hasta integraci\u00f3n con plataformas de venta.\n          </p>\n        </motion.div>\n\n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n        >\n          {solutions.map((solution, index) => {\n            const IconComponent = solution.icon;\n            return (\n              <motion.div key={index} variants={itemVariants} className=\"h-full\">\n                <div style={{ perspective: \"1000px\" }}>\n                  <motion.div\n                    whileHover={{ rotateY: -15, rotateX: 10 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                    className=\"group relative h-full rounded-xl\"\n                    style={{ transformStyle: \"preserve-3d\" }}\n                  >\n                    <div className=\"absolute inset-0 bg-slate-900 rounded-xl shadow-lg\" />\n\n                    <div className=\"absolute inset-0 bg-gradient-radial from-yellow-500/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                    \n                    <div className=\"relative transform-gpu [transform:translateZ(40px)] p-6 md:p-8 flex flex-col h-full text-slate-100\">\n                      <div className={`w-14 h-14 md:w-16 md:h-16 bg-gradient-to-r ${solution.color} rounded-lg flex items-center justify-center mx-auto mb-6 shadow-lg`}>\n                        <IconComponent className=\"w-7 h-7 md:w-8 md:h-8 text-white\" />\n                      </div>\n\n                      <h3 className=\"text-xl md:text-2xl font-bold font-heading mb-4 text-center text-slate-50\">{solution.title}</h3>\n                      <p className=\"text-sm md:text-base text-slate-400 mb-6 text-center leading-relaxed flex-grow\">{solution.description}</p>\n\n                      <ul className=\"space-y-3 mb-8\">\n                        {solution.features.map((feature, featureIndex) => (\n                          <li key={featureIndex} className=\"flex items-center text-sm text-slate-300\">\n                            <div className=\"w-1.5 h-1.5 bg-secondary rounded-full mr-3\"></div>\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n\n                      <Button asChild className=\"w-full mt-auto bg-secondary hover:bg-secondary/90 text-secondary-foreground font-semibold transform hover:scale-105 transition-transform duration-200\">\n                        <Link href={solution.link}>Conocer M\u00e1s</Link>\n                      </Button>\n                    </div>\n                  </motion.div>\n                </div>\n              </motion.div>\n            );\n          })}\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n"
                },
                {
                  "name": "hero-section.tsx",
                  "type": "file",
                  "content": "// This file is no longer needed and will be deleted.\n// The functionality has been moved to src/components/ui/HeroSection.tsx\n// and implemented in src/app/page.tsx.\n"
                },
                {
                  "name": "services-overview.tsx",
                  "type": "file",
                  "content": "\n\"use client\"\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Truck, Clock, Shield, MapPin, Zap, Package } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\nimport Image from \"next/image\"\n\nexport function ServicesOverview() {\n  const services = [\n    {\n      icon: Zap,\n      title: \"Env\u00edos Express\",\n      description: \"Entregas el mismo d\u00eda para cuando necesitas velocidad m\u00e1xima.\",\n      features: [\"Entrega en en el d\u00eda (Solicitalo antes de 15hs)\", \"Seguimiento en tiempo real\", \"Prioridad m\u00e1xima\"],\n      link: \"/servicios/envios-express\",\n      imageUrl: \"/servicios/enviosexpress.jpg\",\n      imageHint: \"fast motorcycle\"\n    },\n    {\n      icon: Package,\n      title: \"Env\u00edos Low Cost\",\n      description: \"La opci\u00f3n m\u00e1s econ\u00f3mica sin sacrificar calidad ni seguridad.\",\n      features: [\"Entrega en el d\u00eda solicitando antes de 13hs\", \"Rutas optimizadas\", \"Precio m\u00e1s bajo\"],\n      link: \"/servicios/envios-lowcost\",\n      imageUrl: \"/servicios/envios_low_cost.jpg\",\n      imageHint: \"saving money\"\n    },\n    {\n      icon: Truck,\n      title: \"Moto Fija\",\n      description: \"Servicio dedicado para tu negocio con repartidor exclusivo.\",\n      features: [\"Repartidor dedicado\", \"Horarios personalizados\", \"Ideal para negocios\"],\n      link: \"/servicios/moto-fija\",\n      imageUrl: \"/servicios/moto_fija.jpg\",\n      imageHint: \"dedicated courier\"\n    },\n  ]\n\n  return (\n    <section className=\"py-16 md:py-20 lg:py-24 px-4 bg-background\">\n      <div className=\"container mx-auto\">\n        <div className=\"text-center mb-12 md:mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-bold font-heading text-primary mb-3 sm:mb-4\">Nuestros Servicios Principales</h2>\n          <p className=\"text-base sm:text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto\">\n          Soluciones adaptadas a cada necesidad, desde entregas urgentes hasta servicios dedicados para tu negocio.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {services.map((service, index) => (\n            <motion.div\n              key={index}\n              className=\"relative group/card rounded-lg overflow-hidden shadow-lg h-[450px]\"\n              whileHover=\"hover\"\n              initial=\"initial\"\n              variants={{\n                initial: { y: 0 },\n                hover: { y: -5 },\n              }}\n              transition={{ type: \"spring\", stiffness: 100 }}\n            >\n              <div className=\"absolute inset-0\">\n                <Image\n                  src={service.imageUrl}\n                  alt={`Imagen de fondo para ${service.title}`}\n                  fill\n                  sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                  className=\"w-full h-full object-cover transition-transform duration-700 ease-in-out group-hover/card:scale-105\"\n                  data-ai-hint={service.imageHint}\n                />\n              </div>\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\"></div>\n              \n              <motion.div\n                className=\"relative z-10 p-6 flex flex-col h-full justify-end\"\n                variants={{\n                  initial: { y: \"calc(100% - 80px)\" },\n                  hover: { y: \"0%\" },\n                }}\n                transition={{ duration: 0.7, ease: [0.19, 1, 0.22, 1] }}\n              >\n                <h3 className=\"text-2xl font-bold text-white mb-2 font-heading\">{service.title}</h3>\n                \n                <motion.div\n                  variants={{\n                    initial: { opacity: 0 },\n                    hover: { opacity: 1 },\n                  }}\n                  transition={{ delay: 0.1, duration: 0.4 }}\n                  className=\"space-y-4\"\n                >\n                  <p\n                    className=\"text-primary-foreground/80\"\n                  >\n                    {service.description}\n                  </p>\n                  \n                  <div>\n                    <Button asChild variant=\"secondary\" className=\"mt-4 font-semibold\">\n                      <Link href={service.link}>Conocer M\u00e1s</Link>\n                    </Button>\n                  </div>\n                </motion.div>\n              </motion.div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
                },
                {
                  "name": "stats-section.tsx",
                  "type": "file",
                  "content": "\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Package, Users, Clock, Star } from \"lucide-react\"\nimport { motion, useInView } from \"framer-motion\"\nimport { useRef } from \"react\"\n\nexport function StatsSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true, amount: 0.3 });\n\n  const stats = [\n    {\n      icon: Package,\n      number: 15000,\n      suffix: \"+\",\n      label: \"Env\u00edos Realizados\",\n      description: \"Paquetes entregados con \u00e9xito\",\n    },\n    {\n      icon: Users,\n      number: 2500,\n      suffix: \"+\",\n      label: \"Clientes Satisfechos\",\n      description: \"Conf\u00edan en nuestro servicio\",\n    },\n    {\n      icon: Clock,\n      number: 98,\n      suffix: \"%\",\n      label: \"Entregas a Tiempo\",\n      description: \"Puntualidad garantizada\",\n    },\n    {\n      icon: Star,\n      number: 4.9,\n      suffix: \"/5\",\n      label: \"Calificaci\u00f3n\",\n      description: \"En Google Reviews\",\n    },\n  ]\n\n  const AnimatedNumber = ({ target, suffix }: { target: number; suffix: string }) => {\n    const [current, setCurrent] = useState(0)\n\n    useEffect(() => {\n      if (!isInView) return\n\n      let startValue = 0\n      const duration = 2500 // Slower animation\n      const startTime = Date.now()\n\n      const easeOutCubic = (t: number) => 1 - Math.pow(1 - t, 3);\n\n      const animate = () => {\n        const now = Date.now()\n        const elapsedTime = now - startTime\n        const progress = easeOutCubic(Math.min(elapsedTime / duration, 1))\n        \n        let currentValue = progress * (target - startValue) + startValue\n        \n        if (target % 1 !== 0) {\n             currentValue = parseFloat(currentValue.toFixed(1));\n        } else {\n            currentValue = Math.floor(currentValue);\n        }\n\n        setCurrent(currentValue)\n\n        if (elapsedTime < duration) {\n          requestAnimationFrame(animate)\n        } else {\n          setCurrent(target)\n        }\n      }\n\n      requestAnimationFrame(animate)\n    }, [isInView, target])\n    \n    const displayValue = target % 1 !== 0 ? current.toFixed(1) : current;\n\n    return (\n      <span className=\"text-4xl md:text-5xl font-bold text-secondary\">\n        {displayValue}\n        {suffix}\n      </span>\n    )\n  }\n\n  const containerVariants = {\n    hidden: {},\n    visible: {\n      transition: {\n        staggerChildren: 0.15,\n      },\n    },\n  };\n\n  const cardVariants = {\n    hidden: { opacity: 0, rotateY: -90, scale: 0.9 },\n    visible: { \n      opacity: 1, \n      rotateY: 0,\n      scale: 1,\n      transition: {\n        type: 'spring',\n        stiffness: 80,\n        damping: 15,\n        duration: 0.7\n      }\n    },\n  };\n\n  return (\n    <section className=\"py-20 px-4 bg-primary\" ref={ref}>\n      <div className=\"container mx-auto\">\n        <motion.div \n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: -20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.5 }}\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold font-heading text-primary-foreground mb-4\">N\u00fameros que Hablan</h2>\n          <p className=\"text-xl text-primary-foreground/80 max-w-3xl mx-auto font-sans\">\n            Nuestra experiencia y compromiso se reflejan en cada estad\u00edstica\n          </p>\n        </motion.div>\n\n        <motion.div \n          className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={isInView ? \"visible\" : \"hidden\"}\n        >\n          {stats.map((stat, index) => {\n            const IconComponent = stat.icon\n            return (\n              <motion.div key={index} variants={cardVariants}>\n                <Card\n                  className=\"group bg-primary-foreground/5 backdrop-blur-sm border-primary-foreground/10 hover:bg-primary-foreground/10 transform hover:scale-105 transition-all duration-300 h-full\"\n                >\n                  <CardContent className=\"p-8 text-center\">\n                    <div className=\"w-16 h-16 bg-secondary/20 rounded-full flex items-center justify-center mx-auto mb-6 transform group-hover:scale-110 transition-transform duration-300\">\n                      <IconComponent className=\"w-8 h-8 text-secondary\" />\n                    </div>\n                    <div className=\"mb-2\">\n                      <AnimatedNumber target={stat.number} suffix={stat.suffix} />\n                    </div>\n                    <h3 className=\"text-xl font-semibold font-heading text-primary-foreground mb-2\">{stat.label}</h3>\n                    <p className=\"text-primary-foreground/70 text-sm font-sans\">{stat.description}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )\n          })}\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n"
                },
                {
                  "name": "testimonials-section.tsx",
                  "type": "file",
                  "content": "\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Star, Quote, ChevronLeft, ChevronRight } from \"lucide-react\"\nimport Image from \"next/image\"\n\nexport function TestimonialsSection() {\n  const [currentTestimonial, setCurrentTestimonial] = useState(0)\n\n  const testimonials = [\n    {\n      name: \"Mar\u00eda Gonz\u00e1lez\",\n      business: \"Tienda Online\",\n      rating: 5,\n      text: \"Excelente servicio. Siempre puntuales y muy profesionales. Mis clientes est\u00e1n muy contentos con las entregas.\",\n      image: \"https://placehold.co/80x80.png\",\n      aiHint: \"woman smiling\"\n    },\n    {\n      name: \"Carlos Rodr\u00edguez\",\n      business: \"Restaurante\",\n      rating: 5,\n      text: \"Usamos el servicio de moto fija y es incre\u00edble. Nuestro repartidor conoce perfectamente nuestras rutas.\",\n      image: \"https://placehold.co/80x80.png\",\n      aiHint: \"man friendly\"\n    },\n    {\n      name: \"Ana Mart\u00ednez\",\n      business: \"Farmacia\",\n      rating: 5,\n      text: \"Para env\u00edos de medicamentos, no hay mejor opci\u00f3n. R\u00e1pidos, seguros y confiables.\",\n      image: \"https://placehold.co/80x80.png\",\n      aiHint: \"professional person\"\n    },\n  ]\n\n  const nextTestimonial = () => {\n    setCurrentTestimonial((prev) => (prev + 1) % testimonials.length)\n  }\n\n  const prevTestimonial = () => {\n    setCurrentTestimonial((prev) => (prev - 1 + testimonials.length) % testimonials.length)\n  }\n\n  return (\n    <section className=\"py-20 px-4 bg-background\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold font-heading text-foreground mb-4\">Lo que Dicen Nuestros Clientes</h2>\n          <p className=\"text-xl text-muted-foreground font-sans\">\n            La satisfacci\u00f3n de nuestros clientes es nuestra mejor carta de presentaci\u00f3n\n          </p>\n        </div>\n\n        <div className=\"relative\">\n          <Card className=\"bg-gradient-to-r from-blue-50 to-yellow-50 border-0 shadow-xl overflow-hidden\">\n            <CardContent className=\"p-8 md:p-12\">\n              <Quote className=\"w-12 h-12 text-secondary/50 mb-6 mx-auto\" />\n\n              <div className=\"text-center min-h-[200px] md:min-h-[150px] flex flex-col justify-center\">\n                <p className=\"text-xl md:text-2xl text-gray-700 mb-8 leading-relaxed italic font-sans\">\n                  \"{testimonials[currentTestimonial].text}\"\n                </p>\n              </div>\n\n              <div className=\"flex items-center justify-center mb-6\">\n                {[...Array(testimonials[currentTestimonial].rating)].map((_, i) => (\n                  <Star key={i} className=\"w-6 h-6 fill-secondary text-secondary\" />\n                ))}\n              </div>\n\n              <div className=\"flex flex-col items-center justify-center space-y-2 sm:flex-row sm:space-y-0 sm:space-x-4\">\n                <Image\n                  src={testimonials[currentTestimonial].image}\n                  alt={testimonials[currentTestimonial].name}\n                  data-ai-hint={testimonials[currentTestimonial].aiHint}\n                  width={64}\n                  height={64}\n                  className=\"rounded-full object-cover\"\n                />\n                <div>\n                  <h4 className=\"text-lg font-semibold font-heading text-foreground text-center sm:text-left\">{testimonials[currentTestimonial].name}</h4>\n                  <p className=\"text-muted-foreground text-center sm:text-left font-sans\">{testimonials[currentTestimonial].business}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Navigation Buttons */}\n          <Button\n            onClick={prevTestimonial}\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"absolute left-2 md:left-4 top-1/2 transform -translate-y-1/2 bg-card shadow-lg hover:shadow-xl hover:scale-110 transition-all duration-200 rounded-full\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n          </Button>\n\n          <Button\n            onClick={nextTestimonial}\n            variant=\"outline\"\n            size=\"icon\"\n            className=\"absolute right-2 md:right-4 top-1/2 transform -translate-y-1/2 bg-card shadow-lg hover:shadow-xl hover:scale-110 transition-all duration-200 rounded-full\"\n          >\n            <ChevronRight className=\"w-5 h-5\" />\n          </Button>\n        </div>\n\n        {/* Dots Indicator */}\n        <div className=\"flex justify-center space-x-2 mt-8\">\n          {testimonials.map((_, index) => (\n            <button\n              key={index}\n              onClick={() => setCurrentTestimonial(index)}\n              className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                index === currentTestimonial ? \"bg-secondary scale-125\" : \"bg-muted hover:bg-muted-foreground/50\"\n              }`}\n              aria-label={`Ir al testimonio ${index + 1}`}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
                },
                {
                  "name": "vision-section.tsx",
                  "type": "file",
                  "content": "\n\"use client\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\n\nexport function VisionSection() {\n  const images = [\n    \"/Emprendedoresbanner.webp\",\n    \"/Emprendedoresbannerrapidas.webp\",\n    \"/Emprendedoresbannerrapidas2.webp\",\n  ];\n\n  const duplicatedImages = [...images, ...images];\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2,\n        delayChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.8,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  return (\n    <section className=\"bg-primary text-primary-foreground py-20 md:py-28 flex flex-col items-center justify-center min-h-[70vh] overflow-hidden\">\n      <motion.div\n        className=\"container mx-auto px-4 flex flex-col items-center gap-10\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, amount: 0.3 }}\n      >\n        <motion.div\n          variants={itemVariants}\n          className=\"w-full max-w-5xl overflow-hidden group\"\n        >\n          <div className=\"flex animate-h-scroll group-hover:[animation-play-state:paused] w-max\">\n            {duplicatedImages.map((src, index) => (\n              <div key={index} className=\"w-[clamp(250px,40vw,350px)] flex-shrink-0 p-3\">\n                <div className=\"overflow-hidden rounded-lg shadow-lg\">\n                  <Image\n                    src={src}\n                    alt={`Banner de emprendedores ${index + 1}`}\n                    width={400}\n                    height={300}\n                    className=\"w-full h-auto object-cover filter grayscale hover:grayscale-0 transition-all duration-300 transform hover:scale-105\"\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </motion.div>\n\n        <motion.h2\n          variants={itemVariants}\n          className=\"text-4xl md:text-5xl lg:text-6xl font-extrabold text-center font-heading\"\n        >\n          Nuestra <span className=\"text-secondary\">Visi\u00f3n Global</span>\n        </motion.h2>\n\n        <motion.p\n          variants={itemVariants}\n          className=\"text-lg md:text-xl text-primary-foreground/80 max-w-2xl text-center font-sans\"\n        >\n          Datos que respaldan nuestra calidad y compromiso. \u00a1Descubre por qu\u00e9\n          somos la soluci\u00f3n confiable para tus env\u00edos!\n        </motion.p>\n\n        <motion.div variants={itemVariants} whileHover={{ scale: 1.05 }}>\n          <Button asChild size=\"lg\" variant=\"secondary\" className=\"font-bold px-8 py-3 text-base rounded-full\">\n            <Link href=\"/nosotros/sobre-nosotros\">\n              Conoc\u00e9 m\u00e1s\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n        </motion.div>\n      </motion.div>\n    </section>\n  );\n}\n"
                }
              ]
            },
            {
              "name": "page.tsx",
              "type": "file",
              "content": "import { OptimizedHeader } from \"@/components/homenew/optimized-header\"\nimport { EnhancedHero } from \"@/components/homenew/enhanced-hero\"\nimport { ServicesOverview } from \"@/components/homenew/services-overview\"\nimport { VisionSection } from \"@/components/homenew/vision-section\"\nimport { EntrepreneurSolutions } from \"@/components/homenew/entrepreneur-solutions\"\nimport { CtaSection } from \"@/components/homenew/cta-section\"\nimport { CarruselRedes } from \"@/components/homenew/carrusel-redes\"\nimport { Footer } from \"@/components/homenew/footer\"\n\nexport default function HomePage() {\n  return (\n    <div className=\"min-h-screen\">\n      <OptimizedHeader />\n      <EnhancedHero />\n      <ServicesOverview />\n      <VisionSection />\n      <EntrepreneurSolutions />\n      <CtaSection />\n      <CarruselRedes />\n      <Footer />\n    </div>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "homenew",
          "type": "directory",
          "children": [
            {
              "name": "carrusel-redes.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { motion } from \"framer-motion\"\nimport { Facebook, Instagram, MessageCircle, Users, Heart, Share2 } from \"lucide-react\"\n\nexport function CarruselRedes() {\n  const handleWhatsAppClick = () => {\n    const phoneNumber = \"5492236602699\"\n    const message = \"Hola, me gustar\u00eda obtener informaci\u00f3n sobre sus servicios de env\u00edo.\"\n    const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(message)}`\n    window.open(whatsappUrl, \"_blank\")\n  }\n\n  const socialNetworks = [\n    {\n      name: \"Facebook\",\n      icon: Facebook,\n      href: \"https://facebook.com/enviosdosruedas\",\n      color: \"from-blue-600 to-blue-700\",\n      bgColor: \"bg-blue-50\",\n      hoverColor: \"hover:bg-blue-100\",\n      description: \"S\u00edguenos en Facebook\",\n    },\n    {\n      name: \"Instagram\",\n      icon: Instagram,\n      href: \"https://instagram.com/enviosdosruedas\",\n      color: \"from-pink-500 via-purple-500 to-orange-500\",\n      bgColor: \"bg-pink-50\",\n      hoverColor: \"hover:bg-pink-100\",\n      description: \"S\u00edguenos en Instagram\",\n    },\n    {\n      name: \"WhatsApp\",\n      icon: MessageCircle,\n      onClick: handleWhatsAppClick,\n      color: \"from-green-500 to-green-600\",\n      bgColor: \"bg-green-50\",\n      hoverColor: \"hover:bg-green-100\",\n      description: \"Chate\u00e1 con nosotros\",\n    },\n  ]\n\n  // Duplicamos las redes sociales para el efecto de loop infinito\n  const duplicatedNetworks = [...socialNetworks, ...socialNetworks, ...socialNetworks, ...socialNetworks]\n\n  return (\n    <section className=\"relative py-16 md:py-20 bg-gradient-to-br from-slate-50 via-blue-50/30 to-slate-100 overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0\">\n        {[...Array(8)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-primary/10 rounded-full\"\n            animate={{\n              x: [0, 100, 0],\n              y: [0, -100, 0],\n              opacity: [0.1, 0.3, 0.1],\n            }}\n            transition={{\n              duration: 15 + i * 2,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"easeInOut\",\n              delay: i * 2,\n            }}\n            style={{\n              left: `${10 + i * 12}%`,\n              top: `${20 + (i % 3) * 30}%`,\n            }}\n          />\n        ))}\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Header */}\n        <motion.div\n          className=\"text-center mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.3 }}\n          transition={{ duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n        >\n          <motion.div\n            className=\"inline-flex items-center gap-2 px-6 py-3 rounded-full bg-gradient-to-r from-primary/10 to-secondary/10 border border-primary/20 backdrop-blur-sm mb-6\"\n            whileHover={{ scale: 1.05, backgroundColor: \"rgba(59, 130, 246, 0.15)\" }}\n          >\n            <Users className=\"w-5 h-5 text-primary\" />\n            <span className=\"text-sm font-semibold text-primary\">Conect\u00e1 con Nosotros</span>\n            <Heart className=\"w-5 h-5 text-secondary\" />\n          </motion.div>\n\n          <motion.h2\n            className=\"text-3xl md:text-4xl lg:text-5xl font-bold font-heading text-foreground mb-4\"\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: 8,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n            }}\n            style={{\n              background: \"linear-gradient(90deg, #1e40af, #fbbf24, #1e40af)\",\n              backgroundSize: \"200% 200%\",\n              WebkitBackgroundClip: \"text\",\n              WebkitTextFillColor: \"transparent\",\n              backgroundClip: \"text\",\n            }}\n          >\n            Seguinos en Nuestras <span className=\"text-secondary\">Redes Sociales</span>\n          </motion.h2>\n\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Mantente al d\u00eda con nuestras novedades, promociones y consejos de env\u00edo. \u00a1\u00danete a nuestra comunidad!\n          </p>\n        </motion.div>\n\n        {/* Carousel Container */}\n        <div className=\"relative\">\n          {/* Gradient overlays for smooth edges */}\n          <div className=\"absolute left-0 top-0 bottom-0 w-20 bg-gradient-to-r from-slate-50 via-slate-50/80 to-transparent z-10 pointer-events-none\" />\n          <div className=\"absolute right-0 top-0 bottom-0 w-20 bg-gradient-to-l from-slate-50 via-slate-50/80 to-transparent z-10 pointer-events-none\" />\n\n          {/* Carousel */}\n          <div className=\"overflow-hidden py-8\">\n            <motion.div\n              className=\"flex gap-8\"\n              animate={{\n                x: [0, -1200], // Ajustamos seg\u00fan el ancho de los elementos\n              }}\n              transition={{\n                duration: 20,\n                repeat: Number.POSITIVE_INFINITY,\n                ease: \"linear\",\n              }}\n              whileHover={{\n                animationPlayState: \"paused\",\n              }}\n              style={{\n                width: `${duplicatedNetworks.length * 300}px`, // 300px por cada elemento\n              }}\n            >\n              {duplicatedNetworks.map((network, index) => (\n                <motion.div\n                  key={`${network.name}-${index}`}\n                  className=\"flex-shrink-0 w-72 group cursor-pointer\"\n                  whileHover={{ scale: 1.05, y: -5 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={network.onClick || (() => window.open(network.href, \"_blank\"))}\n                >\n                  <div\n                    className={`${network.bgColor} ${network.hoverColor} rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 h-64 flex flex-col items-center justify-center text-center group-hover:border-primary/30`}\n                  >\n                    {/* Icon with gradient background */}\n                    <motion.div\n                      className={`w-20 h-20 bg-gradient-to-r ${network.color} rounded-2xl flex items-center justify-center mb-6 shadow-lg group-hover:shadow-xl transition-shadow duration-300`}\n                      whileHover={{ rotate: 360 }}\n                      transition={{ duration: 0.6, ease: \"easeInOut\" }}\n                    >\n                      <network.icon className=\"w-10 h-10 text-white\" />\n                    </motion.div>\n\n                    {/* Network name */}\n                    <h3 className=\"text-2xl font-bold font-heading text-gray-900 mb-2 group-hover:text-primary transition-colors duration-300\">\n                      {network.name}\n                    </h3>\n\n                    {/* Description */}\n                    <p className=\"text-gray-600 text-sm leading-relaxed\">{network.description}</p>\n\n                    {/* Hover indicator */}\n                    <motion.div\n                      className=\"mt-4 flex items-center gap-2 text-primary opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                      initial={{ x: -10 }}\n                      whileHover={{ x: 0 }}\n                    >\n                      <Share2 className=\"w-4 h-4\" />\n                      <span className=\"text-sm font-medium\">Conectar</span>\n                    </motion.div>\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Bottom text */}\n        <motion.div\n          className=\"text-center mt-12\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ delay: 0.3, duration: 0.6 }}\n        >\n          <p className=\"text-gray-600\">\n            \u00bfTen\u00e9s alguna consulta? <span className=\"text-primary font-semibold\">\u00a1Escribinos por WhatsApp!</span>\n          </p>\n        </motion.div>\n      </div>\n\n      {/* Custom CSS for the carousel animation */}\n      <style jsx>{`\n        @media (max-width: 768px) {\n          .flex-shrink-0 {\n            width: 240px;\n          }\n        }\n        @media (max-width: 480px) {\n          .flex-shrink-0 {\n            width: 200px;\n          }\n        }\n      `}</style>\n    </section>\n  )\n}\n"
            },
            {
              "name": "cta-section.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { ArrowRight, Calculator, Phone, Sparkles, Zap } from \"lucide-react\"\nimport { motion } from \"framer-motion\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\n\nexport function CtaSection() {\n  return (\n    <section className=\"relative py-20 md:py-28 bg-gradient-to-br from-primary via-primary to-primary/95 overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-primary/80 to-transparent\" />\n      <div className=\"absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-secondary/50 to-transparent\" />\n\n      {/* Floating background elements */}\n      <div className=\"absolute inset-0\">\n        {[...Array(6)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-secondary/20 rounded-full\"\n            animate={{\n              x: [0, 100, 0],\n              y: [0, -100, 0],\n              opacity: [0.2, 0.8, 0.2],\n            }}\n            transition={{\n              duration: 10 + i * 2,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"easeInOut\",\n              delay: i * 1.5,\n            }}\n            style={{\n              left: `${10 + i * 15}%`,\n              top: `${20 + (i % 3) * 30}%`,\n            }}\n          />\n        ))}\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.3 }}\n          transition={{ duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n          className=\"relative\"\n        >\n          {/* Main Card */}\n          <motion.div\n            className=\"relative bg-white/10 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 overflow-hidden\"\n            whileHover={{ scale: 1.02, y: -5 }}\n            transition={{ type: \"spring\", stiffness: 200, damping: 20 }}\n          >\n            {/* Glow effect */}\n            <div className=\"absolute inset-0 bg-gradient-to-r from-secondary/10 via-transparent to-secondary/10 opacity-0 hover:opacity-100 transition-opacity duration-500\" />\n\n            <div className=\"grid md:grid-cols-2 items-center min-h-[400px]\">\n              {/* Content Column */}\n              <div className=\"p-8 md:p-12 lg:p-16 relative z-20\">\n                <motion.div\n                  className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-secondary/20 to-secondary/10 border border-secondary/30 backdrop-blur-sm mb-6\"\n                  whileHover={{ scale: 1.05, backgroundColor: \"rgba(251, 191, 36, 0.2)\" }}\n                >\n                  <Sparkles className=\"w-4 h-4 text-secondary\" />\n                  <span className=\"text-sm font-medium text-white/90\">\u00a1Empez\u00e1 Ahora!</span>\n                  <Zap className=\"w-4 h-4 text-secondary\" />\n                </motion.div>\n\n                <motion.h2\n                  className=\"text-3xl md:text-4xl lg:text-5xl font-bold font-heading text-white mb-6\"\n                  animate={{\n                    backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n                  }}\n                  transition={{\n                    duration: 8,\n                    repeat: Number.POSITIVE_INFINITY,\n                    ease: \"linear\",\n                  }}\n                  style={{\n                    background: \"linear-gradient(90deg, #ffffff, #fbbf24, #ffffff)\",\n                    backgroundSize: \"200% 200%\",\n                    WebkitBackgroundClip: \"text\",\n                    WebkitTextFillColor: \"transparent\",\n                    backgroundClip: \"text\",\n                  }}\n                >\n                  \u00bfListos para tu <span className=\"text-secondary\">Pr\u00f3ximo Env\u00edo</span>?\n                </motion.h2>\n\n                <p className=\"text-lg md:text-xl text-white/80 mb-8 max-w-lg leading-relaxed\">\n                  En Envios DosRuedas estamos listos para ayudarte con tus necesidades de{\" \"}\n                  <span className=\"text-secondary font-semibold\">mensajer\u00eda y paqueter\u00eda</span>. Cont\u00e1ctanos hoy mismo o\n                  calcula tu env\u00edo.\n                </p>\n\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }}>\n                    <Button\n                      asChild\n                      size=\"lg\"\n                      className=\"bg-gradient-to-r from-secondary to-secondary/90 hover:from-secondary/90 hover:to-secondary/80 text-secondary-foreground font-bold px-8 py-4 text-lg rounded-full shadow-2xl hover:shadow-secondary/25 border border-secondary/20\"\n                    >\n                      <Link href=\"/cotizar/express\" className=\"flex items-center gap-3\">\n                        <Calculator className=\"w-5 h-5\" />\n                        Solicitar Cotizaci\u00f3n\n                        <motion.div\n                          animate={{ x: [0, 4, 0] }}\n                          transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY }}\n                        >\n                          <ArrowRight className=\"w-5 h-5\" />\n                        </motion.div>\n                      </Link>\n                    </Button>\n                  </motion.div>\n\n                  <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }}>\n                    <Button\n                      asChild\n                      variant=\"outline\"\n                      size=\"lg\"\n                      className=\"border-2 border-white/30 text-white hover:bg-white/10 hover:text-white font-bold px-8 py-4 text-lg rounded-full backdrop-blur-sm transition-all duration-300 bg-transparent\"\n                    >\n                      <Link href=\"/contacto\" className=\"flex items-center gap-3\">\n                        <Phone className=\"w-5 h-5\" />\n                        Contactanos\n                      </Link>\n                    </Button>\n                  </motion.div>\n                </div>\n\n                {/* Stats */}\n                <motion.div\n                  className=\"flex items-center gap-8 mt-8 pt-8 border-t border-white/20\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: 0.3, duration: 0.6 }}\n                >\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-secondary\">5000+</div>\n                    <div className=\"text-sm text-white/70\">Clientes</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-secondary\">98%</div>\n                    <div className=\"text-sm text-white/70\">A Tiempo</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-secondary\">24/7</div>\n                    <div className=\"text-sm text-white/70\">Soporte</div>\n                  </div>\n                </motion.div>\n              </div>\n\n              {/* Image Column */}\n              <div className=\"relative h-64 md:h-full min-h-[400px] w-full\">\n                <div className=\"absolute inset-0 bg-gradient-to-l from-transparent via-primary/20 to-primary/60 z-10\" />\n\n                <Image\n                  src=\"/servicios/repartidor.jpg\"\n                  alt=\"Repartidor en moto listo para una entrega\"\n                  fill\n                  sizes=\"(max-width: 768px) 100vw, 50vw\"\n                  className=\"object-cover md:rounded-r-3xl\"\n                />\n\n                {/* Floating elements on image */}\n                <motion.div\n                  className=\"absolute top-8 right-8 bg-white/20 backdrop-blur-sm rounded-full p-3 z-20\"\n                  animate={{\n                    y: [0, -10, 0],\n                    rotate: [0, 5, 0],\n                  }}\n                  transition={{\n                    duration: 3,\n                    repeat: Number.POSITIVE_INFINITY,\n                    ease: \"easeInOut\",\n                  }}\n                >\n                  <Zap className=\"w-6 h-6 text-secondary\" />\n                </motion.div>\n\n                <motion.div\n                  className=\"absolute bottom-8 right-12 bg-secondary/20 backdrop-blur-sm rounded-full p-2 z-20\"\n                  animate={{\n                    y: [0, 8, 0],\n                    rotate: [0, -5, 0],\n                  }}\n                  transition={{\n                    duration: 4,\n                    repeat: Number.POSITIVE_INFINITY,\n                    ease: \"easeInOut\",\n                    delay: 1,\n                  }}\n                >\n                  <Calculator className=\"w-4 h-4 text-secondary\" />\n                </motion.div>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "enhanced-hero.tsx",
              "type": "file",
              "content": "\n\"use client\"\n\nimport { useEffect, useRef, useCallback, useState, useMemo } from \"react\"\nimport * as THREE from \"three\"\nimport { Button } from \"@/components/ui/button\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\nimport { motion, useScroll, useTransform } from \"framer-motion\"\nimport { Calculator, Mail, ArrowDown, Sparkles, Zap } from \"lucide-react\"\n\ntype RandomValue = {\n  y1: number;\n  y2: number;\n  top: string;\n};\n\nexport function EnhancedHero() {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null)\n  const sceneRef = useRef<THREE.Scene | null>(null)\n  const cameraRef = useRef<THREE.PerspectiveCamera | null>(null)\n  const animationFrameId = useRef<number>()\n  const mouse = useRef(new THREE.Vector2())\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [randomValues, setRandomValues] = useState<RandomValue[]>([]);\n\n\n  const { scrollY } = useScroll()\n  const y = useTransform(scrollY, [0, 500], [0, 150])\n  const opacity = useTransform(scrollY, [0, 300], [1, 0])\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    handleResize();\n\n    setRandomValues(\n        [...Array(6)].map(() => ({\n            y1: Math.random() * window.innerHeight,\n            y2: Math.random() * window.innerHeight,\n            top: Math.random() * 100 + \"%\",\n        }))\n    );\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n\n\n  const setupScene = useCallback(() => {\n    if (!containerRef.current || rendererRef.current) return\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n    camera.position.set(0, 0, 15)\n    sceneRef.current = scene\n    cameraRef.current = camera\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n    renderer.setClearColor(0x000000, 0)\n    containerRef.current.appendChild(renderer.domElement)\n    rendererRef.current = renderer\n\n    // Enhanced geometry with more variety\n    const geometries = [\n      new THREE.IcosahedronGeometry(0.15, 1),\n      new THREE.OctahedronGeometry(0.2),\n      new THREE.TetrahedronGeometry(0.18),\n      new THREE.SphereGeometry(0.12, 8, 6),\n    ]\n\n    // Enhanced materials with better colors\n    const primaryMaterial = new THREE.MeshStandardMaterial({\n      color: new THREE.Color(\"#3B82F6\"),\n      metalness: 0.4,\n      roughness: 0.3,\n      emissive: new THREE.Color(\"#1E40AF\"),\n      emissiveIntensity: 0.1,\n    })\n\n    const secondaryMaterial = new THREE.MeshStandardMaterial({\n      color: new THREE.Color(\"#FBBF24\"),\n      metalness: 0.6,\n      roughness: 0.2,\n      emissive: new THREE.Color(\"#F59E0B\"),\n      emissiveIntensity: 0.4,\n    })\n\n    const accentMaterial = new THREE.MeshStandardMaterial({\n      color: new THREE.Color(\"#EC4899\"),\n      metalness: 0.5,\n      roughness: 0.4,\n      emissive: new THREE.Color(\"#DB2777\"),\n      emissiveIntensity: 0.3,\n    })\n\n    const totalNodes = 200\n    const instances: {\n      mesh: THREE.Mesh\n      velocity: THREE.Vector3\n      rotation: THREE.Euler\n      rotationSpeed: THREE.Vector3\n      originalPosition: THREE.Vector3\n      floatOffset: number\n    }[] = []\n\n    // Create diverse node instances\n    for (let i = 0; i < totalNodes; i++) {\n      const geometry = geometries[Math.floor(Math.random() * geometries.length)]\n      let material = primaryMaterial\n\n      if (i < totalNodes * 0.15) material = secondaryMaterial\n      else if (i < totalNodes * 0.25) material = accentMaterial\n\n      const mesh = new THREE.Mesh(geometry, material)\n      const position = new THREE.Vector3(\n        (Math.random() - 0.5) * 35,\n        (Math.random() - 0.5) * 35,\n        (Math.random() - 0.5) * 35,\n      )\n\n      mesh.position.copy(position)\n      mesh.scale.setScalar(0.8 + Math.random() * 0.4)\n      scene.add(mesh)\n\n      instances.push({\n        mesh,\n        velocity: new THREE.Vector3(\n          (Math.random() - 0.5) * 0.008,\n          (Math.random() - 0.5) * 0.008,\n          (Math.random() - 0.5) * 0.008,\n        ),\n        rotation: new THREE.Euler(0, 0, 0),\n        rotationSpeed: new THREE.Vector3(\n          (Math.random() - 0.5) * 0.015,\n          (Math.random() - 0.5) * 0.015,\n          (Math.random() - 0.5) * 0.015,\n        ),\n        originalPosition: position.clone(),\n        floatOffset: Math.random() * Math.PI * 2,\n      })\n    }\n\n    // Enhanced lighting setup\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6)\n    scene.add(ambientLight)\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1.2)\n    directionalLight.position.set(10, 10, 5)\n    scene.add(directionalLight)\n\n    const pointLight1 = new THREE.PointLight(0xfbbf24, 2, 25)\n    pointLight1.position.set(-15, 10, 10)\n    scene.add(pointLight1)\n\n    const pointLight2 = new THREE.PointLight(0x3b82f6, 1.5, 20)\n    pointLight2.position.set(15, -10, 5)\n    scene.add(pointLight2)\n\n    const pointLight3 = new THREE.PointLight(0xec4899, 1, 15)\n    pointLight3.position.set(0, 15, -10)\n    scene.add(pointLight3)\n\n    let time = 0\n    const animate = () => {\n      animationFrameId.current = requestAnimationFrame(animate)\n      time += 0.01\n\n      instances.forEach((instance, index) => {\n        // Floating animation\n        const floatY = Math.sin(time + instance.floatOffset) * 0.5\n        instance.mesh.position.copy(instance.originalPosition)\n        instance.mesh.position.y += floatY\n\n        // Gentle movement\n        instance.mesh.position.add(instance.velocity)\n\n        // Rotation\n        instance.rotation.x += instance.rotationSpeed.x\n        instance.rotation.y += instance.rotationSpeed.y\n        instance.rotation.z += instance.rotationSpeed.z\n        instance.mesh.rotation.copy(instance.rotation)\n\n        // Boundary checking with smooth bounce\n        if (Math.abs(instance.mesh.position.x) > 18) {\n          instance.velocity.x *= -0.8\n          instance.mesh.position.x = Math.sign(instance.mesh.position.x) * 18\n        }\n        if (Math.abs(instance.mesh.position.y) > 18) {\n          instance.velocity.y *= -0.8\n          instance.mesh.position.y = Math.sign(instance.mesh.position.y) * 18\n        }\n        if (Math.abs(instance.mesh.position.z) > 18) {\n          instance.velocity.z *= -0.8\n          instance.mesh.position.z = Math.sign(instance.mesh.position.z) * 18\n        }\n      })\n\n      // Enhanced camera movement\n      if (cameraRef.current) {\n        const targetX = mouse.current.x * 3\n        const targetY = -mouse.current.y * 3\n\n        cameraRef.current.position.x += (targetX - cameraRef.current.position.x) * 0.03\n        cameraRef.current.position.y += (targetY - cameraRef.current.position.y) * 0.03\n        cameraRef.current.lookAt(scene.position)\n      }\n\n      // Animate lights\n      pointLight1.position.x = Math.sin(time * 0.5) * 10 - 5\n      pointLight2.position.z = Math.cos(time * 0.3) * 8 + 2\n      pointLight3.intensity = 1 + Math.sin(time * 2) * 0.3\n\n      renderer.render(scene, cameraRef.current!)\n    }\n\n    const handleResize = () => {\n      if (cameraRef.current && rendererRef.current) {\n        cameraRef.current.aspect = window.innerWidth / window.innerHeight\n        cameraRef.current.updateProjectionMatrix()\n        rendererRef.current.setSize(window.innerWidth, window.innerHeight)\n      }\n    }\n\n    const handleMouseMove = (event: MouseEvent) => {\n      mouse.current.x = (event.clientX / window.innerWidth) * 2 - 1\n      mouse.current.y = -(event.clientY / window.innerHeight) * 2 + 1\n    }\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          if (!animationFrameId.current) animate()\n        } else {\n          if (animationFrameId.current) {\n            cancelAnimationFrame(animationFrameId.current)\n            animationFrameId.current = undefined\n          }\n        }\n      },\n      { threshold: 0.1 },\n    )\n\n    if (containerRef.current) {\n      observer.observe(containerRef.current)\n    }\n\n    window.addEventListener(\"resize\", handleResize)\n    window.addEventListener(\"mousemove\", handleMouseMove)\n\n    // Start animation and mark as loaded\n    animate()\n    setTimeout(() => setIsLoaded(true), 500)\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n      if (animationFrameId.current) cancelAnimationFrame(animationFrameId.current)\n      if (containerRef.current) observer.unobserve(containerRef.current)\n\n      // Cleanup THREE.js resources\n      geometries.forEach((geo) => geo.dispose())\n      primaryMaterial.dispose()\n      secondaryMaterial.dispose()\n      accentMaterial.dispose()\n      instances.forEach((instance) => {\n        scene.remove(instance.mesh)\n      })\n      if (rendererRef.current?.domElement && containerRef.current) {\n        containerRef.current.removeChild(rendererRef.current.domElement)\n      }\n      rendererRef.current?.dispose()\n      rendererRef.current = null\n    }\n  }, [])\n\n  useEffect(() => {\n    const cleanup = setupScene()\n    return () => {\n      cleanup?.()\n    }\n  }, [setupScene])\n\n  return (\n    <section className=\"min-h-screen w-full relative flex items-center justify-center overflow-hidden bg-gradient-to-br from-slate-900 via-blue-900 to-slate-800 pt-20 md:pt-24\">\n      {/* 3D Background */}\n      <div ref={containerRef} className=\"absolute top-0 left-0 w-full h-full\" />\n\n      {/* Gradient Overlays */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-slate-900/40 z-10\" />\n      <div className=\"absolute inset-0 bg-gradient-to-r from-blue-900/20 via-transparent to-purple-900/20 z-10\" />\n\n      {/* Animated Background Elements */}\n      <div className=\"absolute inset-0 z-10\">\n        {randomValues.map((vals, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-yellow-400/30 rounded-full\"\n            animate={{\n              x: [0, dimensions.width],\n              y: [vals.y1, vals.y2],\n            }}\n            transition={{\n              duration: 15 + i * 5,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n              delay: i * 2,\n            }}\n            style={{\n              left: -10,\n              top: vals.top,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Main Content */}\n      <motion.div\n        className=\"relative z-20 flex flex-col items-center text-center p-6 text-white max-w-5xl mx-auto\"\n        style={{ y, opacity }}\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: isLoaded ? 1 : 0, y: isLoaded ? 0 : 50 }}\n        transition={{ duration: 1, ease: [0.22, 1, 0.36, 1] }}\n      >\n        {/* Logo Section */}\n        <motion.div\n          className=\"mb-8 relative\"\n          initial={{ scale: 0, rotate: -180 }}\n          animate={{ scale: 1, rotate: 0 }}\n          transition={{\n            delay: 0.3,\n            type: \"spring\",\n            stiffness: 200,\n            damping: 20,\n            duration: 1.2,\n          }}\n        >\n          <div className=\"relative p-2\">\n            {/* Animated rings */}\n            <motion.div\n              className=\"absolute inset-0 rounded-full border-2 border-yellow-400/40\"\n              animate={{\n                rotate: 360,\n                scale: [1, 1.1, 1],\n              }}\n              transition={{\n                rotate: { duration: 20, repeat: Number.POSITIVE_INFINITY, ease: \"linear\" },\n                scale: { duration: 4, repeat: Number.POSITIVE_INFINITY, ease: \"easeInOut\" },\n              }}\n            />\n            <motion.div\n              className=\"absolute inset-2 rounded-full border border-blue-400/30\"\n              animate={{\n                rotate: -360,\n                scale: [1, 0.95, 1],\n              }}\n              transition={{\n                rotate: { duration: 15, repeat: Number.POSITIVE_INFINITY, ease: \"linear\" },\n                scale: { duration: 3, repeat: Number.POSITIVE_INFINITY, ease: \"easeInOut\", delay: 1 },\n              }}\n            />\n\n            {/* Glow effect */}\n            <motion.div\n              className=\"absolute inset-0 rounded-full bg-gradient-to-r from-yellow-400/20 via-blue-400/20 to-purple-400/20 blur-xl\"\n              animate={{\n                opacity: [0.3, 0.8, 0.3],\n                scale: [1, 1.2, 1],\n              }}\n              transition={{\n                duration: 4,\n                repeat: Number.POSITIVE_INFINITY,\n                ease: \"easeInOut\",\n              }}\n            />\n\n            <Image\n              src=\"/LogoEnviosDosRuedas.webp\"\n              alt=\"Envios DosRuedas Logo\"\n              width={160}\n              height={160}\n              className=\"w-32 h-32 sm:w-40 sm:h-40 rounded-full shadow-2xl relative z-10 ring-4 ring-white/20\"\n              priority\n            />\n\n            {/* Floating particles around logo */}\n            {[...Array(8)].map((_, i) => (\n              <motion.div\n                key={i}\n                className=\"absolute w-1 h-1 bg-yellow-400 rounded-full\"\n                animate={{\n                  x: [0, Math.cos((i * Math.PI) / 4) * 80],\n                  y: [0, Math.sin((i * Math.PI) / 4) * 80],\n                  opacity: [0, 1, 0],\n                  scale: [0, 1, 0],\n                }}\n                transition={{\n                  duration: 3,\n                  repeat: Number.POSITIVE_INFINITY,\n                  delay: i * 0.2,\n                  ease: \"easeInOut\",\n                }}\n                style={{\n                  left: \"50%\",\n                  top: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                }}\n              />\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Title Section */}\n        <motion.div\n          className=\"mb-6 space-y-2\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n        >\n          <motion.div\n            className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-yellow-400/20 to-blue-400/20 border border-white/20 backdrop-blur-sm mb-4\"\n            whileHover={{ scale: 1.05, backgroundColor: \"rgba(255, 255, 255, 0.1)\" }}\n          >\n            <Sparkles className=\"w-4 h-4 text-yellow-400\" />\n            <span className=\"text-sm font-medium text-white/90\">Tu Soluci\u00f3n Confiable</span>\n            <Zap className=\"w-4 h-4 text-blue-400\" />\n          </motion.div>\n\n          <motion.h1\n            className=\"text-4xl md:text-6xl lg:text-7xl font-bold bg-gradient-to-r from-white via-blue-100 to-yellow-100 bg-clip-text text-transparent leading-tight\"\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: 8,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n            }}\n            style={{\n              backgroundSize: \"200% 200%\",\n            }}\n          >\n            Envios DosRuedas\n          </motion.h1>\n        </motion.div>\n\n        {/* Description */}\n        <motion.p\n          className=\"max-w-3xl text-lg md:text-xl text-gray-200 leading-relaxed mb-10 font-light\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.8, duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n        >\n          Somos tu soluci\u00f3n confiable en servicios de mensajer\u00eda y delivery en Mar del Plata. Ofrecemos soluciones{\" \"}\n          <span className=\"text-yellow-400 font-medium\">r\u00e1pidas</span>,\n          <span className=\"text-blue-400 font-medium\"> seguras</span> y\n          <span className=\"text-purple-400 font-medium\"> econ\u00f3micas</span> para todas tus necesidades de env\u00edo.\n        </motion.p>\n\n        {/* CTA Buttons */}\n        <motion.div\n          className=\"flex flex-col sm:flex-row gap-4 mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 1, duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n        >\n          <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }}>\n            <Button\n              asChild\n              size=\"lg\"\n              className=\"bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-400 hover:to-yellow-500 text-black font-bold shadow-2xl px-8 py-4 text-lg rounded-full border-2 border-yellow-400/50 hover:border-yellow-300 transition-all duration-300\"\n            >\n              <Link href=\"/cotizar/express\" className=\"flex items-center gap-3\">\n                <Calculator className=\"w-5 h-5\" />\n                Cotizar Env\u00edo\n                <motion.div animate={{ x: [0, 4, 0] }} transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY }}>\n                  \u2192\n                </motion.div>\n              </Link>\n            </Button>\n          </motion.div>\n\n          <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }}>\n            <Button\n              asChild\n              size=\"lg\"\n              variant=\"outline\"\n              className=\"border-2 border-white/30 text-white hover:bg-white/10 hover:text-white font-bold shadow-2xl px-8 py-4 text-lg rounded-full backdrop-blur-sm transition-all duration-300 bg-transparent\"\n            >\n              <Link href=\"/contacto\" className=\"flex items-center gap-3\">\n                <Mail className=\"w-5 h-5\" />\n                Contacto\n              </Link>\n            </Button>\n          </motion.div>\n        </motion.div>\n\n        {/* Scroll Indicator */}\n        <motion.div\n          className=\"flex flex-col items-center gap-2 text-white/60\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.5, duration: 1 }}\n        >\n          <span className=\"text-sm font-medium\">Descubre m\u00e1s</span>\n          <motion.div\n            animate={{ y: [0, 8, 0] }}\n            transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY, ease: \"easeInOut\" }}\n          >\n            <ArrowDown className=\"w-5 h-5\" />\n          </motion.div>\n        </motion.div>\n      </motion.div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "entrepreneur-solutions.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { TrendingUp, Users, Package, Sparkles, ArrowUpRight, CheckCircle } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\nimport Image from \"next/image\"\nimport { cn } from \"@/lib/utils\"\n\nexport function EntrepreneurSolutions() {\n  const solutions = [\n    {\n      icon: TrendingUp,\n      title: \"Plan Emprendedores\",\n      description: \"Tarifas preferenciales y servicios adaptados para hacer crecer tu negocio online\",\n      features: [\"Tarifas LowCost\", \"Facturaci\u00f3n mensual\", \"Soporte dedicado\", \"Reportes detallados\"],\n      link: \"/servicios/plan-emprendedores\",\n      gradient: \"from-blue-500 via-blue-600 to-blue-700\",\n      glowColor: \"blue-500/20\",\n      image: \"/cards/card1.png\",\n      badge: \"Emprendedores\",\n    },\n    {\n      icon: Package,\n      title: \"Env\u00edos Flex MercadoLibre\",\n      description: \"Integraci\u00f3n perfecta con MercadoLibre para potenciar tus ventas\",\n      features: [\"Entregas el mismo d\u00eda\", \"Mejora tu reputaci\u00f3n\", \"Tarifas LowCost\", \"API integrada\"],\n      link: \"/servicios/enviosflex\",\n      gradient: \"from-secondary via-yellow-500 to-yellow-600\",\n      glowColor: \"yellow-500/20\",\n      image: \"/cards/card2.png\",\n      badge: \"MercadoLibre\",\n    },\n    {\n      icon: Users,\n      title: \"Moto Fija para Negocios\",\n      description: \"Repartidor dedicado exclusivamente para tu empresa\",\n      features: [\"Repartidor exclusivo\", \"Horarios personalizados\", \"Rutas optimizadas\", \"Seguimiento GPS\"],\n      link: \"/servicios/moto-fija\",\n      gradient: \"from-green-500 via-green-600 to-green-700\",\n      glowColor: \"green-500/20\",\n      image: \"/cards/card3.png\",\n      badge: \"Dedicado\",\n    },\n  ]\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.15,\n        delayChildren: 0.2,\n      },\n    },\n  }\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 40, scale: 0.95 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      scale: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 200,\n        damping: 20,\n        duration: 0.8,\n      },\n    },\n  }\n\n  return (\n    <section className=\"relative py-20 md:py-28 bg-gradient-to-br from-slate-50 via-blue-50/50 to-slate-100 overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0\">\n        {[...Array(6)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-primary/10 rounded-full\"\n            animate={{\n              x: [0, 100, 0],\n              y: [0, -100, 0],\n              opacity: [0.1, 0.3, 0.1],\n            }}\n            transition={{\n              duration: 12 + i * 2,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"easeInOut\",\n              delay: i * 2,\n            }}\n            style={{\n              left: `${15 + i * 15}%`,\n              top: `${20 + (i % 3) * 25}%`,\n            }}\n          />\n        ))}\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        <motion.div\n          className=\"text-center mb-16 md:mb-20\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.3 }}\n          transition={{ duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n        >\n          <motion.div\n            className=\"inline-flex items-center gap-2 px-6 py-3 rounded-full bg-gradient-to-r from-primary/10 to-secondary/10 border border-primary/20 backdrop-blur-sm mb-6\"\n            whileHover={{ scale: 1.05, backgroundColor: \"rgba(59, 130, 246, 0.15)\" }}\n          >\n            <Sparkles className=\"w-5 h-5 text-primary\" />\n            <span className=\"text-sm font-semibold text-primary\">Especial para Emprendedores</span>\n            <TrendingUp className=\"w-5 h-5 text-secondary\" />\n          </motion.div>\n\n          <motion.h2\n            className=\"text-4xl md:text-5xl lg:text-6xl font-bold font-heading text-foreground mb-6\"\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: 8,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n            }}\n            style={{\n              background: \"linear-gradient(90deg, #1e40af, #fbbf24, #1e40af)\",\n              backgroundSize: \"200% 200%\",\n              WebkitBackgroundClip: \"text\",\n              WebkitTextFillColor: \"transparent\",\n              backgroundClip: \"text\",\n            }}\n          >\n            Soluciones Especiales para <span className=\"text-secondary\">Emprendedores</span>\n          </motion.h2>\n\n          <motion.p\n            className=\"text-lg md:text-xl text-muted-foreground max-w-4xl mx-auto leading-relaxed\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.2, duration: 0.6 }}\n          >\n            Dise\u00f1amos servicios espec\u00edficos para ayudar a crecer tu negocio online. Desde{\" \"}\n            <span className=\"text-primary font-semibold\">tarifas preferenciales</span> hasta{\" \"}\n            <span className=\"text-secondary font-semibold\">integraci\u00f3n con plataformas</span> de venta.\n          </motion.p>\n        </motion.div>\n\n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10 max-w-6xl mx-auto\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n        >\n          {solutions.map((solution, index) => {\n            const IconComponent = solution.icon\n            return (\n              <motion.div key={index} variants={itemVariants} className=\"h-full\">\n                <Link href={solution.link} className=\"block w-full group\">\n                  <motion.div\n                    whileHover={{ y: -8, scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    className={cn(\n                      \"relative overflow-hidden rounded-2xl h-[420px]\",\n                      \"bg-white/80 backdrop-blur-xl\",\n                      \"border border-zinc-200/50 shadow-lg\",\n                      \"transition-all duration-300\",\n                      \"hover:shadow-2xl hover:border-zinc-300/50\",\n                    )}\n                  >\n                    {/* Image Section */}\n                    <div className=\"relative h-[280px] overflow-hidden\">\n                      <Image\n                        src={solution.image || \"/placeholder.svg\"}\n                        alt={solution.title}\n                        fill\n                        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                        className=\"object-cover transition-transform duration-500 group-hover:scale-110\"\n                      />\n                       {/* Gradient overlay */}\n                      <div\n                        className={cn(\"absolute inset-0\", `bg-gradient-to-t from-black/90 via-black/40 to-transparent`)}\n                      />\n                       {/* Badge */}\n                      <div className=\"absolute top-4 right-4\">\n                        <span\n                          className={cn(\n                            \"px-3 py-1.5 rounded-lg text-xs font-semibold\",\n                            \"bg-white/90 text-zinc-800 backdrop-blur-md\",\n                            \"shadow-lg border border-white/20\",\n                          )}\n                        >\n                          {solution.badge}\n                        </span>\n                      </div>\n                       {/* Icon */}\n                      <div className=\"absolute top-4 left-4\">\n                        <motion.div\n                          className={`w-12 h-12 bg-gradient-to-r ${solution.gradient} rounded-xl flex items-center justify-center shadow-lg`}\n                          whileHover={{ rotate: 360, scale: 1.1 }}\n                          transition={{ duration: 0.6, ease: \"easeInOut\" }}\n                        >\n                          <IconComponent className=\"w-6 h-6 text-white\" />\n                        </motion.div>\n                      </div>\n                       {/* Arrow button */}\n                      <div className=\"absolute bottom-4 right-4\">\n                        <div\n                          className={cn(\n                            \"p-2.5 rounded-full\",\n                            \"bg-white/10 backdrop-blur-md\",\n                            \"group-hover:bg-white/20 transition-colors duration-300\",\n                          )}\n                        >\n                          <ArrowUpRight className=\"w-5 h-5 text-white group-hover:-rotate-12 transition-transform duration-300\" />\n                        </div>\n                      </div>\n                       {/* Content overlay */}\n                      <div className=\"absolute bottom-0 left-0 right-0 p-6\">\n                        <div className=\"space-y-2\">\n                          <h3 className=\"text-xl font-bold text-white leading-tight\">{solution.title}</h3>\n                          <p className=\"text-sm text-zinc-200 line-clamp-2 leading-relaxed\">{solution.description}</p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Features Section */}\n                    <div className=\"p-6 bg-white\">\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        {solution.features.slice(0, 4).map((feature, featureIndex) => (\n                          <motion.div\n                            key={featureIndex}\n                            className=\"flex items-center text-xs text-gray-600\"\n                            initial={{ opacity: 0, x: -10 }}\n                            whileInView={{ opacity: 1, x: 0 }}\n                            viewport={{ once: true }}\n                            transition={{ delay: 0.1 * featureIndex, duration: 0.3 }}\n                          >\n                            <CheckCircle className=\"w-3 h-3 text-green-500 mr-2 flex-shrink-0\" />\n                            <span className=\"truncate\">{feature}</span>\n                          </motion.div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Hover glow effect */}\n                    <motion.div\n                      className={`absolute inset-0 bg-gradient-to-br ${solution.gradient} opacity-0 group-hover:opacity-5 transition-opacity duration-500 pointer-events-none`}\n                      whileHover={{ opacity: 0.1 }}\n                    />\n                  </motion.div>\n                </Link>\n              </motion.div>\n            )\n          })}\n        </motion.div>\n\n        {/* Bottom CTA */}\n        <motion.div\n          className=\"text-center mt-16\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ delay: 0.5, duration: 0.8 }}\n        >\n          <p className=\"text-lg text-gray-600 mb-6\">\u00bfNecesitas una soluci\u00f3n personalizada para tu negocio?</p>\n          <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }}>\n            <Button\n              asChild\n              size=\"lg\"\n              className=\"bg-gradient-to-r from-primary to-primary/90 hover:from-primary/90 hover:to-primary/80 text-white font-bold px-8 py-4 text-lg rounded-full shadow-xl hover:shadow-2xl transition-all duration-300\"\n            >\n              <Link href=\"/contacto\" className=\"flex items-center gap-3\">\n                Hablemos de tu proyecto\n                <motion.div animate={{ x: [0, 4, 0] }} transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY }}>\n                  <ArrowUpRight className=\"w-5 h-5\" />\n                </motion.div>\n              </Link>\n            </Button>\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "footer.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\nimport { Button } from \"@/components/ui/button\"\nimport { Phone, Mail, MapPin, Facebook, Instagram, Twitter, ChevronUp } from \"lucide-react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { navGroups } from \"@/lib/navigation\"\n\nexport function Footer() {\n  const [isVisible, setIsVisible] = useState(false)\n  const [currentYear, setCurrentYear] = useState<number | null>(null)\n\n  useEffect(() => {\n    setCurrentYear(new Date().getFullYear())\n\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true)\n      } else {\n        setIsVisible(false)\n      }\n    }\n    window.addEventListener(\"scroll\", toggleVisibility)\n    return () => window.removeEventListener(\"scroll\", toggleVisibility)\n  }, [])\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    })\n  }\n\n  const socialLinks = [\n    { label: \"Facebook\", Icon: Facebook, href: \"https://facebook.com/enviosdosruedas\" },\n    { label: \"Instagram\", Icon: Instagram, href: \"https://instagram.com/enviosdosruedas\" },\n    { label: \"Twitter\", Icon: Twitter, href: \"https://twitter.com/enviosdosruedas\" },\n  ]\n\n  return (\n    <motion.footer\n      className=\"bg-gradient-to-br from-primary via-primary to-primary/95 text-primary-foreground/90 border-t border-secondary/20 relative overflow-hidden\"\n      initial={{ opacity: 0, y: 50 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true, amount: 0.2 }}\n      transition={{ duration: 0.8, ease: [0.22, 1, 0.36, 1] }}\n    >\n      {/* Background decoration */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-primary/50 to-transparent\" />\n      <div className=\"absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-secondary/50 to-transparent\" />\n\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16 relative z-10\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8 md:gap-12\">\n          {/* Company Info */}\n          <motion.div\n            className=\"md:col-span-2 lg:col-span-2\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.1, duration: 0.6 }}\n          >\n            <motion.div whileHover={{ scale: 1.02 }} className=\"mb-6\">\n              <Link href=\"/\" className=\"flex items-center space-x-3 group\">\n                <div className=\"relative\">\n                  <motion.div\n                    className=\"absolute inset-0 rounded-full bg-gradient-to-r from-secondary/30 to-secondary/10 blur-sm\"\n                    animate={{\n                      scale: [1, 1.1, 1],\n                      opacity: [0.5, 0.8, 0.5],\n                    }}\n                    transition={{\n                      duration: 3,\n                      repeat: Number.POSITIVE_INFINITY,\n                      ease: \"easeInOut\",\n                    }}\n                  />\n                  <Image\n                    src=\"/LogoEnviosDosRuedas.webp\"\n                    alt=\"Envios DosRuedas Logo\"\n                    width={44}\n                    height={44}\n                    className=\"rounded-full relative z-10 ring-2 ring-secondary/20 group-hover:ring-secondary/40 transition-all duration-300\"\n                  />\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-bold text-secondary group-hover:text-yellow-300 transition-colors duration-300 font-heading\">\n                    Envios DosRuedas\n                  </h3>\n                  <p className=\"text-xs text-primary-foreground/70 -mt-0.5\">Tu Soluci\u00f3n Confiable</p>\n                </div>\n              </Link>\n            </motion.div>\n\n            <p className=\"text-sm mb-6 leading-relaxed text-primary-foreground/80\">\n              Tu soluci\u00f3n confiable para mensajer\u00eda y delivery en Mar del Plata y alrededores. Ofrecemos servicios\n              r\u00e1pidos, seguros y econ\u00f3micos.\n            </p>\n\n            <div className=\"flex space-x-2\">\n              {socialLinks.map((social, index) => (\n                <motion.a\n                  key={social.label}\n                  href={social.href}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  whileHover={{ scale: 1.15, rotate: 5, y: -2 }}\n                  whileTap={{ scale: 0.95 }}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: 0.2 + index * 0.1, duration: 0.4 }}\n                  className=\"p-3 rounded-full bg-primary-foreground/10 text-primary-foreground/80 hover:bg-secondary/20 hover:text-secondary border border-primary-foreground/10 hover:border-secondary/30 transition-all duration-300 backdrop-blur-sm\"\n                  aria-label={`${social.label} de Envios DosRuedas`}\n                >\n                  <social.Icon className=\"w-5 h-5\" />\n                </motion.a>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Navigation Menus */}\n          {navGroups.map((group, groupIndex) => (\n            <motion.div\n              key={group.label}\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ delay: 0.2 + groupIndex * 0.1, duration: 0.6 }}\n            >\n              <div className=\"relative mb-6\">\n                <h4 className=\"font-heading text-lg font-bold text-primary-foreground mb-2\">{group.label}</h4>\n                <motion.div\n                  className=\"h-0.5 w-12 bg-gradient-to-r from-secondary to-secondary/50 rounded-full\"\n                  initial={{ scaleX: 0 }}\n                  whileInView={{ scaleX: 1 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: 0.3 + groupIndex * 0.1, duration: 0.5 }}\n                />\n              </div>\n              <ul className=\"space-y-3\">\n                {group.items.map((item, itemIndex) => {\n                  const Icon = item.icon\n                  return (\n                    <motion.li\n                      key={item.href}\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      viewport={{ once: true }}\n                      transition={{ delay: 0.4 + groupIndex * 0.1 + itemIndex * 0.05, duration: 0.4 }}\n                    >\n                      <motion.div whileHover={{ x: 6, scale: 1.02 }} className=\"group\">\n                        <Link\n                          href={item.href}\n                          className=\"flex items-center gap-3 text-primary-foreground/80 hover:text-primary-foreground transition-all duration-300 py-2 px-3 rounded-lg hover:bg-primary-foreground/5\"\n                        >\n                          {Icon && (\n                            <Icon className=\"w-4 h-4 text-secondary group-hover:scale-110 transition-transform duration-200\" />\n                          )}\n                          <span className=\"text-sm font-medium\">{item.label}</span>\n                        </Link>\n                      </motion.div>\n                    </motion.li>\n                  )\n                })}\n              </ul>\n            </motion.div>\n          ))}\n\n          {/* Contact Info */}\n          <motion.div\n            className=\"lg:pl-3\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.4, duration: 0.6 }}\n          >\n            <div className=\"relative mb-6\">\n              <h4 className=\"font-heading text-lg font-bold text-primary-foreground mb-2\">Contacto R\u00e1pido</h4>\n              <motion.div\n                className=\"h-0.5 w-12 bg-gradient-to-r from-secondary to-secondary/50 rounded-full\"\n                initial={{ scaleX: 0 }}\n                whileInView={{ scaleX: 1 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.5, duration: 0.5 }}\n              />\n            </div>\n            <ul className=\"space-y-4\">\n              {[\n                { Icon: MapPin, text: \"Mar del Plata, Argentina\" },\n                { Icon: Phone, text: \"223-660-2699\", href: \"tel:2236602699\" },\n                { Icon: Mail, text: \"matiascejas@enviosdosruedas.com\", href: \"mailto:matiascejas@enviosdosruedas.com\" },\n              ].map(({ Icon, text, href }, index) => (\n                <motion.li\n                  key={text}\n                  initial={{ opacity: 0, x: -20 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: 0.6 + index * 0.1, duration: 0.4 }}\n                >\n                  <motion.div whileHover={href ? { x: 6, scale: 1.02 } : {}} className=\"group\">\n                    {href ? (\n                      <a\n                        href={href}\n                        className=\"flex items-start space-x-3 text-sm py-2 px-3 rounded-lg hover:bg-primary-foreground/5 transition-all duration-300\"\n                      >\n                        <Icon className=\"w-5 h-5 text-secondary mt-0.5 flex-shrink-0 group-hover:scale-110 transition-transform duration-200\" />\n                        <span className=\"text-primary-foreground/80 group-hover:text-primary-foreground transition-colors duration-200\">\n                          {text}\n                        </span>\n                      </a>\n                    ) : (\n                      <div className=\"flex items-start space-x-3 text-sm py-2 px-3\">\n                        <Icon className=\"w-5 h-5 text-secondary mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-primary-foreground/80\">{text}</span>\n                      </div>\n                    )}\n                  </motion.div>\n                </motion.li>\n              ))}\n            </ul>\n          </motion.div>\n        </div>\n\n        {/* Bottom Section */}\n        <motion.div\n          className=\"border-t border-primary-foreground/10 mt-12 pt-8 text-center\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ delay: 0.7, duration: 0.6 }}\n        >\n          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n            <div className=\"flex items-center gap-4\">\n              {currentYear !== null && (\n                <p className=\"text-sm text-primary-foreground/70\">\n                  &copy; {currentYear} Envios DosRuedas. Todos los derechos reservados.\n                </p>\n              )}\n            </div>\n            <div className=\"flex items-center gap-6 text-sm\">\n              <Link\n                href=\"/politica-de-privacidad\"\n                className=\"text-primary-foreground/70 hover:text-secondary transition-colors duration-200\"\n              >\n                Privacidad\n              </Link>\n              <Link\n                href=\"/terminos-y-condiciones\"\n                className=\"text-primary-foreground/70 hover:text-secondary transition-colors duration-200\"\n              >\n                T\u00e9rminos\n              </Link>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Scroll to Top Button */}\n      <AnimatePresence>\n        {isVisible && (\n          <motion.div\n            initial={{ opacity: 0, y: 20, scale: 0.8 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: 20, scale: 0.8 }}\n            whileHover={{ scale: 1.1, y: -2 }}\n            whileTap={{ scale: 0.9 }}\n            transition={{ duration: 0.3, ease: \"easeOut\" }}\n            className=\"fixed bottom-6 right-6 z-50\"\n          >\n            <Button\n              onClick={scrollToTop}\n              className=\"p-3 rounded-full bg-gradient-to-r from-secondary to-secondary/90 text-secondary-foreground shadow-2xl hover:shadow-secondary/25 focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 focus:ring-offset-primary border border-secondary/20\"\n              aria-label=\"Volver arriba\"\n              size=\"icon\"\n            >\n              <motion.div\n                animate={{ y: [0, -2, 0] }}\n                transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY, ease: \"easeInOut\" }}\n              >\n                <ChevronUp className=\"w-6 h-6\" />\n              </motion.div>\n            </Button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.footer>\n  )\n}\n"
            },
            {
              "name": "optimized-header.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\nimport { usePathname } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger, SheetClose } from \"@/components/ui/sheet\"\nimport { Menu, X, Home, Calculator as CalculatorIcon, Mail, ChevronDown } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { navGroups } from \"@/lib/navigation\"\n\n// Mock navigation data - replace with your actual navigation structure\n// const navGroups = [\n//   {\n//     label: \"Servicios\",\n//     icon: Truck,\n//     basePath: \"/servicios\",\n//     items: [\n//       { href: \"/servicios/express\", label: \"Env\u00edo Express\", icon: Zap },\n//       { href: \"/servicios/estandar\", label: \"Env\u00edo Est\u00e1ndar\", icon: Truck },\n//     ],\n//   },\n//   {\n//     label: \"Empresa\",\n//     icon: Users,\n//     basePath: \"/empresa\",\n//     items: [\n//       { href: \"/empresa/nosotros\", label: \"Nosotros\", icon: Users },\n//       { href: \"/empresa/cobertura\", label: \"Cobertura\", icon: Home },\n//     ],\n//   },\n// ]\n\nconst mobileNavVariants = {\n  hidden: {},\n  visible: {\n    transition: {\n      staggerChildren: 0.08,\n      delayChildren: 0.1,\n    },\n  },\n}\n\nconst mobileNavItemVariants = {\n  hidden: { opacity: 0, x: -30, scale: 0.95 },\n  visible: {\n    opacity: 1,\n    x: 0,\n    scale: 1,\n    transition: {\n      type: \"spring\",\n      stiffness: 300,\n      damping: 24,\n    },\n  },\n}\n\nconst NavLink = ({ href, children, isActive }: { href: string; children: React.ReactNode; isActive: boolean }) => (\n  <motion.div whileHover={{ scale: 1.02, y: -1 }} whileTap={{ scale: 0.98 }} className=\"relative\">\n    <Button\n      variant=\"ghost\"\n      size=\"sm\"\n      asChild\n      className={cn(\n        \"text-primary-foreground/90 hover:bg-primary-foreground/15 hover:text-white transition-all duration-300 font-medium relative overflow-hidden\",\n        isActive &&\n          \"bg-gradient-to-r from-secondary/20 to-secondary/10 text-secondary hover:from-secondary/30 hover:to-secondary/20 shadow-lg\",\n      )}\n    >\n      <Link href={href}>\n        {isActive && (\n          <motion.div\n            className=\"absolute inset-0 bg-gradient-to-r from-secondary/10 to-transparent\"\n            layoutId=\"activeBackground\"\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          />\n        )}\n        <span className=\"relative z-10\">{children}</span>\n      </Link>\n    </Button>\n    {isActive && (\n      <motion.div\n        className=\"absolute -bottom-1 left-1/2 w-1/2 h-0.5 bg-gradient-to-r from-secondary to-secondary/50 rounded-full\"\n        layoutId=\"underline\"\n        initial={{ x: \"-50%\", scaleX: 0 }}\n        animate={{ x: \"-50%\", scaleX: 1 }}\n        transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n      />\n    )}\n  </motion.div>\n)\n\nexport function OptimizedHeader() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [openMobileSections, setOpenMobileSections] = useState<Record<string, boolean>>({})\n  const pathname = usePathname()\n  const [isScrolled, setIsScrolled] = useState(false)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 10)\n    }\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => window.removeEventListener(\"scroll\", handleScroll)\n  }, [])\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      document.body.style.overflow = \"hidden\"\n    } else {\n      document.body.style.overflow = \"\"\n    }\n    return () => {\n      document.body.style.overflow = \"\"\n    }\n  }, [isMenuOpen])\n\n  const toggleMobileSection = (label: string) => {\n    setOpenMobileSections((prev) => ({ ...prev, [label]: !prev[label] }))\n  }\n\n  const isActive = (href: string, isExact = false) => {\n    if (isExact) return pathname === href\n    if (href !== \"/\" && pathname.startsWith(href)) return true\n    return false\n  }\n\n  const isGroupActive = (group: any) => {\n    if (group.basePath && isActive(group.basePath)) return true\n    return group.items.some((item: any) => isActive(item.href))\n  }\n\n  return (\n    <motion.header\n      initial={{ y: -100, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.6, ease: [0.22, 1, 0.36, 1] }}\n      className={cn(\n        \"fixed top-0 left-0 right-0 z-50 transition-all duration-500 ease-out\",\n        isScrolled\n          ? \"py-2 bg-primary/95 backdrop-blur-xl shadow-2xl border-b border-secondary/20\"\n          : \"py-4 bg-gradient-to-r from-primary via-primary to-primary/95 shadow-xl\",\n      )}\n    >\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo Section */}\n          <motion.div whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }}>\n            <Link href=\"/\" className=\"flex items-center space-x-3 group\">\n              <div className=\"relative\">\n                <motion.div\n                  className=\"absolute inset-0 rounded-full bg-gradient-to-r from-secondary/30 to-secondary/10 blur-sm\"\n                  animate={{\n                    scale: [1, 1.1, 1],\n                    opacity: [0.5, 0.8, 0.5],\n                  }}\n                  transition={{\n                    duration: 3,\n                    repeat: Number.POSITIVE_INFINITY,\n                    ease: \"easeInOut\",\n                  }}\n                />\n                <Image\n                  src=\"/LogoEnviosDosRuedas.webp\"\n                  alt=\"Envios DosRuedas Logo\"\n                  width={isScrolled ? 36 : 44}\n                  height={isScrolled ? 36 : 44}\n                  className=\"rounded-full transition-all duration-500 relative z-10 ring-2 ring-secondary/20 group-hover:ring-secondary/40\"\n                  priority\n                />\n              </div>\n              <div className=\"transition-all duration-500\">\n                <motion.h1\n                  className={cn(\n                    \"font-bold text-secondary transition-all duration-500 tracking-tight\",\n                    isScrolled ? \"text-lg\" : \"text-xl\",\n                  )}\n                  animate={{\n                    textShadow: isScrolled ? \"0 0 10px rgba(251, 191, 36, 0.3)\" : \"0 0 20px rgba(251, 191, 36, 0.5)\",\n                  }}\n                >\n                  Envios DosRuedas\n                </motion.h1>\n                <motion.p\n                  className={cn(\n                    \"text-xs text-primary-foreground/80 -mt-0.5 transition-all duration-500 font-medium\",\n                    isScrolled ? \"opacity-0 h-0 scale-95\" : \"opacity-100 h-auto scale-100\",\n                  )}\n                >\n                  Tu Soluci\u00f3n Confiable\n                </motion.p>\n              </div>\n            </Link>\n          </motion.div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden lg:flex items-center space-x-2\">\n            <NavLink href=\"/\" isActive={isActive(\"/\", true)}>\n              <Home className=\"w-4 h-4 mr-2\" />\n              Inicio\n            </NavLink>\n\n            {navGroups.map((group) => {\n                const GroupIcon = group.icon;\n                return (\n              <motion.div key={group.label} whileHover={{ scale: 1.02 }} className=\"relative\">\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className={cn(\n                        \"text-primary-foreground/90 hover:bg-primary-foreground/15 hover:text-white transition-all duration-300 font-medium relative overflow-hidden\",\n                        isGroupActive(group) &&\n                          \"bg-gradient-to-r from-secondary/20 to-secondary/10 text-secondary hover:from-secondary/30 hover:to-secondary/20 shadow-lg\",\n                      )}\n                    >\n                      {isGroupActive(group) && (\n                        <motion.div\n                          className=\"absolute inset-0 bg-gradient-to-r from-secondary/10 to-transparent\"\n                          layoutId=\"activeDropdownBackground\"\n                          transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                        />\n                      )}\n                      <span className=\"relative z-10 flex items-center\">\n                        <GroupIcon className=\"w-4 h-4 mr-2\" />\n                        {group.label}\n                        <ChevronDown className=\"w-4 h-4 ml-1 opacity-70\" />\n                      </span>\n                    </Button>\n                  </DropdownMenuTrigger>\n                  {isGroupActive(group) && (\n                    <motion.div\n                      className=\"absolute -bottom-1 left-1/2 w-1/2 h-0.5 bg-gradient-to-r from-secondary to-secondary/50 rounded-full\"\n                      layoutId=\"underline\"\n                      initial={{ x: \"-50%\", scaleX: 0 }}\n                      animate={{ x: \"-50%\", scaleX: 1 }}\n                      transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                    />\n                  )}\n                  <DropdownMenuContent className=\"bg-background/95 backdrop-blur-xl border border-border/50 shadow-2xl mt-2 w-64 rounded-xl overflow-hidden\">\n                    {group.items.map((item, index) => {\n                      const Icon = item.icon\n                      return (\n                        <DropdownMenuItem key={item.href} asChild>\n                          <motion.div\n                            whileHover={{ x: 4, backgroundColor: \"rgba(251, 191, 36, 0.1)\" }}\n                            initial={{ opacity: 0, y: -10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ delay: index * 0.05 }}\n                          >\n                            <Link\n                              href={item.href}\n                              className={cn(\n                                \"cursor-pointer transition-all duration-300 flex items-center w-full px-4 py-3 text-sm rounded-lg mx-1 my-0.5\",\n                                isActive(item.href)\n                                  ? \"bg-gradient-to-r from-secondary/20 to-secondary/10 text-secondary font-semibold shadow-sm\"\n                                  : \"hover:bg-accent/50 hover:text-accent-foreground\",\n                              )}\n                            >\n                              {Icon && <Icon className=\"w-4 h-4 mr-3 text-secondary\" />}\n                              {item.label}\n                            </Link>\n                          </motion.div>\n                        </DropdownMenuItem>\n                      )\n                    })}\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </motion.div>\n            )})}\n\n            <NavLink href=\"/contacto\" isActive={isActive(\"/contacto\")}>\n              <Mail className=\"w-4 h-4 mr-2\" />\n              Contacto\n            </NavLink>\n\n            <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }} className=\"ml-4\">\n              <Button\n                asChild\n                size=\"sm\"\n                className=\"bg-gradient-to-r from-secondary to-secondary/90 hover:from-secondary/90 hover:to-secondary/80 text-secondary-foreground shadow-lg hover:shadow-xl transition-all duration-300 font-semibold px-6 rounded-full border border-secondary/20\"\n              >\n                <Link href=\"/cotizar/express\">\n                  <CalculatorIcon className=\"w-4 h-4 mr-2\" />\n                  Cotizar Env\u00edo\n                </Link>\n              </Button>\n            </motion.div>\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <Sheet open={isMenuOpen} onOpenChange={setIsMenuOpen}>\n            <SheetTrigger asChild className=\"lg:hidden\">\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10 transition-all duration-300 rounded-full\"\n                  aria-label={isMenuOpen ? \"Cerrar men\u00fa\" : \"Abrir men\u00fa\"}\n                >\n                  <AnimatePresence initial={false} mode=\"wait\">\n                    <motion.div\n                      key={isMenuOpen ? \"x\" : \"menu\"}\n                      initial={{ rotate: isMenuOpen ? -90 : 90, opacity: 0 }}\n                      animate={{ rotate: 0, opacity: 1 }}\n                      exit={{ rotate: isMenuOpen ? 90 : -90, opacity: 0 }}\n                      transition={{ duration: 0.3, ease: [0.22, 1, 0.36, 1] }}\n                    >\n                      {isMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n                    </motion.div>\n                  </AnimatePresence>\n                </Button>\n              </motion.div>\n            </SheetTrigger>\n\n            <SheetContent\n              side=\"right\"\n              className=\"w-[90vw] max-w-sm bg-gradient-to-br from-primary via-primary to-primary/95 text-primary-foreground p-0 flex flex-col border-l border-secondary/20\"\n            >\n              <SheetHeader className=\"p-6 border-b border-primary-foreground/10 text-left\">\n                <SheetTitle className=\"flex items-center space-x-3\">\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-0 rounded-full bg-gradient-to-r from-secondary/30 to-secondary/10 blur-sm\" />\n                    <Image\n                      src=\"/LogoEnviosDosRuedas.webp\"\n                      alt=\"Logo\"\n                      width={36}\n                      height={36}\n                      className=\"rounded-full relative z-10 ring-2 ring-secondary/30\"\n                    />\n                  </div>\n                  <span className=\"text-lg font-bold text-secondary\">Envios DosRuedas</span>\n                </SheetTitle>\n              </SheetHeader>\n\n              <motion.div\n                className=\"flex-grow overflow-y-auto p-6 space-y-3\"\n                variants={mobileNavVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n              >\n                <motion.div variants={mobileNavItemVariants}>\n                  <SheetClose asChild>\n                    <Link\n                      href=\"/\"\n                      className={cn(\n                        \"flex items-center space-x-4 py-4 px-4 rounded-xl transition-all duration-300 w-full text-left group\",\n                        isActive(\"/\", true)\n                          ? \"bg-gradient-to-r from-secondary/20 to-secondary/10 text-secondary font-semibold shadow-lg\"\n                          : \"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10\",\n                      )}\n                    >\n                      <Home className=\"w-5 h-5 group-hover:scale-110 transition-transform duration-200\" />\n                      <span className=\"font-medium text-base\">Inicio</span>\n                    </Link>\n                  </SheetClose>\n                </motion.div>\n\n                {navGroups.map((group) => {\n                    const GroupIcon = group.icon;\n                    return (\n                  <motion.div key={group.label} variants={mobileNavItemVariants}>\n                    <motion.button\n                      onClick={() => toggleMobileSection(group.label)}\n                      className={cn(\n                        \"flex items-center justify-between w-full space-x-4 py-4 px-4 rounded-xl transition-all duration-300 text-left group\",\n                        isGroupActive(group) && !openMobileSections[group.label]\n                          ? \"text-secondary font-semibold hover:bg-primary-foreground/15\"\n                          : \"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10\",\n                      )}\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                    >\n                      <div className=\"flex items-center space-x-4\">\n                        <GroupIcon className=\"w-5 h-5 group-hover:scale-110 transition-transform duration-200\" />\n                        <span className=\"font-medium text-base\">{group.label}</span>\n                      </div>\n                      <motion.div\n                        animate={{ rotate: openMobileSections[group.label] ? 180 : 0 }}\n                        transition={{ duration: 0.3, ease: [0.22, 1, 0.36, 1] }}\n                      >\n                        <ChevronDown className=\"w-5 h-5\" />\n                      </motion.div>\n                    </motion.button>\n\n                    <AnimatePresence>\n                      {openMobileSections[group.label] && (\n                        <motion.div\n                          initial={{ height: 0, opacity: 0 }}\n                          animate={{ height: \"auto\", opacity: 1 }}\n                          exit={{ height: 0, opacity: 0 }}\n                          transition={{ duration: 0.3, ease: [0.22, 1, 0.36, 1] }}\n                          className=\"pl-8 mt-2 space-y-1 overflow-hidden\"\n                        >\n                          {group.items.map((item, index) => {\n                            const Icon = item.icon\n                            return (\n                              <motion.div\n                                key={item.href}\n                                initial={{ opacity: 0, x: -20 }}\n                                animate={{ opacity: 1, x: 0 }}\n                                transition={{ delay: index * 0.1 }}\n                              >\n                                <SheetClose asChild>\n                                  <Link\n                                    href={item.href}\n                                    className={cn(\n                                      \"flex items-center gap-4 py-3 px-4 rounded-lg transition-all duration-300 text-sm w-full text-left group\",\n                                      isActive(item.href)\n                                        ? \"bg-gradient-to-r from-secondary/20 to-secondary/10 text-secondary font-semibold shadow-sm\"\n                                        : \"text-primary-foreground/80 hover:text-secondary hover:bg-primary-foreground/10\",\n                                    )}\n                                  >\n                                    {Icon && (\n                                      <Icon className=\"w-4 h-4 text-secondary group-hover:scale-110 transition-transform duration-200\" />\n                                    )}\n                                    <span>{item.label}</span>\n                                  </Link>\n                                </SheetClose>\n                              </motion.div>\n                            )\n                          })}\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </motion.div>\n                )})}\n\n                <motion.div variants={mobileNavItemVariants}>\n                  <SheetClose asChild>\n                    <Link\n                      href=\"/contacto\"\n                      className={cn(\n                        \"flex items-center space-x-4 py-4 px-4 rounded-xl transition-all duration-300 w-full text-left group\",\n                        isActive(\"/contacto\")\n                          ? \"bg-gradient-to-r from-secondary/20 to-secondary/10 text-secondary font-semibold shadow-lg\"\n                          : \"text-primary-foreground hover:text-secondary hover:bg-primary-foreground/10\",\n                      )}\n                    >\n                      <Mail className=\"w-5 h-5 group-hover:scale-110 transition-transform duration-200\" />\n                      <span className=\"font-medium text-base\">Contacto</span>\n                    </Link>\n                  </SheetClose>\n                </motion.div>\n\n                <motion.div variants={mobileNavItemVariants} className=\"pt-4\">\n                  <SheetClose asChild>\n                    <Link href=\"/cotizar/express\">\n                      <Button\n                        size=\"lg\"\n                        className=\"w-full bg-gradient-to-r from-secondary to-secondary/90 hover:from-secondary/90 hover:to-secondary/80 text-secondary-foreground shadow-lg font-semibold rounded-xl\"\n                      >\n                        <CalculatorIcon className=\"w-5 h-5 mr-3\" />\n                        Cotizar Env\u00edo\n                      </Button>\n                    </Link>\n                  </SheetClose>\n                </motion.div>\n              </motion.div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </motion.header>\n  )\n}\n"
            },
            {
              "name": "services-overview.tsx",
              "type": "file",
              "content": "\n\"use client\"\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Truck, Clock, Shield, MapPin, Zap, Package } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\nimport Image from \"next/image\"\n\nexport function ServicesOverview() {\n  const services = [\n    {\n      icon: Zap,\n      title: \"Env\u00edos Express\",\n      description: \"Entregas el mismo d\u00eda para cuando necesitas velocidad m\u00e1xima.\",\n      features: [\"Entrega en en el d\u00eda (Solicitalo antes de 15hs)\", \"Seguimiento en tiempo real\", \"Prioridad m\u00e1xima\"],\n      link: \"/servicios/envios-express\",\n      imageUrl: \"/servicios/enviosexpress.jpg\",\n      imageHint: \"fast motorcycle\"\n    },\n    {\n      icon: Package,\n      title: \"Env\u00edos Low Cost\",\n      description: \"La opci\u00f3n m\u00e1s econ\u00f3mica sin sacrificar calidad ni seguridad.\",\n      features: [\"Entrega en el d\u00eda solicitando antes de 13hs\", \"Rutas optimizadas\", \"Precio m\u00e1s bajo\"],\n      link: \"/servicios/envios-lowcost\",\n      imageUrl: \"/servicios/envios_low_cost.jpg\",\n      imageHint: \"saving money\"\n    },\n    {\n      icon: Truck,\n      title: \"Moto Fija\",\n      description: \"Servicio dedicado para tu negocio con repartidor exclusivo.\",\n      features: [\"Repartidor dedicado\", \"Horarios personalizados\", \"Ideal para negocios\"],\n      link: \"/servicios/moto-fija\",\n      imageUrl: \"/servicios/moto_fija.jpg\",\n      imageHint: \"dedicated courier\"\n    },\n  ]\n\n  return (\n    <section className=\"py-16 md:py-20 lg:py-24 px-4 bg-background\">\n      <div className=\"container mx-auto\">\n        <div className=\"text-center mb-12 md:mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-bold font-heading text-primary mb-3 sm:mb-4\">Nuestros Servicios Principales</h2>\n          <p className=\"text-base sm:text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto\">\n          Soluciones adaptadas a cada necesidad, desde entregas urgentes hasta servicios dedicados para tu negocio.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {services.map((service, index) => (\n            <motion.div\n              key={index}\n              className=\"relative group/card rounded-lg overflow-hidden shadow-lg h-[450px]\"\n              initial={{ y: 20, opacity: 0 }}\n              whileInView={{ y: 0, opacity: 1 }}\n              viewport={{ once: true, amount: 0.3 }}\n              transition={{ duration: 0.5, delay: index * 0.1 }}\n            >\n              <div className=\"absolute inset-0\">\n                <Image\n                  src={service.imageUrl}\n                  alt={`Imagen de fondo para ${service.title}`}\n                  fill\n                  sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                  className=\"w-full h-full object-cover transition-transform duration-700 ease-in-out group-hover/card:scale-105\"\n                  data-ai-hint={service.imageHint}\n                />\n              </div>\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\"></div>\n              \n              <div className=\"relative z-10 p-6 flex flex-col h-full justify-end\">\n                <h3 className=\"text-2xl font-bold text-white mb-2 font-heading\">{service.title}</h3>\n                \n                <div className=\"space-y-4\">\n                  <p className=\"text-primary-foreground/80\">\n                    {service.description}\n                  </p>\n                  \n                  <div>\n                    <Button asChild variant=\"secondary\" className=\"mt-4 font-semibold\">\n                      <Link href={service.link}>Conocer M\u00e1s</Link>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "theme-provider.tsx",
              "type": "file",
              "content": "'use client'\n\nimport * as React from 'react'\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from 'next-themes'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n"
            },
            {
              "name": "vision-section.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport Image from \"next/image\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\nimport { Button } from \"@/components/ui/button\"\nimport { ArrowRight, Users, Clock, Shield, Award, TrendingUp, Heart } from \"lucide-react\"\n\nexport function VisionSection() {\n  const images = [\n    \"/Emprendedoresbanner.webp\",\n    \"/Emprendedoresbannerrapidas.webp\",\n    \"/Emprendedoresbannerrapidas2.webp\",\n    \"/Emprendedoresbannerrapidas3.webp\",\n  ]\n\n  const duplicatedImages = [...images, ...images]\n\n  const stats = [\n    {\n      icon: Users,\n      number: \"5000+\",\n      label: \"Clientes Satisfechos\",\n      description: \"Empresas y emprendedores conf\u00edan en nosotros\",\n    },\n    {\n      icon: Clock,\n      number: \"98%\",\n      label: \"Entregas a Tiempo\",\n      description: \"Puntualidad garantizada en cada env\u00edo\",\n    },\n    {\n      icon: Shield,\n      number: \"100%\",\n      label: \"Env\u00edos Seguros\",\n      description: \"Protecci\u00f3n total de tus paquetes\",\n    },\n    {\n      icon: Award,\n      number: \"7+\",\n      label: \"A\u00f1os de Experiencia\",\n      description: \"L\u00edderes en mensajer\u00eda en Mar del Plata\",\n    },\n  ]\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.15,\n        delayChildren: 0.2,\n      },\n    },\n  }\n\n  const itemVariants = {\n    hidden: { y: 30, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.8,\n        ease: [0.22, 1, 0.36, 1],\n      },\n    },\n  }\n\n  const statsVariants = {\n    hidden: { scale: 0.8, opacity: 0 },\n    visible: {\n      scale: 1,\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\",\n      },\n    },\n  }\n\n  return (\n    <section className=\"relative bg-gradient-to-br from-primary via-primary to-primary/95 text-primary-foreground py-20 md:py-28 overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-primary/50 to-transparent\" />\n      <div className=\"absolute top-0 left-0 w-full h-px bg-gradient-to-r from-transparent via-secondary/50 to-transparent\" />\n\n      {/* Floating background elements */}\n      <div className=\"absolute inset-0\">\n        {[...Array(8)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-secondary/20 rounded-full\"\n            animate={{\n              x: [0, 100, 0],\n              y: [0, -100, 0],\n              opacity: [0.2, 0.8, 0.2],\n            }}\n            transition={{\n              duration: 8 + i * 2,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"easeInOut\",\n              delay: i * 1.5,\n            }}\n            style={{\n              left: `${10 + i * 12}%`,\n              top: `${20 + (i % 3) * 30}%`,\n            }}\n          />\n        ))}\n      </div>\n\n      <motion.div\n        className=\"container mx-auto px-4 flex flex-col items-center gap-16 relative z-10\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, amount: 0.2 }}\n      >\n        {/* Header Section */}\n        <motion.div variants={itemVariants} className=\"text-center space-y-6\">\n          <motion.div\n            className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-secondary/20 to-secondary/10 border border-secondary/30 backdrop-blur-sm mb-4\"\n            whileHover={{ scale: 1.05, backgroundColor: \"rgba(251, 191, 36, 0.2)\" }}\n          >\n            <TrendingUp className=\"w-4 h-4 text-secondary\" />\n            <span className=\"text-sm font-medium text-primary-foreground/90\">Creciendo Juntos</span>\n            <Heart className=\"w-4 h-4 text-secondary\" />\n          </motion.div>\n\n          <motion.h2\n            className=\"text-4xl md:text-5xl lg:text-6xl font-extrabold text-center font-heading\"\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: 8,\n              repeat: Number.POSITIVE_INFINITY,\n              ease: \"linear\",\n            }}\n            style={{\n              background: \"linear-gradient(90deg, #ffffff, #fbbf24, #ffffff)\",\n              backgroundSize: \"200% 200%\",\n              WebkitBackgroundClip: \"text\",\n              WebkitTextFillColor: \"transparent\",\n              backgroundClip: \"text\",\n            }}\n          >\n            Nuestra <span className=\"text-secondary\">Visi\u00f3n Global</span>\n          </motion.h2>\n\n          <motion.p\n            variants={itemVariants}\n            className=\"text-lg md:text-xl text-primary-foreground/80 max-w-3xl text-center font-sans leading-relaxed\"\n          >\n            Datos que respaldan nuestra calidad y compromiso. Descubre por qu\u00e9 somos la{\" \"}\n            <span className=\"text-secondary font-semibold\">soluci\u00f3n confiable</span> para tus env\u00edos en Mar del Plata.\n          </motion.p>\n        </motion.div>\n\n        {/* Stats Grid */}\n        <motion.div variants={itemVariants} className=\"grid grid-cols-2 lg:grid-cols-4 gap-6 md:gap-8 w-full max-w-6xl\">\n          {stats.map((stat, index) => (\n            <motion.div\n              key={index}\n              variants={statsVariants}\n              whileHover={{ scale: 1.05, y: -5 }}\n              className=\"bg-primary-foreground/10 backdrop-blur-sm rounded-2xl p-6 text-center border border-primary-foreground/20 hover:border-secondary/50 transition-all duration-300 group\"\n            >\n              <motion.div\n                className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-r from-secondary/20 to-secondary/10 mb-4 group-hover:from-secondary/30 group-hover:to-secondary/20 transition-all duration-300\"\n                whileHover={{ rotate: 360 }}\n                transition={{ duration: 0.6 }}\n              >\n                <stat.icon className=\"w-8 h-8 text-secondary\" />\n              </motion.div>\n\n              <motion.div\n                className=\"text-3xl md:text-4xl font-bold text-secondary mb-2 font-heading\"\n                initial={{ scale: 0 }}\n                whileInView={{ scale: 1 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.3 + index * 0.1, type: \"spring\", stiffness: 200 }}\n              >\n                {stat.number}\n              </motion.div>\n\n              <h3 className=\"text-lg font-semibold text-primary-foreground mb-2 font-heading\">{stat.label}</h3>\n\n              <p className=\"text-sm text-primary-foreground/70 leading-relaxed\">{stat.description}</p>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Image Carousel */}\n        <motion.div variants={itemVariants} className=\"w-full max-w-6xl overflow-hidden group\">\n          <div className=\"relative\">\n            <div className=\"absolute left-0 top-0 bottom-0 w-20 bg-gradient-to-r from-primary to-transparent z-10\" />\n            <div className=\"absolute right-0 top-0 bottom-0 w-20 bg-gradient-to-l from-primary to-transparent z-10\" />\n\n            <motion.div\n              className=\"flex animate-h-scroll group-hover:[animation-play-state:paused] w-max\"\n              whileHover={{ scale: 1.02 }}\n            >\n              {duplicatedImages.map((src, index) => (\n                <motion.div\n                  key={index}\n                  className=\"w-[clamp(280px,35vw,380px)] flex-shrink-0 p-4\"\n                  whileHover={{ y: -10 }}\n                  transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                >\n                  <div className=\"overflow-hidden rounded-2xl shadow-2xl ring-2 ring-secondary/20 hover:ring-secondary/50 transition-all duration-300\">\n                    <Image\n                      src={src || \"/placeholder.svg\"}\n                      alt={`Banner de emprendedores ${(index % 3) + 1}`}\n                      width={400}\n                      height={300}\n                      className=\"w-full h-auto object-cover filter grayscale hover:grayscale-0 transition-all duration-500 transform hover:scale-110\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-primary/60 via-transparent to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300\" />\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </div>\n        </motion.div>\n\n        {/* CTA Section */}\n        <motion.div variants={itemVariants} className=\"text-center space-y-6\">\n          <motion.p className=\"text-lg text-primary-foreground/80 max-w-2xl mx-auto\" variants={itemVariants}>\n            \u00bfListo para formar parte de nuestra familia de clientes satisfechos?\n          </motion.p>\n\n          <motion.div whileHover={{ scale: 1.05, y: -2 }} whileTap={{ scale: 0.95 }}>\n            <Button\n              asChild\n              size=\"lg\"\n              className=\"bg-gradient-to-r from-secondary to-secondary/90 hover:from-secondary/90 hover:to-secondary/80 text-secondary-foreground font-bold px-8 py-4 text-lg rounded-full shadow-2xl hover:shadow-secondary/25 border border-secondary/20\"\n            >\n              <Link href=\"/nosotros/sobre-nosotros\" className=\"flex items-center gap-3\">\n                Conoc\u00e9 m\u00e1s sobre nosotros\n                <motion.div animate={{ x: [0, 4, 0] }} transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY }}>\n                  <ArrowRight className=\"w-5 h-5\" />\n                </motion.div>\n              </Link>\n            </Button>\n          </motion.div>\n        </motion.div>\n      </motion.div>\n\n      {/* Custom CSS for horizontal scroll animation */}\n      <style jsx>{`\n        @keyframes h-scroll {\n          0% {\n            transform: translateX(0);\n          }\n          100% {\n            transform: translateX(-50%);\n          }\n        }\n        .animate-h-scroll {\n          animation: h-scroll 30s linear infinite;\n        }\n      `}</style>\n    </section>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "layout",
          "type": "directory",
          "children": [
            {
              "name": "footer.tsx",
              "type": "file",
              "content": "export function Footer() {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer className=\"bg-muted py-8 text-center text-muted-foreground\">\n      <div className=\"container mx-auto px-4\">\n        <p>&copy; {currentYear} Envios DosRuedas 2024. Todos los derechos reservados.</p>\n      </div>\n    </footer>\n  );\n}\n"
            },
            {
              "name": "header.tsx",
              "type": "file",
              "content": "import Image from 'next/image';\nimport Link from 'next/link';\n\nexport function Header() {\n  return (\n    <header className=\"bg-card shadow-md sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 py-3 flex items-center justify-between\">\n        <Link href=\"/\" className=\"flex items-center gap-2 text-primary hover:text-primary/80 transition-colors\">\n          <Image src=\"/LogoEnviosDosRuedas.webp\" alt=\"Envios DosRuedas 1806 Logo\" width={32} height={32} />\n          <h1 className=\"text-2xl font-bold font-headline\">Envios DosRuedas 1806</h1>\n        </Link>\n        <nav className=\"hidden md:flex gap-4\">\n          <Link href=\"#services\" className=\"text-foreground hover:text-primary transition-colors\">Servicios</Link>\n          <Link href=\"#calculator\" className=\"text-foreground hover:text-primary transition-colors\">Calculadora</Link>\n          <Link href=\"#contact\" className=\"text-foreground hover:text-primary transition-colors\">Contacto</Link>\n        </nav>\n      </div>\n    </header>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "lowcost",
          "type": "directory",
          "children": [
            {
              "name": "how-lowcost-works.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\n\nexport function HowLowcostWorks() {\n  const steps = [\n    {\n      step: \"1\",\n      title: \"Solicita tu Env\u00edo\",\n      description: \"Completa el formulario con los detalles de tu env\u00edo y elige la fecha de entrega.\",\n    },\n    {\n      step: \"2\",\n      title: \"Programamos la Ruta\",\n      description: \"Agrupamos tu env\u00edo con otros en la misma zona para optimizar costos.\",\n    },\n    {\n      step: \"3\",\n      title: \"Recolectamos\",\n      description: \"Pasamos a buscar tu paquete en el horario acordado, sin costo adicional.\",\n    },\n    {\n      step: \"4\",\n      title: \"Entregamos\",\n      description: \"Entrega en el d\u00eda solicitando antes de 13hs\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <Badge className=\"bg-blue-600 text-white hover:bg-blue-700 mb-6 px-4 py-2 text-sm font-medium\">\n            Proceso Optimizado\n          </Badge>\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfC\u00f3mo Funciona Low Cost?</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Nuestro proceso optimizado te permite ahorrar dinero sin complicaciones\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {steps.map((step, index) => (\n            <Card key={index} className=\"text-center hover:shadow-lg transition-shadow duration-300\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-16 h-16 bg-yellow-500 text-gray-900 rounded-full flex items-center justify-center mx-auto mb-4 text-2xl font-bold\">\n                  {step.step}\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{step.title}</h3>\n                <p className=\"text-gray-600 leading-relaxed\">{step.description}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "lowcost-benefits.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Wallet, Route, Shield, Clock, Users, Award } from \"lucide-react\"\n\nexport function LowcostBenefits() {\n  const benefits = [\n    {\n      icon: Wallet,\n      title: \"M\u00e1ximo Ahorro\",\n      description: \"Hasta 50% menos que los env\u00edos express, sin comprometer la calidad del servicio.\",\n    },\n    {\n      icon: Route,\n      title: \"Rutas Inteligentes\",\n      description: \"Optimizamos las rutas para reducir costos y tiempos, benefici\u00e1ndote con mejores precios.\",\n    },\n    {\n      icon: Shield,\n      title: \"Seguridad Garantizada\",\n      description: \"Todos los env\u00edos incluyen seguro y seguimiento, sin importar el precio.\",\n    },\n    {\n      icon: Clock,\n      title: \"Flexibilidad Horaria\",\n      description: \"Programa tus env\u00edos con anticipaci\u00f3n y elige el horario que m\u00e1s te convenga.\",\n    },\n    {\n      icon: Users,\n      title: \"Ideal para Negocios\",\n      description: \"Perfecto para e-commerce y negocios que manejan grandes vol\u00famenes de env\u00edos.\",\n    },\n    {\n      icon: Award,\n      title: \"Calidad Comprobada\",\n      description: \"La misma calidad y confiabilidad de siempre, a un precio m\u00e1s accesible.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfPor Qu\u00e9 Elegir Low Cost?</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Descubre todas las ventajas de nuestro servicio de env\u00edos econ\u00f3micos sin sacrificar calidad\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {benefits.map((benefit, index) => {\n            const IconComponent = benefit.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mb-4\">\n                    <IconComponent className=\"w-6 h-6 text-yellow-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{benefit.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "lowcost-content.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { DollarSign, Calendar, BarChart3 } from \"lucide-react\"\nimport Link from \"next/link\"\n\nexport function LowcostContent() {\n  const features = [\n    {\n      icon: DollarSign,\n      title: \"Precios Econ\u00f3micos\",\n      description: \"La opci\u00f3n m\u00e1s conveniente para env\u00edos no prioritarios.\",\n    },\n    {\n      icon: Calendar,\n      title: \"Env\u00edos Programados\",\n      description: \"Planifica tus entregas con anticipaci\u00f3n y ahorra dinero.\",\n    },\n    {\n      icon: BarChart3,\n      title: \"Rutas Optimizadas\",\n      description: \"Agrupamos env\u00edos para ofrecerte tarifas m\u00e1s bajas.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content - Large Branding */}\n          <div className=\"flex justify-center lg:justify-start\">\n            <div className=\"text-center lg:text-left\">\n              <div className=\"space-y-2\">\n                <div className=\"text-6xl md:text-7xl lg:text-8xl font-bold text-transparent bg-gradient-to-r from-blue-400 to-teal-500 bg-clip-text\">\n                  ENVIOS\n                </div>\n                <div className=\"text-6xl md:text-7xl lg:text-8xl font-bold text-gray-800\">DOS RUEDAS</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Content */}\n          <div>\n            <h2 className=\"text-3xl md:text-4xl font-bold text-blue-800 mb-6\">Mensajer\u00eda y Env\u00edos Low Cost</h2>\n            <p className=\"text-lg text-gray-700 mb-8 leading-relaxed\">\n            \u00bfNo ten\u00e9s apuro? Ahorr\u00e1 en tus env\u00edos con nuestro servicio de mensajer\u00eda low cost. Programamos tus entregas en rutas optimizadas para ofrecerte el mejor precio sin sacrificar la seguridad y confiabilidad.\n            </p>\n\n            {/* Features */}\n            <div className=\"space-y-6 mb-8\">\n              {features.map((feature, index) => {\n                const IconComponent = feature.icon\n                return (\n                  <div key={index} className=\"flex items-start\">\n                    <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mr-4 flex-shrink-0\">\n                      <IconComponent className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-blue-800 mb-2\">{feature.title}</h3>\n                      <p className=\"text-gray-600 leading-relaxed\">{feature.description}</p>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n\n            {/* CTA Button */}\n            <Button\n              asChild\n              size=\"lg\"\n              className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold px-8 py-3\"\n            >\n              <Link href=\"/cotizar/lowcost\">Cotizar Env\u00edo Low Cost</Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "lowcost-cta.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Calculator, Phone } from \"lucide-react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\n\nexport function LowcostCta() {\n  return (\n    <section className=\"py-16 px-4 bg-blue-600\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-white\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfListo para Ahorrar en tus Env\u00edos?</h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-2xl mx-auto\">\n              Obt\u00e9n una cotizaci\u00f3n personalizada y descubre cu\u00e1nto puedes ahorrar con nuestro servicio Low Cost.\n            </p>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button asChild size=\"lg\" className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold\">\n                <Link href=\"/cotizar/lowcost\">\n                  <Calculator className=\"w-5 h-5 mr-2\" />\n                  Cotizar Ahora\n                </Link>\n              </Button>\n              <Button variant=\"outline\" size=\"lg\">\n                Ver Ejemplos de Precios\n              </Button>\n            </div>\n\n            <div className=\"border-t pt-6\">\n              <p className=\"text-sm text-gray-600 mb-4\">\u00bfTienes preguntas sobre nuestros precios? Cont\u00e1ctanos:</p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-green-600 hover:text-green-700\">\n                  <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={16} height={16} className=\"w-4 h-4 mr-2\" />\n                  WhatsApp: 223-660-2699\n                </Button>\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-blue-600 hover:text-blue-700\">\n                  <Phone className=\"w-4 h-4 mr-2\" />\n                  Llamar para Consultas\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "lowcost-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport Link from \"next/link\";\n\nexport function LowcostHero() {\n  return (\n    <HeroSection\n      title={<span className=\"text-yellow-400\">Mensajer\u00eda - Env\u00edos Low-cost</span>}\n      description={\n        <>\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mt-4 mb-2 font-semibold\">Envios DosRuedas</h2>\n          <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed max-w-4xl mx-auto\">\n            Descubre nuestros servicios de mensajer\u00eda r\u00e1pida y econ\u00f3mica. Env\u00edos seguros y a precios bajos para todas tus necesidades.\n          </p>\n        </>\n      }\n      ctaButtons={[\n        { text: \"Cotiza el servicio\", href: \"/cotizar/lowcost\", variant: 'secondary' }\n      ]}\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner Env\u00edos Low Cost Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[60vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"text-4xl md:text-5xl lg:text-6xl font-bold\"\n      descriptionClassName=\"mb-8\"\n    />\n  );\n}\n"
            },
            {
              "name": "pricing-comparison.tsx",
              "type": "file",
              "content": "\n\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Coins, MapPin, ArrowRightCircle, HelpCircle } from \"lucide-react\";\nimport { preciosLowCost, type PrecioRango } from \"@/lib/precioslowcost\";\nimport Image from \"next/image\";\n\nexport function PricingComparison() {\n  // Filtrar los rangos para mostrar solo hasta 12.99 km\n  const displayedPriceRanges = preciosLowCost.filter(\n    (rango) => rango.distancia_max_km < 13\n  );\n\n  const formatKmDisplay = (km: number, isMaxBoundaryInTitleOrRange: boolean = false) => {\n    const kmFixed = parseFloat(km.toFixed(2)); \n\n    if (isMaxBoundaryInTitleOrRange && String(kmFixed.toFixed(2)).endsWith('.99')) {\n      return Math.ceil(kmFixed).toString();\n    }\n    \n    return Number.isInteger(kmFixed) ? kmFixed.toFixed(0) : kmFixed.toFixed(2).replace(\".\", \",\");\n  };\n\n  const lowCostTiers = displayedPriceRanges.map((rango: PrecioRango) => {\n    const titleMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n    const rangeMinKmFormatted = formatKmDisplay(rango.distancia_min_km);\n    const rangeMaxKmFormatted = formatKmDisplay(rango.distancia_max_km, true);\n\n    return {\n      name: `Hasta ${titleMaxKmFormatted} km`,\n      icon: MapPin, \n      price: `$${rango.precio_rango.toLocaleString(\"es-AR\", {\n        minimumFractionDigits: rango.precio_rango % 1 === 0 ? 0 : 2,\n        maximumFractionDigits: 2,\n      })}`,\n      distanceRange: `${rangeMinKmFormatted} km - ${rangeMaxKmFormatted} km`,\n      description: `Para env\u00edos dentro de este rango de distancia.`,\n      features: [\n        \"Servicio econ\u00f3mico y confiable\",\n        \"Entrega en el d\u00eda solicitando antes de 13hs\",\n        \"Seguimiento incluido\",\n      ],\n      color: \"border-green-200 bg-green-50\",\n      badgeText: \"Tarifa Low Cost\",\n      badgeColor: \"bg-green-600\",\n    };\n  });\n\n  const handleWhatsAppClick = () => {\n    const phoneNumber = \"5492236602699\";\n    const message = \"Hola, necesito cotizar un env\u00edo Low Cost de m\u00e1s de 13 km.\";\n    const whatsappUrl = `https://wa.me/${phoneNumber}?text=${encodeURIComponent(\n      message\n    )}`;\n    window.open(whatsappUrl, \"_blank\");\n  };\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\n            Tarifas Env\u00edos Low Cost por Distancia\n          </h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Encuentra el precio de tu env\u00edo Low Cost seg\u00fan la distancia.\n            Transparencia y ahorro garantizado.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {lowCostTiers.map((tier, index) => {\n            return (\n              <Card\n                key={index}\n                className={`relative ${tier.color} border-2 hover:shadow-lg transition-shadow duration-300 flex flex-col`}\n              >\n                <Badge\n                  className={`absolute -top-3 left-1/2 transform -translate-x-1/2 ${tier.badgeColor} text-white px-3 py-1 text-xs`}\n                >\n                  {tier.badgeText}\n                </Badge>\n                <CardHeader className=\"text-center pb-4 pt-8\">\n                  <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border-2 border-green-200\">\n                    <Coins className=\"w-8 h-8 text-green-600\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold text-gray-800\">\n                    {tier.name}\n                  </CardTitle>\n                  <p className=\"text-sm text-gray-500\">\n                    {tier.distanceRange}\n                  </p>\n                  <div className=\"text-3xl font-bold text-green-700 my-2\">\n                    {tier.price}\n                  </div>\n                </CardHeader>\n                <CardContent className=\"flex-grow\">\n                  <p className=\"text-gray-600 mb-4 text-center text-sm\">\n                    {tier.description}\n                  </p>\n                  <ul className=\"space-y-2 text-sm\">\n                    {tier.features.map((feature, featureIndex) => (\n                      <li\n                        key={featureIndex}\n                        className=\"flex items-center text-gray-700\"\n                      >\n                        <ArrowRightCircle className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            );\n          })}\n\n          {/* Card especial para distancias mayores */}\n          <Card className=\"relative border-blue-200 bg-blue-50 border-2 hover:shadow-lg transition-shadow duration-300 flex flex-col\">\n            <Badge\n                className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white px-3 py-1 text-xs\"\n            >\n                Cotizaci\u00f3n Especial\n            </Badge>\n            <CardHeader className=\"text-center pb-4 pt-8\">\n              <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center mx-auto mb-4 border-2 border-blue-200\">\n                <HelpCircle className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <CardTitle className=\"text-2xl font-bold text-gray-800\">\n                M\u00e1s de 13 km\n              </CardTitle>\n              <p className=\"text-sm text-gray-500\">\n                Env\u00edos de Larga Distancia\n              </p>\n            </CardHeader>\n            <CardContent className=\"flex-grow flex flex-col justify-between\">\n              <p className=\"text-gray-600 mb-4 text-center text-sm\">\n                Para env\u00edos que superen los 13 km, ofrecemos cotizaciones personalizadas para asegurar el mejor precio.\n              </p>\n              <Button\n                onClick={handleWhatsAppClick}\n                className=\"w-full bg-green-500 hover:bg-green-600 text-white mt-4\"\n              >\n                <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={20} height={20} className=\"w-5 h-5 mr-2\" />\n                Consultar por WhatsApp\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "moto-fija",
          "type": "directory",
          "children": [
            {
              "name": "ideal-clients.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { UtensilsCrossed, Store, Building, Package } from \"lucide-react\"\n\nexport function IdealClients() {\n  const clientTypes = [\n    {\n      icon: UtensilsCrossed,\n      title: \"Restaurantes\",\n      description: \"Delivery constante con horarios espec\u00edficos y necesidad de rapidez y calidad en el servicio.\",\n      benefits: [\"Entregas en caliente\", \"Horarios de almuerzo y cena\", \"Conocimiento de rutas r\u00e1pidas\"],\n    },\n    {\n      icon: Store,\n      title: \"Comercios\",\n      description: \"Tiendas con env\u00edos regulares a clientes frecuentes que requieren un servicio personalizado.\",\n      benefits: [\"Clientes habituales\", \"Horarios comerciales\", \"Entregas programadas\"],\n    },\n    {\n      icon: Building,\n      title: \"Empresas\",\n      description: \"Compa\u00f1\u00edas con necesidades log\u00edsticas regulares entre oficinas o con clientes corporativos.\",\n      benefits: [\"Documentaci\u00f3n urgente\", \"Entregas corporativas\", \"Horarios de oficina\"],\n    },\n    {\n      icon: Package,\n      title: \"E-commerce\",\n      description: \"Tiendas online con alto volumen de pedidos que necesitan optimizar sus entregas diarias.\",\n      benefits: [\"Alto volumen\", \"Entregas programadas\", \"Seguimiento detallado\"],\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfPara Qui\u00e9n es Ideal?</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            El servicio de Moto Fija est\u00e1 dise\u00f1ado para negocios con necesidades espec\u00edficas de delivery\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-8\">\n          {clientTypes.map((client, index) => {\n            const IconComponent = client.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start mb-4\">\n                    <div className=\"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mr-4 flex-shrink-0\">\n                      <IconComponent className=\"w-6 h-6 text-yellow-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">{client.title}</h3>\n                      <p className=\"text-gray-600 leading-relaxed mb-4\">{client.description}</p>\n                    </div>\n                  </div>\n                  <div className=\"ml-16\">\n                    <h4 className=\"font-semibold text-gray-700 mb-2\">Beneficios espec\u00edficos:</h4>\n                    <ul className=\"space-y-1\">\n                      {client.benefits.map((benefit, benefitIndex) => (\n                        <li key={benefitIndex} className=\"text-sm text-gray-600 flex items-center\">\n                          <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full mr-2\"></div>\n                          {benefit}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "moto-fija-content.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { Check } from \"lucide-react\"\nimport Link from \"next/link\"\n\nexport function MotoFijaContent() {\n  const benefits = [\n    \"Repartidor dedicado y familiarizado con tus necesidades.\",\n    \"Horarios flexibles adaptados a tu operatoria.\",\n    \"Mayor eficiencia en rutas conocidas.\",\n    \"Comunicaci\u00f3n directa y \u00e1gil.\",\n    \"Ideal para env\u00edos recurrentes y programados.\",\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <div>\n            <p className=\"text-lg text-gray-700 mb-8 leading-relaxed\">\n              Optimiza tus entregas regulares con nuestro servicio de delivery con moto fija. Asignamos un repartidor\n              exclusivo para tu negocio, garantizando puntualidad, conocimiento de tus rutas y un servicio\n              personalizado. Ideal para restaurantes, comercios y empresas con env\u00edos frecuentes.\n            </p>\n\n            {/* Benefits List */}\n            <div className=\"space-y-4 mb-8\">\n              {benefits.map((benefit, index) => (\n                <div key={index} className=\"flex items-start\">\n                  <Check className=\"w-6 h-6 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                  <p className=\"text-gray-700 leading-relaxed\">{benefit}</p>\n                </div>\n              ))}\n            </div>\n\n            {/* CTA Button */}\n            <Button\n              asChild\n              size=\"lg\"\n              className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold px-8 py-3\"\n            >\n              <Link href=\"/contacto\">Consultar por Moto Fija</Link>\n            </Button>\n          </div>\n\n          {/* Right Content - Large Branding */}\n          <div className=\"flex justify-center lg:justify-end\">\n            <div className=\"text-center lg:text-right\">\n              <div className=\"space-y-2\">\n                <div className=\"text-6xl md:text-7xl lg:text-8xl font-bold text-transparent bg-gradient-to-r from-blue-400 to-teal-500 bg-clip-text\">\n                  ENVIOS\n                </div>\n                <div className=\"text-6xl md:text-7xl lg:text-8xl font-bold text-gray-800\">DOS RUEDAS</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "moto-fija-cta.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Phone, Mail, Calendar } from \"lucide-react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\n\nexport function MotoFijaCta() {\n  return (\n    <section className=\"py-16 px-4 bg-blue-600\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-white\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\u00bfListo para Optimizar tus Entregas?</h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-2xl mx-auto\">\n              Cont\u00e1ctanos para una consulta personalizada y descubre c\u00f3mo el servicio de Moto Fija puede transformar la\n              log\u00edstica de tu negocio.\n            </p>\n\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button asChild size=\"lg\" className=\"bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-semibold\">\n                <Link href=\"/contacto\">\n                  <Calendar className=\"w-5 h-5 mr-2\" />\n                  Agendar Consulta\n                </Link>\n              </Button>\n              <Button variant=\"outline\" size=\"lg\">\n                Solicitar Cotizaci\u00f3n\n              </Button>\n            </div>\n\n            <div className=\"border-t pt-6\">\n              <p className=\"text-sm text-gray-600 mb-4\">\u00bfNecesitas m\u00e1s informaci\u00f3n? Estamos aqu\u00ed para ayudarte:</p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-green-600 hover:text-green-700\">\n                  <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp Icon\" width={16} height={16} className=\"w-4 h-4 mr-2\" />\n                  WhatsApp: 223-660-2699\n                </Button>\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-blue-600 hover:text-blue-700\">\n                  <Phone className=\"w-4 h-4 mr-2\" />\n                  Llamar Ahora\n                </Button>\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-700\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  Email\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "moto-fija-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Link from \"next/link\";\n\nexport function MotoFijaHero() {\n  return (\n    <HeroSection\n      preTitle={\n        <Badge className=\"bg-blue-600 text-white hover:bg-blue-700 mb-6 px-4 py-2 text-sm font-medium\">\n          Servicio Premium\n        </Badge>\n      }\n      title={<span className=\"text-yellow-400\">Servicio de Moto Fija</span>}\n      description={\n        <>\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mt-4 mb-2 font-semibold\">Envios DosRuedas</h2>\n          <div className=\"max-w-4xl mx-auto space-y-2\">\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n              Soluciones de delivery personalizadas para tu negocio.\n            </p>\n            <p className=\"text-lg md:text-xl text-primary-foreground/80 leading-relaxed\">\n              Con\u00e9ctate con nosotros y descubre todo lo que tenemos para ofrecerte.\n            </p>\n          </div>\n        </>\n      }\n      ctaButtons={[\n        { text: \"Contactar\", href: \"/contacto\", variant: 'secondary' }\n      ]}\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner Moto Fija Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[60vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"text-4xl md:text-5xl lg:text-6xl font-bold\"\n      descriptionClassName=\"mb-8\"\n    />\n  );\n}\n"
            },
            {
              "name": "pricing-plans.tsx",
              "type": "file",
              "content": "import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Check, Star } from \"lucide-react\"\nimport { motoFijaPlans } from \"@/lib/motofija\"\n\nexport function PricingPlans() {\n  const plans = motoFijaPlans;\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Planes y Tarifas</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Elige el plan que mejor se adapte a las necesidades de tu negocio\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {plans.map((plan, index) => (\n            <Card\n              key={index}\n              className={`relative hover:shadow-lg transition-shadow duration-300 ${\n                plan.popular ? \"border-blue-500 border-2\" : \"\"\n              }`}\n            >\n              {plan.popular && (\n                <Badge className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white\">\n                  <Star className=\"w-4 h-4 mr-1\" />\n                  M\u00e1s Popular\n                </Badge>\n              )}\n              <CardHeader className=\"text-center pb-4\">\n                <CardTitle className=\"text-2xl font-bold text-gray-800\">{plan.name}</CardTitle>\n                <div className=\"text-sm text-gray-500 mb-2\">{plan.duration}</div>\n                <div className=\"text-3xl font-bold text-blue-600 my-2\">{plan.price}</div>\n                <p className=\"text-gray-600\">{plan.description}</p>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-3 mb-6\">\n                  {plan.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-center\">\n                      <Check className=\"w-5 h-5 text-green-500 mr-3 flex-shrink-0\" />\n                      <span className=\"text-gray-600\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n                <Button\n                  className={`w-full ${\n                    plan.popular ? \"bg-blue-600 hover:bg-blue-700\" : \"bg-gray-600 hover:bg-gray-700\"\n                  }`}\n                >\n                  {plan.price === \"Consultar\" ? \"Solicitar Cotizaci\u00f3n\" : \"Contratar Plan\"}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "service-features.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { User, Clock, Route, MessageCircle, Calendar, Shield } from \"lucide-react\"\n\nexport function ServiceFeatures() {\n  const features = [\n    {\n      icon: User,\n      title: \"Repartidor Dedicado\",\n      description: \"Un profesional asignado exclusivamente a tu negocio que conoce tus procesos y necesidades.\",\n    },\n    {\n      icon: Clock,\n      title: \"Horarios Personalizados\",\n      description: \"Adaptamos los horarios de trabajo a tu operatoria y picos de demanda espec\u00edficos.\",\n    },\n    {\n      icon: Route,\n      title: \"Rutas Optimizadas\",\n      description: \"Mayor eficiencia al conocer perfectamente tus rutas habituales y zonas de entrega.\",\n    },\n    {\n      icon: MessageCircle,\n      title: \"Comunicaci\u00f3n Directa\",\n      description: \"L\u00ednea directa con tu repartidor para coordinaci\u00f3n inmediata y resoluci\u00f3n de incidencias.\",\n    },\n    {\n      icon: Calendar,\n      title: \"Planificaci\u00f3n Avanzada\",\n      description: \"Programa entregas recurrentes y gestiona tu log\u00edstica con anticipaci\u00f3n.\",\n    },\n    {\n      icon: Shield,\n      title: \"Servicio Garantizado\",\n      description: \"Respaldo completo con seguro, seguimiento y reemplazo inmediato en caso necesario.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Caracter\u00edsticas del Servicio</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Descubre todas las ventajas de tener un servicio de delivery dedicado para tu negocio\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {features.map((feature, index) => {\n            const IconComponent = feature.icon\n            return (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mb-4\">\n                    <IconComponent className=\"w-6 h-6 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{feature.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{feature.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            }
          ]
        },
        {
          "name": "ordenes",
          "type": "directory",
          "children": [
            {
              "name": "ClientRegistrationForm.tsx",
              "type": "file",
              "content": "\n// src/components/ordenes/ClientRegistrationForm.tsx\n'use client';\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport type { Client } from '@prisma/client';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form';\nimport { Loader2, UserPlus, Mail, MapPin, Phone, ArrowLeft } from 'lucide-react';\nimport { registerClient } from '@/app/ordenes/actions'; \nimport type { RegisterClientInput } from '@/types/order-actions';\nimport { useToast } from '@/hooks/use-toast';\n\nconst clientRegistrationZodSchema = z.object({\n  name: z.string().min(2, 'El nombre es requerido y debe tener al menos 2 caracteres.'),\n  lastName: z.string().min(2, 'El apellido es requerido y debe tener al menos 2 caracteres.').optional().or(z.literal('')),\n  phone: z.string().min(1, 'El n\u00famero de tel\u00e9fono es requerido.').regex(/^\\+?\\d{7,15}$/, 'Formato de tel\u00e9fono inv\u00e1lido.'),\n  email: z.string().email('El email no es v\u00e1lido.').optional().or(z.literal('')), \n  address: z.string().min(5, 'La direcci\u00f3n es requerida y debe tener al menos 5 caracteres.'),\n});\n\ntype ClientRegistrationFormValues = z.infer<typeof clientRegistrationZodSchema>;\n\ninterface ClientRegistrationFormProps {\n  initialPhone: string;\n  onClientRegistered: (client: Client) => void;\n  onCancel: () => void;\n  setIsParentProcessing: (isProcessing: boolean) => void;\n}\n\nexport function ClientRegistrationForm({ initialPhone, onClientRegistered, onCancel, setIsParentProcessing }: ClientRegistrationFormProps) {\n  const [isRegistering, setIsRegistering] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<ClientRegistrationFormValues>({\n    resolver: zodResolver(clientRegistrationZodSchema),\n    defaultValues: {\n      name: '',\n      lastName: '',\n      phone: initialPhone, \n      email: '',\n      address: '',\n    },\n  });\n\n  async function onSubmit(data: ClientRegistrationFormValues) {\n    setIsRegistering(true);\n    setIsParentProcessing(true);\n    toast({ title: 'Registrando Cliente...', description: `Registrando a ${data.name} ${data.lastName || ''}` });\n\n    const submissionData: RegisterClientInput = {\n        ...data,\n        lastName: data.lastName || undefined, \n        email: data.email || undefined,       \n    };\n\n    try {\n      const result = await registerClient(submissionData);\n      if (result.success && result.data) {\n        toast({\n          title: 'Cliente Registrado Exitosamente',\n          description: `${result.data.name} ${result.data.lastName || ''} ha sido registrado.`,\n          variant: 'default',\n          className: 'bg-green-100 border-green-400 text-green-700',\n        });\n        onClientRegistered(result.data);\n      } else {\n        let errorMessage = result.error || 'Ocurri\u00f3 un error inesperado.';\n        if (result.fieldErrors) {\n          result.fieldErrors.forEach(err => {\n            if (err.path && err.path.length > 0) {\n              form.setError(err.path[0] as keyof ClientRegistrationFormValues, { message: err.message });\n            }\n          });\n          errorMessage = `Error de validaci\u00f3n: ${result.fieldErrors.map(e => e.message).join(', ')}`;\n        }\n        toast({\n          title: 'Error al Registrar Cliente',\n          description: errorMessage,\n          variant: 'destructive',\n        });\n      }\n    } catch (error) {\n      console.error('Error al registrar cliente:', error);\n      toast({\n        title: 'Error de Conexi\u00f3n',\n        description: 'No se pudo conectar con el servidor. Intenta de nuevo.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsRegistering(false);\n      setIsParentProcessing(false);\n    }\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <p className=\"text-sm text-center text-muted-foreground\">\n        No se encontr\u00f3 un cliente para el tel\u00e9fono: <strong>{initialPhone}</strong>.\n        <br />\n        Por favor, completa los siguientes datos para registrarlo.\n      </p>\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel htmlFor=\"reg-name\">Nombre *</FormLabel>\n                  <FormControl>\n                    <Input id=\"reg-name\" placeholder=\"Nombre del cliente\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"lastName\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel htmlFor=\"reg-lastName\">Apellido</FormLabel>\n                  <FormControl>\n                    <Input id=\"reg-lastName\" placeholder=\"Apellido del cliente\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n          <FormField\n            control={form.control}\n            name=\"phone\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel htmlFor=\"reg-phone\" className=\"flex items-center\">\n                  <Phone className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  Tel\u00e9fono *\n                </FormLabel>\n                <FormControl>\n                  <Input id=\"reg-phone\" type=\"tel\" {...field} readOnly className=\"bg-muted/50 cursor-not-allowed\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel htmlFor=\"reg-email\" className=\"flex items-center\">\n                  <Mail className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  Email (Opcional)\n                </FormLabel>\n                <FormControl>\n                  <Input id=\"reg-email\" type=\"email\" placeholder=\"correo@ejemplo.com\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"address\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel htmlFor=\"reg-address\" className=\"flex items-center\">\n                  <MapPin className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  Direcci\u00f3n Completa *\n                </FormLabel>\n                <FormControl>\n                  <Input id=\"reg-address\" placeholder=\"Calle, N\u00famero, Localidad (Ej: Av. Col\u00f3n 1234, Mar del Plata)\" {...field} />\n                </FormControl>\n                <FormDescription className=\"text-xs\">\n                  Esta direcci\u00f3n se geolocalizar\u00e1 para futuras referencias.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <div className=\"flex flex-col sm:flex-row gap-3 pt-2\">\n            <Button type=\"button\" variant=\"outline\" onClick={onCancel} disabled={isRegistering} className=\"w-full sm:w-auto\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Cancelar y Volver a Buscar\n            </Button>\n            <Button type=\"submit\" disabled={isRegistering} className=\"w-full sm:flex-1 bg-primary hover:bg-primary/90\">\n              {isRegistering ? (\n                <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n              ) : (\n                <UserPlus className=\"mr-2 h-5 w-5\" />\n              )}\n              {isRegistering ? 'Registrando...' : 'Registrar Cliente'}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n}\n"
            },
            {
              "name": "ClientSearchForm.tsx",
              "type": "file",
              "content": "\n'use client';\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport type { Client } from '@prisma/client';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form';\nimport { Loader2, Search, Phone } from 'lucide-react';\nimport { searchClientByPhone } from '@/app/ordenes/actions';\nimport { useToast } from '@/hooks/use-toast';\n\nconst searchClientSchema = z.object({\n  phone: z.string().min(7, 'El tel\u00e9fono debe tener al menos 7 d\u00edgitos.').regex(/^\\+?\\d{7,15}$/, 'Formato de tel\u00e9fono inv\u00e1lido. Ej: 2231234567 o +5492231234567'),\n});\n\ntype SearchClientFormValues = z.infer<typeof searchClientSchema>;\n\ninterface ClientSearchFormProps {\n  onClientFound: (client: Client) => void;\n  onClientNotFound: (phone: string) => void;\n  setIsParentProcessing: (isProcessing: boolean) => void;\n}\n\nexport function ClientSearchForm({ onClientFound, onClientNotFound, setIsParentProcessing }: ClientSearchFormProps) {\n  const [isSearching, setIsSearching] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<SearchClientFormValues>({\n    resolver: zodResolver(searchClientSchema),\n    defaultValues: {\n      phone: '',\n    },\n  });\n\n  async function onSubmit(data: SearchClientFormValues) {\n    setIsSearching(true);\n    setIsParentProcessing(true);\n    toast({ title: 'Buscando Cliente...', description: `Buscando por tel\u00e9fono: ${data.phone}` });\n\n    try {\n      const result = await searchClientByPhone({ phone: data.phone });\n      if (result.success) {\n        if (result.data) {\n          toast({\n            title: 'Cliente Encontrado',\n            description: `Cliente: ${result.data.name} ${result.data.lastName || ''}`,\n            variant: 'default',\n            className: 'bg-green-100 border-green-400 text-green-700',\n          });\n          onClientFound(result.data);\n        } else {\n          toast({\n            title: 'Cliente No Encontrado',\n            description: 'Puedes registrarlo en el siguiente paso.',\n            variant: 'default',\n          });\n          onClientNotFound(data.phone);\n        }\n      } else {\n        toast({\n          title: 'Error en la B\u00fasqueda',\n          description: result.error || 'Ocurri\u00f3 un error inesperado.',\n          variant: 'destructive',\n        });\n      }\n    } catch (error) {\n      console.error('Error al buscar cliente:', error);\n      toast({\n        title: 'Error de Conexi\u00f3n',\n        description: 'No se pudo conectar con el servidor. Intenta de nuevo.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSearching(false);\n      setIsParentProcessing(false);\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"phone\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel htmlFor=\"client-phone\" className=\"flex items-center text-md\">\n                <Phone className=\"mr-2 h-5 w-5 text-primary\" />\n                N\u00famero de Tel\u00e9fono del Cliente\n              </FormLabel>\n              <FormControl>\n                <Input\n                  id=\"client-phone\"\n                  type=\"tel\"\n                  placeholder=\"Ej: 2231234567 o +5492231234567\"\n                  {...field}\n                  className=\"text-base py-3\"\n                />\n              </FormControl>\n              <FormDescription className=\"text-xs\">\n                Ingresa el n\u00famero completo, incluyendo c\u00f3digo de \u00e1rea si aplica.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" disabled={isSearching} className=\"w-full py-3 text-base bg-primary hover:bg-primary/90\">\n          {isSearching ? (\n            <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n          ) : (\n            <Search className=\"mr-2 h-5 w-5\" />\n          )}\n          {isSearching ? 'Buscando...' : 'Buscar Cliente'}\n        </Button>\n        <p className=\"text-sm text-center text-muted-foreground mt-4\">\n          Si el cliente no existe, podr\u00e1s registrarlo en el siguiente paso.\n        </p>\n      </form>\n    </Form>\n  );\n}\n"
            },
            {
              "name": "GenerarEnvioForm.tsx",
              "type": "file",
              "content": "\n'use client';\n\nimport React, { useState } from 'react';\nimport type { Client } from '@prisma/client'; \nimport { ClientSearchForm } from './ClientSearchForm';\nimport { ClientRegistrationForm } from './ClientRegistrationForm';\nimport { ShipmentCreationForm } from './ShipmentCreationForm';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, Loader2, UserPlus, UserSearch, PackagePlus } from 'lucide-react';\n\nexport type OrderWizardStep = 'search' | 'register' | 'create';\n\ninterface StepConfig {\n  title: string;\n  description: string;\n  icon: React.ElementType;\n}\n\nconst stepConfigs: Record<OrderWizardStep, StepConfig> = {\n  search: {\n    title: 'Buscar Cliente',\n    description: 'Ingresa el n\u00famero de tel\u00e9fono para buscar un cliente existente.',\n    icon: UserSearch,\n  },\n  register: {\n    title: 'Registrar Nuevo Cliente',\n    description: 'El cliente no fue encontrado. Completa los datos para registrarlo.',\n    icon: UserPlus,\n  },\n  create: {\n    title: 'Crear Env\u00edo',\n    description: 'Ingresa los detalles del env\u00edo para el cliente seleccionado.',\n    icon: PackagePlus,\n  },\n};\n\nexport function GenerarEnvioForm() {\n  const [currentStep, setCurrentStep] = useState<OrderWizardStep>('search');\n  const [selectedClient, setSelectedClient] = useState<Client | null>(null);\n  const [searchedPhone, setSearchedPhone] = useState<string | null>(null); \n  const [isProcessingStep, setIsProcessingStep] = useState(false);\n\n  const { toast } = useToast();\n\n  const handleClientFound = (client: Client) => {\n    setSelectedClient(client);\n    setCurrentStep('create');\n    // Toast moved to child component for more specific feedback\n  };\n\n  const handleClientNotFound = (phone: string) => {\n    setSearchedPhone(phone);\n    setSelectedClient(null);\n    setCurrentStep('register');\n    // Toast moved to child component\n  };\n\n  const handleClientRegistered = (client: Client) => {\n    setSelectedClient(client);\n    setCurrentStep('create');\n    // Toast moved to child component\n  };\n\n  const handleCancelRegistration = () => {\n    setSearchedPhone(null);\n    setCurrentStep('search');\n  };\n\n  const handleOrderCreated = (orderId: number) => {\n    toast({\n      title: 'Env\u00edo Creado Exitosamente',\n      description: `El env\u00edo con ID ${orderId} ha sido creado.`,\n      className: 'bg-green-100 border-green-400 text-green-700',\n      duration: 5000,\n    });\n    setCurrentStep('search');\n    setSelectedClient(null);\n    setSearchedPhone(null);\n  };\n  \n  const handleGoBackFromCreate = () => {\n    if (isProcessingStep) return;\n    setCurrentStep('search'); \n    setSelectedClient(null);\n    setSearchedPhone(null);\n  };\n\n  const CurrentStepIcon = stepConfigs[currentStep].icon;\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto shadow-xl my-8\">\n      <CardHeader className=\"bg-muted/30 p-6\">\n        <div className=\"flex items-center gap-3 mb-2\">\n          <CurrentStepIcon className=\"h-7 w-7 text-primary\" />\n          <div>\n            <CardTitle className=\"text-2xl font-bold text-primary\">\n              {stepConfigs[currentStep].title}\n            </CardTitle>\n            <CardDescription className=\"text-sm text-muted-foreground\">\n              {stepConfigs[currentStep].description}\n            </CardDescription>\n          </div>\n        </div>\n         <div className=\"flex items-center space-x-1 text-xs text-muted-foreground overflow-x-auto whitespace-nowrap py-1\">\n          <span className={`font-medium p-1 rounded-sm ${currentStep === 'search' ? 'text-primary bg-primary/10' : ''}`}>1. B\u00fasqueda</span>\n          <span>&rarr;</span>\n          <span className={`font-medium p-1 rounded-sm ${currentStep === 'register' ? 'text-primary bg-primary/10' : ''}`}>2. Registro (si aplica)</span>\n          <span>&rarr;</span>\n          <span className={`font-medium p-1 rounded-sm ${currentStep === 'create' ? 'text-primary bg-primary/10' : ''}`}>3. Creaci\u00f3n Env\u00edo</span>\n        </div>\n      </CardHeader>\n      <Separator />\n      <CardContent className=\"p-6 md:p-8\">\n        {isProcessingStep && (\n          <div className=\"flex flex-col items-center justify-center space-y-2 py-10\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            <p className=\"text-muted-foreground\">Procesando...</p>\n          </div>\n        )}\n\n        {!isProcessingStep && currentStep === 'search' && (\n          <ClientSearchForm\n            onClientFound={handleClientFound}\n            onClientNotFound={handleClientNotFound}\n            setIsParentProcessing={setIsProcessingStep}\n          />\n        )}\n\n        {!isProcessingStep && currentStep === 'register' && searchedPhone && (\n          <ClientRegistrationForm\n            initialPhone={searchedPhone}\n            onClientRegistered={handleClientRegistered}\n            onCancel={handleCancelRegistration}\n            setIsParentProcessing={setIsProcessingStep}\n          />\n        )}\n\n        {!isProcessingStep && currentStep === 'create' && (\n          <ShipmentCreationForm\n            initialClientData={selectedClient}\n            onOrderCreated={handleOrderCreated}\n            onBack={handleGoBackFromCreate} \n            setIsParentProcessing={setIsProcessingStep}\n          />\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"
            },
            {
              "name": "ShipmentCreationForm.tsx",
              "type": "file",
              "content": "\n// src/components/ordenes/ShipmentCreationForm.tsx\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport type { Client } from '@prisma/client';\nimport { ServiceTypeEnum } from '@prisma/client'; \nimport { quoteShipment, saveShipment } from '@/app/ordenes/actions';\nimport type { QuoteDetails, SaveShipmentInput } from '@/types/order-actions';\nimport { useToast } from '@/hooks/use-toast';\n\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport RouteMap from '@/components/calculator/route-map';\nimport { MapPin, Truck, Package, Calculator as CalculatorIcon, Loader2, CalendarIcon, User, Phone, Mail, Clock, PackagePlus, ArrowLeft } from 'lucide-react';\nimport { format, isValid, parse, addDays, startOfDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\n\nconst shipmentCreationZodSchema = z.object({\n  originFullName: z.string().min(3, 'Nombre del punto de recogida es requerido.'),\n  originPhone: z.string().regex(/^\\+?\\d{7,15}$/, 'Tel\u00e9fono de recogida inv\u00e1lido. Ej: 2231234567'),\n  originAddress: z.string().min(5, 'Direcci\u00f3n de recogida es requerida.'),\n  \n  destinationContactName: z.string().min(3, 'Nombre del destinatario es requerido.'),\n  destinationContactPhone: z.string().regex(/^\\+?\\d{7,15}$/, 'Tel\u00e9fono del destinatario inv\u00e1lido. Ej: 2231234567'),\n  destinationContactEmail: z.string().email('Email del destinatario inv\u00e1lido.').optional().or(z.literal('')),\n  destinationAddress: z.string().min(5, 'Direcci\u00f3n de destino es requerida.'),\n\n  serviceType: z.nativeEnum(ServiceTypeEnum), \n  pickupDate: z.date({ required_error: \"Fecha de retiro es requerida.\" }), \n  deliveryDate: z.date({ required_error: \"Fecha de entrega es requerida.\" }),\n  pickupTimeFrom: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para retiro desde.\"),\n  pickupTimeTo: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para retiro hasta.\"),\n  deliveryTimeFrom: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para entrega desde.\"),\n  deliveryTimeTo: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Formato HH:MM inv\u00e1lido para entrega hasta.\"),\n})\n.refine(data => data.pickupTimeFrom < data.pickupTimeTo, { \n  message: \"La hora 'desde' de retiro debe ser anterior a la hora 'hasta'.\", \n  path: [\"pickupTimeTo\"] \n})\n.refine(data => data.deliveryTimeFrom < data.deliveryTimeTo, { \n  message: \"La hora 'desde' de entrega debe ser anterior a la hora 'hasta'.\", \n  path: [\"deliveryTimeTo\"] \n})\n.refine(data => data.pickupDate <= data.deliveryDate, {\n    message: \"La fecha de entrega no puede ser anterior a la fecha de retiro.\",\n    path: [\"deliveryDate\"],\n})\n.refine(data => {\n    if (data.pickupDate.getTime() === data.deliveryDate.getTime()) { \n        const pickupEndMinutes = parseInt(data.pickupTimeTo.split(':')[0], 10) * 60 + parseInt(data.pickupTimeTo.split(':')[1], 10);\n        const deliveryStartMinutes = parseInt(data.deliveryTimeFrom.split(':')[0], 10) * 60 + parseInt(data.deliveryTimeFrom.split(':')[1], 10);\n        return deliveryStartMinutes > pickupEndMinutes;\n    }\n    return true;\n}, {\n    message: \"Si la entrega es el mismo d\u00eda, la hora 'desde' de entrega debe ser posterior a la hora 'hasta' de retiro.\",\n    path: [\"deliveryTimeFrom\"],\n});\n\n\ntype ShipmentCreationFormValues = z.infer<typeof shipmentCreationZodSchema>;\n\ninterface ShipmentCreationFormProps {\n  initialClientData: Client | null;\n  onOrderCreated: (orderId: number) => void;\n  onBack: () => void; \n  setIsParentProcessing: (isProcessing: boolean) => void;\n}\n\nexport function ShipmentCreationForm({ initialClientData, onOrderCreated, onBack, setIsParentProcessing }: ShipmentCreationFormProps) {\n  const [isQuoting, setIsQuoting] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [quoteDetails, setQuoteDetails] = useState<QuoteDetails | null>(null);\n  const [showMap, setShowMap] = useState(false);\n  const { toast } = useToast();\n\n  const today = useMemo(() => startOfDay(new Date()), []);\n\n  const defaultFormValues = useMemo(() => ({\n    originFullName: '',\n    originPhone: '',\n    originAddress: '',\n    destinationContactName: initialClientData?.name ? `${initialClientData.name} ${initialClientData.lastName || ''}`.trim() : '',\n    destinationContactPhone: initialClientData?.phone || '',\n    destinationContactEmail: initialClientData?.email || '',\n    destinationAddress: initialClientData?.address || '',\n    serviceType: ServiceTypeEnum.EXPRESS, \n    pickupDate: today,\n    pickupTimeFrom: '09:00',\n    pickupTimeTo: '13:00',\n    deliveryDate: today,\n    deliveryTimeFrom: '14:00',\n    deliveryTimeTo: '18:00',\n  }), [initialClientData, today]);\n\n  const form = useForm<ShipmentCreationFormValues>({\n    resolver: zodResolver(shipmentCreationZodSchema),\n    defaultValues: defaultFormValues,\n  });\n  \n  useEffect(() => {\n    form.reset(defaultFormValues);\n    setQuoteDetails(null); \n    setShowMap(false);\n  }, [defaultFormValues, form.reset]);\n\n\n  const handleCalculateQuote = async () => {\n    const isValidQuoteRequest = await form.trigger([\n        \"originAddress\", \n        \"destinationAddress\", \n        \"serviceType\"\n    ]);\n    if (!isValidQuoteRequest) {\n        toast({ title: 'Error de Validaci\u00f3n', description: 'Por favor, corrige los campos marcados antes de cotizar.', variant: 'destructive' });\n        return;\n    }\n\n    const origin = form.getValues('originAddress');\n    const destination = form.getValues('destinationAddress');\n    const service = form.getValues('serviceType');\n\n    setIsQuoting(true);\n    setShowMap(true); \n    toast({ title: 'Calculando Cotizaci\u00f3n...', description: 'Obteniendo detalles de la ruta y precio.' });\n\n    try {\n      const result = await quoteShipment({ \n        originAddress: origin, \n        destinationAddress: destination, \n        serviceType: service \n      });\n      if (result.success && result.data) {\n        setQuoteDetails(result.data);\n        const priceDisplay = result.data.price !== null ? `$${result.data.price.toLocaleString('es-AR', {minimumFractionDigits: 2, maximumFractionDigits: 2})}` : \"Consultar\";\n        toast({ title: 'Cotizaci\u00f3n Calculada', description: `Precio: ${priceDisplay}. Distancia: ${result.data.distanceText}`, variant: 'default' });\n      } else {\n        setQuoteDetails(null);\n        toast({ title: 'Error al Cotizar', description: result.error || 'No se pudo calcular la cotizaci\u00f3n.', variant: 'destructive' });\n      }\n    } catch (error) {\n      console.error('Error al cotizar:', error);\n      setQuoteDetails(null);\n      toast({ title: 'Error de Conexi\u00f3n', description: 'No se pudo conectar para cotizar. Intenta de nuevo.', variant: 'destructive' });\n    } finally {\n      setIsQuoting(false);\n    }\n  };\n  \n  const handleRouteCalculatedForQuote = (distance: string, duration: string) => {\n    // This callback is part of RouteMap, it might be used to update state if needed here\n    // But quoteShipment action handles its own logic including pricing.\n  };\n\n\n  async function onSubmit(data: ShipmentCreationFormValues) {\n    if (!quoteDetails || quoteDetails.price === null) {\n      toast({ title: 'Cotizaci\u00f3n Requerida', description: 'Debes calcular una cotizaci\u00f3n v\u00e1lida antes de crear el env\u00edo.', variant: 'destructive' });\n      return;\n    }\n\n    setIsSaving(true);\n    setIsParentProcessing(true);\n    toast({ title: 'Creando Env\u00edo...', description: 'Guardando los detalles del env\u00edo.' });\n\n    const submissionData: SaveShipmentInput = {\n      clientId: initialClientData?.id, \n      originFullName: data.originFullName,\n      originPhone: data.originPhone,\n      originAddress: data.originAddress,\n      originLat: quoteDetails.originLat, \n      originLng: quoteDetails.originLng,\n\n      destinationContactName: data.destinationContactName,\n      destinationContactPhone: data.destinationContactPhone,\n      destinationContactEmail: data.destinationContactEmail || undefined,\n      destinationAddress: data.destinationAddress,\n      destinationLat: quoteDetails.destinationLat,\n      destinationLng: quoteDetails.destinationLng,\n      \n      serviceType: data.serviceType,\n      quotedPrice: quoteDetails.price,\n      distanceText: quoteDetails.distanceText,\n      durationText: quoteDetails.durationText,\n      \n      clientNameAtOrder: data.destinationContactName,\n      clientPhoneAtOrder: data.destinationContactPhone,\n\n      pickupDate: data.pickupDate,\n      pickupTimeFrom: data.pickupTimeFrom,\n      pickupTimeTo: data.pickupTimeTo,\n      \n      deliveryDate: data.deliveryDate,\n      deliveryTimeFrom: data.deliveryTimeFrom,\n      deliveryTimeTo: data.deliveryTimeTo,\n\n      pickupDateTime: parse(`${format(data.pickupDate, 'yyyy-MM-dd')}T${data.pickupTimeFrom}:00`, \"yyyy-MM-dd'T'HH:mm:ss\", new Date()),\n      deliveryDateTime: parse(`${format(data.deliveryDate, 'yyyy-MM-dd')}T${data.deliveryTimeFrom}:00`, \"yyyy-MM-dd'T'HH:mm:ss\", new Date()),\n      \n      shippingCost: quoteDetails.price, \n      totalCost: quoteDetails.price, \n    };\n\n    try {\n      const result = await saveShipment(submissionData);\n      if (result.success && result.shipmentId) {\n        onOrderCreated(result.shipmentId);\n        form.reset(defaultFormValues); \n        setQuoteDetails(null);\n        setShowMap(false);\n      } else {\n        let errorMessage = result.error || 'Ocurri\u00f3 un error inesperado al guardar.';\n        if (result.fieldErrors) {\n          const fieldErrorMessages = result.fieldErrors.map(e => `${(e.path && e.path.length > 0) ? e.path.join('.') : 'general'}: ${e.message}`).join('; ');\n          errorMessage = `Error de validaci\u00f3n al guardar: ${fieldErrorMessages}`;\n          result.fieldErrors.forEach(err => {\n            if (err.path && err.path.length > 0 && form.getFieldState(err.path[0] as keyof ShipmentCreationFormValues)) {\n               form.setError(err.path[0] as keyof ShipmentCreationFormValues, { message: err.message });\n            }\n          });\n        }\n        toast({\n          title: 'Error al Crear Env\u00edo',\n          description: errorMessage,\n          variant: 'destructive',\n          duration: 7000,\n        });\n      }\n    } catch (error) {\n      console.error('Error al guardar env\u00edo:', error);\n      toast({\n        title: 'Error de Conexi\u00f3n',\n        description: 'No se pudo conectar para guardar el env\u00edo. Intenta de nuevo.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSaving(false);\n      setIsParentProcessing(false);\n    }\n  }\n  \n  const originAddressForMap = form.watch('originAddress');\n  const destinationAddressForMap = form.watch('destinationAddress');\n  const pickupDateValue = form.watch('pickupDate');\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        \n        {initialClientData && (\n          <Card className=\"bg-blue-50 border-blue-200 shadow-sm\">\n            <CardHeader>\n              <CardTitle className=\"text-lg text-blue-700 flex items-center\"><User className=\"mr-2 h-5 w-5\"/>Cliente Seleccionado</CardTitle>\n            </CardHeader>\n            <CardContent className=\"text-sm space-y-1 text-blue-600\">\n              <p><strong>Nombre:</strong> {initialClientData.name} {initialClientData.lastName || ''}</p>\n              <p><strong>Tel\u00e9fono:</strong> {initialClientData.phone}</p>\n              {initialClientData.email && <p><strong>Email:</strong> {initialClientData.email}</p>}\n              <p><strong>Direcci\u00f3n Registrada:</strong> {initialClientData.address}</p>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Recogida Section */}\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center text-xl\"><MapPin className=\"mr-2 h-5 w-5 text-primary\" />Detalles de Recogida</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <FormField control={form.control} name=\"originFullName\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Nombre del Contacto en Recogida *</FormLabel>\n                <FormControl><Input placeholder=\"Ej: Nombre de la tienda o persona\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <FormField control={form.control} name=\"originPhone\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Tel\u00e9fono del Contacto en Recogida *</FormLabel>\n                <FormControl><Input type=\"tel\" placeholder=\"Ej: 2231234567\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <FormField control={form.control} name=\"originAddress\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Direcci\u00f3n de Recogida *</FormLabel>\n                <FormControl><Input placeholder=\"Calle, N\u00famero, Localidad (Ej: Av. Col\u00f3n 1234, Mar del Plata)\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n              <FormField control={form.control} name=\"pickupDate\" render={({ field }) => (\n                <FormItem className=\"flex flex-col\">\n                  <FormLabel>Fecha de Retiro *</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button variant=\"outline\" className={cn(\"w-full pl-3 text-left font-normal h-10\", !field.value && \"text-muted-foreground\")}>\n                          {field.value && isValid(field.value) ? format(field.value, \"PPP\", { locale: es }) : <span>Selecciona fecha</span>}\n                          <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus disabled={(date) => date < today} />\n                    </PopoverContent>\n                  </Popover>\n                  <FormMessage />\n                </FormItem>\n              )} />\n              <FormField control={form.control} name=\"pickupTimeFrom\" render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Retiro Desde *</FormLabel>\n                  <FormControl><Input type=\"time\" {...field} className=\"h-10\"/></FormControl>\n                  <FormMessage />\n                </FormItem>\n              )} />\n              <FormField control={form.control} name=\"pickupTimeTo\" render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Retiro Hasta *</FormLabel>\n                  <FormControl><Input type=\"time\" {...field} className=\"h-10\"/></FormControl>\n                  <FormMessage />\n                </FormItem>\n              )} />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Destinatario Section */}\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center text-xl\"><User className=\"mr-2 h-5 w-5 text-primary\" />Informaci\u00f3n del Destinatario</CardTitle>\n            <CardDescription>\n              {initialClientData ? \"Datos precargados del cliente. Edita si es necesario para este env\u00edo espec\u00edfico.\" : \"Ingresa los datos del destinatario.\"}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <FormField control={form.control} name=\"destinationContactName\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Nombre Completo del Destinatario *</FormLabel>\n                <FormControl><Input placeholder=\"Nombre y Apellido\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <FormField control={form.control} name=\"destinationContactPhone\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Tel\u00e9fono del Destinatario *</FormLabel>\n                <FormControl><Input type=\"tel\" placeholder=\"Ej: 2237654321\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n             <FormField control={form.control} name=\"destinationContactEmail\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Email del Destinatario (Opcional)</FormLabel>\n                <FormControl><Input type=\"email\" placeholder=\"correo@ejemplo.com\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <FormField control={form.control} name=\"destinationAddress\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Direcci\u00f3n de Entrega *</FormLabel>\n                <FormControl><Input placeholder=\"Calle, N\u00famero, Localidad (Ej: San Mart\u00edn 5678, Mar del Plata)\" {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n              <FormField control={form.control} name=\"deliveryDate\" render={({ field }) => (\n                 <FormItem className=\"flex flex-col\">\n                  <FormLabel>Fecha de Entrega *</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button variant=\"outline\" className={cn(\"w-full pl-3 text-left font-normal h-10\", !field.value && \"text-muted-foreground\")}>\n                           {field.value && isValid(field.value) ? format(field.value, \"PPP\", { locale: es }) : <span>Selecciona fecha</span>}\n                          <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar mode=\"single\" selected={field.value} onSelect={field.onChange} initialFocus disabled={(date) => date < (pickupDateValue || today)} />\n                    </PopoverContent>\n                  </Popover>\n                  <FormMessage />\n                </FormItem>\n              )} />\n              <FormField control={form.control} name=\"deliveryTimeFrom\" render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Entrega Desde *</FormLabel>\n                  <FormControl><Input type=\"time\" {...field} className=\"h-10\"/></FormControl>\n                  <FormMessage />\n                </FormItem>\n              )} />\n              <FormField control={form.control} name=\"deliveryTimeTo\" render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Entrega Hasta *</FormLabel>\n                  <FormControl><Input type=\"time\" {...field} className=\"h-10\"/></FormControl>\n                  <FormMessage />\n                </FormItem>\n              )} />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Servicio y Cotizacion Section */}\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center text-xl\"><Truck className=\"mr-2 h-5 w-5 text-primary\" />Tipo de Servicio y Cotizaci\u00f3n</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <FormField control={form.control} name=\"serviceType\" render={({ field }) => (\n              <FormItem>\n                <FormLabel>Tipo de Servicio *</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                  <FormControl><SelectTrigger className=\"h-10\"><SelectValue placeholder=\"Selecciona un tipo de servicio\" /></SelectTrigger></FormControl>\n                  <SelectContent>\n                    <SelectItem value={ServiceTypeEnum.EXPRESS}>Express (Entrega R\u00e1pida)</SelectItem>\n                    <SelectItem value={ServiceTypeEnum.LOW_COST}>Low Cost (Econ\u00f3mico)</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )} />\n            <Button type=\"button\" onClick={handleCalculateQuote} \n            disabled={isQuoting || !originAddressForMap || !destinationAddressForMap} className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground h-10\">\n              {isQuoting ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <CalculatorIcon className=\"mr-2 h-4 w-4\" />}\n              {isQuoting ? 'Calculando...' : 'Calcular Ruta y Precio'}\n            </Button>\n          </CardContent>\n        </Card>\n        \n        {showMap && originAddressForMap && destinationAddressForMap && (\n          <div className=\"rounded-lg overflow-hidden shadow-md\">\n            <RouteMap\n              originAddress={originAddressForMap}\n              destinationAddress={destinationAddressForMap}\n              isCalculating={isQuoting} \n              onRouteCalculated={handleRouteCalculatedForQuote} \n            />\n          </div>\n        )}\n\n        {quoteDetails && !isQuoting && (\n            <Card className={`mt-6 shadow-md ${quoteDetails.price === null  ? \"bg-orange-50 border-orange-300\" : \"bg-green-50 border-green-300\"}`}>\n            <CardHeader>\n                <CardTitle className={`flex items-center text-lg ${quoteDetails.price === null ? \"text-orange-700\" : \"text-green-700\"}`}>\n                <Package className=\"mr-2 h-5 w-5\" /> Cotizaci\u00f3n del Env\u00edo\n                </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\"><span>Distancia:</span> <span className=\"font-semibold\">{quoteDetails.distanceText}</span></div>\n                <div className=\"flex justify-between\"><span>Tiempo Estimado:</span> <span className=\"font-semibold\">{quoteDetails.durationText}</span></div>\n                <div className=\"flex justify-between items-baseline pt-2 border-t mt-2\">\n                    <span className=\"text-base\">Precio Estimado:</span> \n                    <span className={`text-xl font-bold ${quoteDetails.price === null ? \"text-orange-600\" : \"text-green-600\"}`}>\n                        {quoteDetails.price !== null ? `$${quoteDetails.price.toLocaleString('es-AR', {minimumFractionDigits: 2, maximumFractionDigits: 2})}` : \"Consultar\"}\n                    </span>\n                </div>\n                {quoteDetails.price === null && (\n                <p className=\"text-xs text-orange-600 mt-1 text-center\">\n                    Distancia fuera de rango para cotizaci\u00f3n autom\u00e1tica o error en c\u00e1lculo. Por favor, contacta para confirmar precio.\n                </p>\n                )}\n            </CardContent>\n            </Card>\n        )}\n\n        <div className=\"flex flex-col sm:flex-row gap-4 pt-6 border-t\">\n          <Button type=\"button\" onClick={onBack} variant=\"outline\" className=\"w-full sm:w-auto h-10\" disabled={isSaving || isQuoting}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Volver\n          </Button>\n          <Button type=\"submit\" disabled={isSaving || isQuoting || !quoteDetails || quoteDetails.price === null} className=\"w-full sm:flex-1 bg-primary hover:bg-primary/90 h-10\">\n            {isSaving ? <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" /> : <PackagePlus className=\"mr-2 h-5 w-5\" />}\n            {isSaving ? 'Guardando Env\u00edo...' : 'Confirmar y Guardar Env\u00edo'}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "order-summary.tsx",
          "type": "file",
          "content": "\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Clock, Loader2, MapPin, User, Phone, Mail, DollarSign, FileText } from \"lucide-react\";\n\ninterface OrderSummaryProps {\n  pickupFullAddress: string;\n  pickupContactName: string;\n  pickupPhoneNumber: string;\n  pickupFormattedDateTime: string;\n\n  deliveryFullAddress: string;\n  deliveryContactName: string;\n  deliveryPhoneNumber: string;\n  deliveryEmail?: string;\n  deliveryFormattedDateTime: string;\n\n  distance: string;\n  deliveryNoteText: string;\n  shippingCostFormatted: string;\n  deliveryTipFormatted: string;\n  totalCostFormatted: string;\n\n  onMakeOrder: () => void;\n  isSubmitting?: boolean;\n}\n\nexport function OrderSummary({\n  pickupFullAddress,\n  pickupContactName,\n  pickupPhoneNumber,\n  pickupFormattedDateTime,\n  deliveryFullAddress,\n  deliveryContactName,\n  deliveryPhoneNumber,\n  deliveryEmail,\n  deliveryFormattedDateTime,\n  distance,\n  deliveryNoteText,\n  shippingCostFormatted,\n  deliveryTipFormatted,\n  totalCostFormatted,\n  onMakeOrder,\n  isSubmitting = false,\n}: OrderSummaryProps) {\n  return (\n    <div className=\"bg-white shadow-sm border border-gray-200 rounded-lg p-6 mb-4 space-y-6\">\n      <div>\n        <h3 className=\"pb-3 block text-sm font-semibold text-gray-900\">\n          DETALLES DE RECOGIDA\n        </h3>\n        <div className=\"space-y-2 text-gray-700\">\n          <div className=\"flex items-center\">\n            <MapPin className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span>{pickupFullAddress}</span>\n          </div>\n          <div className=\"flex items-center\">\n            <User className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span>{pickupContactName}</span>\n          </div>\n          <div className=\"flex items-center\">\n            <Phone className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span>{pickupPhoneNumber}</span>\n          </div>\n          <div className=\"flex items-center\">\n            <Clock className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span className=\"font-medium\">{pickupFormattedDateTime}</span>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div>\n        <h3 className=\"pb-3 block text-sm font-semibold text-gray-900\">\n          DETALLES DE LA ENTREGA\n        </h3>\n        <div className=\"space-y-2 text-gray-700\">\n          <div className=\"flex items-center\">\n            <MapPin className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span>{deliveryFullAddress}</span>\n          </div>\n          <div className=\"flex items-center\">\n            <User className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span>{deliveryContactName}</span>\n          </div>\n          <div className=\"flex items-center\">\n            <Phone className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span>{deliveryPhoneNumber}</span>\n          </div>\n          {deliveryEmail && (\n            <div className=\"flex items-center\">\n              <Mail className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n              <span>{deliveryEmail}</span>\n            </div>\n          )}\n          <div className=\"flex items-center\">\n            <Clock className=\"w-4 h-4 mr-3 text-gray-500 flex-shrink-0\" />\n            <span className=\"font-medium\">{deliveryFormattedDateTime}</span>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div>\n        <h3 className=\"pb-3 block text-sm font-semibold text-gray-900\">\n          RESUMEN DEL PEDIDO\n        </h3>\n        <div className=\"space-y-2 text-gray-700\">\n          <div className=\"flex justify-between\">\n            <span>Distancia:</span>\n            <span className=\"font-medium\">{distance}</span>\n          </div>\n          <div className=\"flex justify-between items-start\">\n            <span className=\"flex-shrink-0 mr-2\">Nota de entrega:</span>\n            <span className=\"font-medium text-right break-all\">{deliveryNoteText || \"-\"}</span>\n          </div>\n        </div>\n      </div>\n      \n      <hr />\n\n      <div className=\"space-y-2 text-gray-700\">\n        <div className=\"flex justify-between\">\n          <span>Costes de env\u00edo</span>\n          <span className=\"font-medium\">{shippingCostFormatted}</span>\n        </div>\n        <div className=\"flex justify-between\">\n          <span>Propina de entrega</span>\n          <span className=\"font-medium\">{deliveryTipFormatted}</span>\n        </div>\n        <div className=\"flex justify-between text-lg font-semibold text-gray-900\">\n          <span>Total</span>\n          <span>{totalCostFormatted}</span>\n        </div>\n      </div>\n\n      <div className=\"text-center mt-8 mb-2 mx-2\">\n        <Button\n          type=\"button\"\n          onClick={onMakeOrder}\n          disabled={isSubmitting}\n          className=\"bg-primary hover:bg-primary/90 text-primary-foreground px-8 py-3 w-full text-base font-semibold rounded-lg\"\n        >\n          {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          {isSubmitting ? \"Procesando...\" : \"Hacer pedido\"}\n        </Button>\n      </div>\n    </div>\n  );\n}"
        },
        {
          "name": "pickup-form.tsx",
          "type": "file",
          "content": "\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport Image from \"next/image\";\nimport type { Dispatch, SetStateAction } from 'react';\n\ninterface PickupFormProps {\n  pickupFullName: string;\n  setPickupFullName: Dispatch<SetStateAction<string>>;\n  phoneNumber: string;\n  setPhoneNumber: Dispatch<SetStateAction<string>>;\n  pickupStreetAddress: string;\n  setPickupStreetAddress: Dispatch<SetStateAction<string>>;\n  pickupTime: string;\n  setPickupTime: Dispatch<SetStateAction<string>>;\n  rememberInfo: boolean;\n  setRememberInfo: Dispatch<SetStateAction<boolean>>;\n}\n\nexport function PickupForm({\n  pickupFullName,\n  setPickupFullName,\n  phoneNumber,\n  setPhoneNumber,\n  pickupStreetAddress,\n  setPickupStreetAddress,\n  pickupTime,\n  setPickupTime,\n  rememberInfo,\n  setRememberInfo,\n}: PickupFormProps) {\n  return (\n    <div className=\"bg-white shadow-sm border border-gray-200 rounded-lg p-4 sm:p-6 mb-4\">\n      <label className=\"pb-3 block text-sm font-semibold text-gray-900\">\n        RECOGIDA DESDE\n      </label>\n      <div className=\"space-y-4\">\n        <Input\n          type=\"text\"\n          required\n          value={pickupFullName}\n          onChange={(e) => setPickupFullName(e.target.value)}\n          placeholder=\"Nombre completo del punto de recogida/persona\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <Input\n          type=\"tel\"\n          required\n          value={phoneNumber}\n          onChange={(e) => setPhoneNumber(e.target.value)}\n          placeholder=\"N\u00famero de tel\u00e9fono del punto de recogida/persona\"\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n        <div className=\"flex flex-col sm:flex-row gap-2\">\n          <Input\n            type=\"text\"\n            required\n            value={pickupStreetAddress}\n            onChange={(e) => setPickupStreetAddress(e.target.value)}\n            placeholder=\"Direcci\u00f3n de la calle del punto de recogida/persona\"\n            className=\"flex-1 border-gray-300 focus:border-primary focus:ring-primary\"\n          />\n           <Button\n            type=\"button\"\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"border-gray-300 hover:border-gray-400 self-start w-full sm:w-auto\"\n            title=\"Ubicar en mapa\"\n          >\n            <Image\n              src=\"https://ext.same-assets.com/4138676004/439059459.svg\"\n              alt=\"Ubicar en mapa\"\n              width={24}\n              height={24}\n              data-ai-hint=\"location pin\"\n            />\n            <span className=\"ml-2 sm:hidden\">Ubicar en mapa</span>\n          </Button>\n        </div>\n        <Input\n          type=\"time\"\n          required\n          value={pickupTime}\n          onChange={(e) => setPickupTime(e.target.value)}\n          className=\"w-full border-gray-300 focus:border-primary focus:ring-primary\"\n        />\n      </div>\n      <div className=\"mt-4 flex items-center space-x-2\">\n        <Checkbox\n          id=\"remember-pickup\"\n          checked={rememberInfo}\n          onCheckedChange={(checked) => setRememberInfo(checked === true)}\n        />\n        <label\n          htmlFor=\"remember-pickup\"\n          className=\"text-sm text-gray-700 leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n        >\n          Recordar informaci\u00f3n de lugar de recogida\n        </label>\n      </div>\n    </div>\n  );\n}"
        },
        {
          "name": "sections",
          "type": "directory",
          "children": [
            {
              "name": "ai-summary-section.tsx",
              "type": "file",
              "content": "// @ts-nocheck\n// TODO: Fix typescript errors\n'use client';\n\nimport { useEffect, useActionState } from 'react'; // Changed import\nimport { useFormStatus } from 'react-dom';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Sparkles, Brain } from 'lucide-react';\nimport { generateTestimonialSummary } from '@/app/actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\nconst initialState = {\n  summary: undefined,\n  error: undefined,\n  fieldErrors: {},\n  formError: undefined,\n  timestamp: Date.now(),\n};\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground\">\n      {pending ? (\n        <>\n          <Sparkles className=\"mr-2 h-4 w-4 animate-spin\" />\n          Generando...\n        </>\n      ) : (\n        <>\n          <Brain className=\"mr-2 h-4 w-4\" />\n          Generar Resumen\n        </>\n      )}\n    </Button>\n  );\n}\n\nexport function AiSummarySection() {\n  const [state, formAction] = useActionState(generateTestimonialSummary, initialState); // Changed to useActionState\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (state?.error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error en el Resumen\",\n        description: state.error,\n      });\n    }\n    if (state?.formError) {\n       toast({\n        variant: \"destructive\",\n        title: \"Error en el Formulario\",\n        description: state.formError,\n      });\n    }\n  }, [state, toast]);\n\n  return (\n    <section id=\"ai-summary\" className=\"py-16 md:py-24 bg-primary/5\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold font-headline text-primary\">Resumen Inteligente de Testimonios</h2>\n          <p className=\"text-lg text-muted-foreground mt-2\">\n            \u00bfTienes un testimonio largo? Nuestra IA lo resume para ti destacando lo esencial.\n          </p>\n        </div>\n        <Card className=\"max-w-2xl mx-auto shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><Sparkles className=\"h-6 w-6 text-primary\"/> Analiza Testimonios con IA</CardTitle>\n            <CardDescription>\n              Pega un testimonio extenso en el campo de abajo y obt\u00e9n un resumen conciso.\n            </CardDescription>\n          </CardHeader>\n          <form action={formAction}>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"testimonials-input\">Testimonio del Cliente</Label>\n                <Textarea\n                  id=\"testimonials-input\"\n                  name=\"testimonials\"\n                  placeholder=\"Escribe o pega aqu\u00ed el testimonio completo del cliente...\"\n                  rows={6}\n                  className=\"mt-1\"\n                  aria-describedby=\"testimonials-error\"\n                />\n                {state?.fieldErrors?.testimonials && (\n                  <p id=\"testimonials-error\" className=\"text-sm text-destructive mt-1\">\n                    {state.fieldErrors.testimonials.join(', ')}\n                  </p>\n                )}\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex flex-col items-stretch gap-4\">\n              <SubmitButton />\n              {state?.summary && (\n                <Alert variant=\"default\" className=\"mt-4 bg-green-50 border-green-300\">\n                   <Sparkles className=\"h-5 w-5 text-green-600\" />\n                  <AlertTitle className=\"text-green-700 font-semibold\">Resumen Generado por IA:</AlertTitle>\n                  <AlertDescription className=\"text-green-600\">\n                    {state.summary}\n                  </AlertDescription>\n                </Alert>\n              )}\n            </CardFooter>\n          </form>\n        </Card>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "calculator-section.tsx",
              "type": "file",
              "content": "'use client';\n\nimport { useState, type FormEvent } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Calculator, DollarSign } from 'lucide-react';\n\nexport function CalculatorSection() {\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  const [weight, setWeight] = useState('');\n  const [length, setLength] = useState('');\n  const [width, setWidth] = useState('');\n  const [height, setHeight] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState<number | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const calculateCost = (e: FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setEstimatedCost(null);\n\n    const numWeight = parseFloat(weight);\n    const numLength = parseFloat(length);\n    const numWidth = parseFloat(width);\n    const numHeight = parseFloat(height);\n\n    if (isNaN(numWeight) || numWeight <= 0 ||\n        (length && (isNaN(numLength) || numLength <= 0)) ||\n        (width && (isNaN(numWidth) || numWidth <= 0)) ||\n        (height && (isNaN(numHeight) || numHeight <= 0))) {\n      setError('Por favor, introduce valores v\u00e1lidos para peso y dimensiones (si aplican). El peso debe ser mayor a 0.');\n      return;\n    }\n    if (!origin.trim() || !destination.trim()) {\n      setError('Por favor, introduce origen y destino.');\n      return;\n    }\n\n\n    // Simple calculation logic (example)\n    // Base rate: $50\n    // Weight factor: $10 per kg\n    // Size factor: $0.01 per cm\u00b3 (if dimensions provided)\n    let cost = 50;\n    cost += numWeight * 10;\n\n    if (numLength && numWidth && numHeight) {\n      const volume = numLength * numWidth * numHeight;\n      cost += volume * 0.01;\n    }\n    \n    // Simulate distance factor based on string length (very naive)\n    const distanceFactor = (origin.length + destination.length) * 0.5;\n    cost += distanceFactor;\n\n\n    setEstimatedCost(parseFloat(cost.toFixed(2)));\n  };\n\n  return (\n    <section id=\"calculator\" className=\"py-16 md:py-24 bg-primary/5\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold font-headline text-primary\">Calculadora de Costos de Env\u00edo</h2>\n          <p className=\"text-lg text-muted-foreground mt-2\">Obt\u00e9n una estimaci\u00f3n instant\u00e1nea para tu env\u00edo.</p>\n        </div>\n        <Card className=\"max-w-2xl mx-auto shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><Calculator className=\"h-6 w-6 text-primary\"/> Ingresa los Detalles del Env\u00edo</CardTitle>\n            <CardDescription>Completa los campos para estimar el costo.</CardDescription>\n          </CardHeader>\n          <form onSubmit={calculateCost}>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"origin\">Origen</Label>\n                  <Input id=\"origin\" placeholder=\"Ciudad, C\u00f3digo Postal\" value={origin} onChange={(e) => setOrigin(e.target.value)} required />\n                </div>\n                <div>\n                  <Label htmlFor=\"destination\">Destino</Label>\n                  <Input id=\"destination\" placeholder=\"Ciudad, C\u00f3digo Postal\" value={destination} onChange={(e) => setDestination(e.target.value)} required />\n                </div>\n              </div>\n              <div>\n                <Label htmlFor=\"weight\">Peso (kg)</Label>\n                <Input id=\"weight\" type=\"number\" placeholder=\"Ej: 2.5\" value={weight} onChange={(e) => setWeight(e.target.value)} required step=\"0.1\" min=\"0.1\" />\n              </div>\n              <p className=\"text-sm text-muted-foreground\">Dimensiones del paquete (opcional, en cm):</p>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div>\n                  <Label htmlFor=\"length\">Largo</Label>\n                  <Input id=\"length\" type=\"number\" placeholder=\"Ej: 30\" value={length} onChange={(e) => setLength(e.target.value)} step=\"0.1\" min=\"0\" />\n                </div>\n                <div>\n                  <Label htmlFor=\"width\">Ancho</Label>\n                  <Input id=\"width\" type=\"number\" placeholder=\"Ej: 20\" value={width} onChange={(e) => setWidth(e.target.value)} step=\"0.1\" min=\"0\" />\n                </div>\n                <div>\n                  <Label htmlFor=\"height\">Alto</Label>\n                  <Input id=\"height\" type=\"number\" placeholder=\"Ej: 10\" value={height} onChange={(e) => setHeight(e.target.value)} step=\"0.1\" min=\"0\"/>\n                </div>\n              </div>\n              {error && <p className=\"text-destructive text-sm\">{error}</p>}\n            </CardContent>\n            <CardFooter className=\"flex flex-col items-stretch gap-4\">\n              <Button type=\"submit\" className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground\">Calcular Estimado</Button>\n              {estimatedCost !== null && (\n                <div className=\"text-center p-4 bg-primary/10 rounded-md\">\n                  <p className=\"text-lg font-semibold text-primary\">Costo Estimado:</p>\n                  <p className=\"text-3xl font-bold text-primary flex items-center justify-center gap-1\">\n                    <DollarSign className=\"h-7 w-7\"/>{estimatedCost.toLocaleString('es-MX', { style: 'currency', currency: 'MXN' })}\n                  </p>\n                </div>\n              )}\n            </CardFooter>\n          </form>\n        </Card>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "contact-section.tsx",
              "type": "file",
              "content": "// @ts-nocheck\n// TODO: Fix typescript errors\n'use client';\n\nimport { useEffect, useActionState } from 'react'; // Changed import\nimport { useFormStatus } from 'react-dom';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport * as z from 'zod';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\n// Label is imported via FormLabel\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Phone, Mail, MapPin, Send } from 'lucide-react';\nimport { submitContactForm } from '@/app/actions';\nimport { useToast } from '@/hooks/use-toast';\n// Alert components are not used here, so imports can be removed if they were just for this file.\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, { message: 'El nombre es requerido y debe tener al menos 2 caracteres.' }),\n  email: z.string().email({ message: 'Por favor, introduce un email v\u00e1lido.' }),\n  message: z.string().min(10, { message: 'El mensaje debe tener al menos 10 caracteres.' }).max(1000, { message: 'El mensaje no debe exceder los 1000 caracteres.'}),\n});\n\ntype ContactFormValues = z.infer<typeof contactFormSchema>;\n\nconst initialState = {\n  message: undefined,\n  error: undefined,\n  fieldErrors: {},\n  formError: undefined,\n  timestamp: Date.now(),\n};\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground\">\n      {pending ? (\n        <>\n          <Send className=\"mr-2 h-4 w-4 animate-pulse\" />\n          Enviando...\n        </>\n      ) : (\n        <>\n          <Send className=\"mr-2 h-4 w-4\" />\n          Enviar Mensaje\n        </>\n      )}\n    </Button>\n  );\n}\n\nexport function ContactSection() {\n  const [state, formAction] = useActionState(submitContactForm, initialState); // Changed to useActionState\n  const { toast } = useToast();\n\n  const form = useForm<ContactFormValues>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: '',\n      email: '',\n      message: '',\n    },\n    // Pass the server state to react-hook-form to display errors\n    errors: state?.fieldErrors ? state.fieldErrors as any : {},\n  });\n\n   useEffect(() => {\n    if (state?.message) {\n      toast({\n        title: \"Mensaje Enviado\",\n        description: state.message,\n        className: \"bg-green-100 border-green-400 text-green-700\",\n      });\n      form.reset(); // Reset form on successful submission\n    }\n    if (state?.error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error al Enviar\",\n        description: state.error,\n      });\n    }\n    if (state?.formError) {\n       toast({\n        variant: \"destructive\",\n        title: \"Error en el Formulario\",\n        description: state.formError,\n      });\n    }\n    // Update form errors if they come from server action\n    if (state?.fieldErrors) {\n      const fieldErrors = state.fieldErrors;\n      (Object.keys(fieldErrors) as Array<keyof ContactFormValues>).forEach((key) => {\n        form.setError(key, { type: 'server', message: fieldErrors[key]?.join(', ') });\n      });\n    }\n\n  }, [state, toast, form]);\n\n\n  return (\n    <section id=\"contact\" className=\"py-16 md:py-24 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold font-headline text-primary\">Cont\u00e1ctanos</h2>\n          <p className=\"text-lg text-muted-foreground mt-2\">\n            Estamos aqu\u00ed para ayudarte. Env\u00edanos tus preguntas o solicitudes.\n          </p>\n        </div>\n        <div className=\"grid md:grid-cols-2 gap-12 items-start\">\n          <Card className=\"shadow-xl\">\n            <CardHeader>\n              <CardTitle>Env\u00edanos un Mensaje</CardTitle>\n              <CardDescription>Completa el formulario y te responderemos a la brevedad.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Form {...form}>\n                <form action={formAction} className=\"space-y-6\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Nombre Completo</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"Tu Nombre\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Correo Electr\u00f3nico</FormLabel>\n                        <FormControl>\n                          <Input type=\"email\" placeholder=\"tu@email.com\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Mensaje</FormLabel>\n                        <FormControl>\n                          <Textarea placeholder=\"Escribe tu consulta aqu\u00ed...\" rows={5} {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <SubmitButton />\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n\n          <div className=\"space-y-8\">\n            <Card className=\"shadow-lg\">\n              <CardHeader>\n                <CardTitle>Informaci\u00f3n de Contacto</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-start gap-4\">\n                  <Phone className=\"h-6 w-6 text-primary mt-1 shrink-0\" />\n                  <div>\n                    <h4 className=\"font-semibold\">Tel\u00e9fono</h4>\n                    <a href=\"tel:+525512345678\" className=\"text-muted-foreground hover:text-primary transition-colors\">+52 55 1234 5678</a>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-4\">\n                  <Mail className=\"h-6 w-6 text-primary mt-1 shrink-0\" />\n                  <div>\n                    <h4 className=\"font-semibold\">Correo Electr\u00f3nico</h4>\n                    <a href=\"mailto:matiascejas@enviosdosruedas.com\" className=\"text-muted-foreground hover:text-primary transition-colors\">matiascejas@enviosdosruedas.com</a>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-4\">\n                  <MapPin className=\"h-6 w-6 text-primary mt-1 shrink-0\" />\n                  <div>\n                    <h4 className=\"font-semibold\">Direcci\u00f3n</h4>\n                    <p className=\"text-muted-foreground\">Av. Siempreviva 742, Col. Springfield, CDMX, M\u00e9xico</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n            <div className=\"aspect-video rounded-lg overflow-hidden shadow-lg\">\n                 <iframe \n                    src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3762.580500834828!2d-99.16000000000001!3d19.430000000000003!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x85d1f8d0e9f9e9f9%3A0x0!2sMonumento%20a%20la%20Revoluci%C3%B3n!5e0!3m2!1ses!2smx!4v1620000000000!5m2!1ses!2smx\" \n                    width=\"100%\" \n                    height=\"100%\" \n                    style={{border:0}} \n                    allowFullScreen={false} \n                    loading=\"lazy\" \n                    referrerPolicy=\"no-referrer-when-downgrade\"\n                    title=\"Ubicaci\u00f3n de Envios DosRuedas 1806\">\n                </iframe>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "cta-section.tsx",
              "type": "file",
              "content": "\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { ArrowRight } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nexport function CtaSection() {\n  return (\n    <section id=\"cta\" className=\"py-20 md:py-24 bg-slate-100 dark:bg-slate-900\">\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.3 }}\n          transition={{ duration: 0.6, ease: \"easeOut\" }}\n        >\n          <Card className=\"overflow-hidden\">\n            <div className=\"grid md:grid-cols-2 items-center\">\n              {/* Columna de Texto */}\n              <div className=\"p-8 md:p-10 lg:p-12\">\n                <h2 className=\"text-3xl md:text-4xl font-bold font-heading text-foreground mb-4\">\n                  \u00bfListos para tu Pr\u00f3ximo Env\u00edo?\n                </h2>\n                <p className=\"text-base md:text-lg text-muted-foreground mb-8 max-w-md\">\n                  En Envios DosRuedas estamos listos para ayudarte con tus\n                  necesidades de mensajer\u00eda y paqueter\u00eda. Cont\u00e1ctanos hoy\n                  mismo o calcula tu env\u00edo.\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <Button\n                    asChild\n                    size=\"lg\"\n                    variant=\"secondary\"\n                    className=\"font-bold shadow-lg transform hover:scale-105 transition-transform\"\n                  >\n                    <Link href=\"/cotizar/express\">\n                      Solicitar Cotizaci\u00f3n\n                      <ArrowRight className=\"ml-2 h-5 w-5\" />\n                    </Link>\n                  </Button>\n                  <Button\n                    asChild\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"shadow-lg transform hover:scale-105 transition-transform\"\n                  >\n                    <Link href=\"/servicios/envios-express\">\n                      Explorar Servicios\n                    </Link>\n                  </Button>\n                </div>\n              </div>\n\n              {/* Columna de Imagen */}\n              <div className=\"relative h-64 md:h-full w-full\">\n                <Image\n                  src=\"/servicios/moto-cta.jpg\"\n                  alt=\"Repartidor en moto listo para una entrega\"\n                  fill\n                  sizes=\"(max-width: 768px) 100vw, 50vw\"\n                  className=\"object-cover\"\n                  data-ai-hint=\"delivery motorcycle\"\n                />\n              </div>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "hero-section.tsx",
              "type": "file",
              "content": "import { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport Image from 'next/image';\n\nexport function HeroSection() {\n  return (\n    <section className=\"bg-gradient-to-br from-primary/10 via-background to-background py-16 md:py-24\">\n      <div className=\"container mx-auto px-4 grid md:grid-cols-2 gap-8 items-center\">\n        <div className=\"text-center md:text-left\">\n          <h2 className=\"text-4xl md:text-5xl font-bold font-headline text-primary mb-6\">\n            Envios DosRuedas 1806\n          </h2>\n          <p className=\"text-lg text-foreground mb-4\">\n            Tu Aliado en Entregas R\u00e1pidas y Seguras en la Ciudad.\n          </p>\n          <p className=\"text-md text-muted-foreground mb-8\">\n            Soluciones de mensajer\u00eda y paqueter\u00eda \u00e1giles, confiables y ecol\u00f3gicas, adaptadas a tus necesidades.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center md:justify-start\">\n            <Button asChild size=\"lg\" className=\"bg-accent hover:bg-accent/90 text-accent-foreground\">\n              <Link href=\"#calculator\">Cotiza tu Env\u00edo Ahora</Link>\n            </Button>\n            <Button asChild variant=\"outline\" size=\"lg\" className=\"border-primary text-primary hover:bg-primary/10\">\n              <Link href=\"#services\">Ver Servicios</Link>\n            </Button>\n          </div>\n        </div>\n        <div className=\"relative h-64 md:h-96 rounded-lg overflow-hidden shadow-xl\">\n            <Image \n              src=\"https://placehold.co/600x400.png\" \n              alt=\"Entrega en bicicleta por la ciudad\" \n              layout=\"fill\"\n              objectFit=\"cover\"\n              className=\"transform hover:scale-105 transition-transform duration-300 ease-in-out\"\n              data-ai-hint=\"city delivery bicycle\"\n            />\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "services-section.tsx",
              "type": "file",
              "content": "import { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Bike, CalendarClock, FileText, Package, Zap } from \"lucide-react\";\n\nconst services = [\n  {\n    icon: <Bike className=\"h-10 w-10 text-primary mb-4\" />,\n    title: \"Entrega Express en Bicicleta\",\n    description: \"Para paquetes peque\u00f1os y prioritarios en la ciudad. R\u00e1pido, ecol\u00f3gico y eficiente.\",\n  },\n  {\n    icon: <CalendarClock className=\"h-10 w-10 text-primary mb-4\" />,\n    title: \"Mensajer\u00eda Programada\",\n    description: \"Planifica tus env\u00edos recurrentes o importantes con antelaci\u00f3n para tu total tranquilidad.\",\n  },\n  {\n    icon: <FileText className=\"h-10 w-10 text-primary mb-4\" />,\n    title: \"Gesti\u00f3n de Documentos\",\n    description: \"Entrega segura y confidencial de documentos importantes, contratos y m\u00e1s.\",\n  },\n  {\n    icon: <Package className=\"h-10 w-10 text-primary mb-4\" />,\n    title: \"Paqueter\u00eda Ligera\",\n    description: \"Env\u00edos de paquetes de hasta 5kg dentro de la zona metropolitana con seguimiento en tiempo real.\",\n  },\n];\n\nexport function ServicesSection() {\n  return (\n    <section id=\"services\" className=\"py-16 md:py-24 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold font-headline text-primary\">Nuestros Servicios</h2>\n          <p className=\"text-lg text-muted-foreground mt-2\">Soluciones de entrega adaptadas a cada necesidad.</p>\n        </div>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {services.map((service) => (\n            <Card key={service.title} className=\"shadow-lg hover:shadow-xl transition-shadow duration-300 flex flex-col\">\n              <CardHeader className=\"items-center text-center\">\n                {service.icon}\n                <CardTitle className=\"font-headline text-xl\">{service.title}</CardTitle>\n              </CardHeader>\n              <CardContent className=\"text-center flex-grow\">\n                <CardDescription>{service.description}</CardDescription>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "trust-section.tsx",
              "type": "file",
              "content": "import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Star, ThumbsUp, PackageCheck, Smile, Award, Leaf, Quote } from \"lucide-react\";\n\nconst testimonials = [\n  {\n    name: \"Ana P\u00e9rez\",\n    avatar: \"AP\",\n    image: \"https://placehold.co/100x100.png\",\n    imageHint: \"woman portrait\",\n    quote: \"\u00a1Servicio incre\u00edblemente r\u00e1pido y confiable! Siempre a tiempo y con una sonrisa. Los recomiendo totalmente.\",\n    rating: 5,\n  },\n  {\n    name: \"Carlos L\u00f3pez\",\n    avatar: \"CL\",\n    image: \"https://placehold.co/100x100.png\",\n    imageHint: \"man portrait\",\n    quote: \"La mejor opci\u00f3n para env\u00edos en la ciudad. Muy profesionales y cuidadosos con los paquetes.\",\n    rating: 5,\n  },\n  {\n    name: \"Laura G\u00f3mez\",\n    avatar: \"LG\",\n    image: \"https://placehold.co/100x100.png\",\n    imageHint: \"person smiling\",\n    quote: \"Excelente atenci\u00f3n al cliente y mis paquetes siempre llegan en perfecto estado. \u00a1Gracias Envios DosRuedas!\",\n    rating: 4,\n  },\n];\n\nconst stats = [\n  { icon: <PackageCheck className=\"h-8 w-8 text-primary\" />, value: \"5,000+\", label: \"Entregas Exitosas\" },\n  { icon: <Smile className=\"h-8 w-8 text-primary\" />, value: \"98%\", label: \"Clientes Satisfechos\" },\n  { icon: <Award className=\"h-8 w-8 text-primary\" />, value: \"5+\", label: \"A\u00f1os de Experiencia\" },\n  { icon: <Leaf className=\"h-8 w-8 text-primary\" />, value: \"100%\", label: \"Env\u00edos Ecol\u00f3gicos\" },\n];\n\nexport function TrustSection() {\n  return (\n    <section id=\"trust\" className=\"py-16 md:py-24 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold font-headline text-primary\">Nuestros Clientes Conf\u00edan en Nosotros</h2>\n          <p className=\"text-lg text-muted-foreground mt-2\">Descubre por qu\u00e9 somos la opci\u00f3n preferida para env\u00edos.</p>\n        </div>\n\n        <div className=\"mb-16\">\n          <h3 className=\"text-2xl font-semibold text-center mb-8 text-foreground/80\">Testimonios Reales</h3>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {testimonials.map((testimonial, index) => (\n              <Card key={index} className=\"shadow-lg hover:shadow-xl transition-shadow duration-300 flex flex-col\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Avatar>\n                      <AvatarImage src={testimonial.image} alt={testimonial.name} data-ai-hint={testimonial.imageHint} />\n                      <AvatarFallback>{testimonial.avatar}</AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <CardTitle className=\"text-lg\">{testimonial.name}</CardTitle>\n                      <div className=\"flex items-center mt-1\">\n                        {Array(5).fill(0).map((_, i) => (\n                          <Star key={i} className={`h-4 w-4 ${i < testimonial.rating ? 'text-accent fill-accent' : 'text-muted-foreground/50'}`} />\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"text-sm text-muted-foreground flex-grow relative pt-0\">\n                  <Quote className=\"absolute top-0 left-0 h-8 w-8 text-primary/20 transform -translate-x-2 -translate-y-2\" />\n                  <p className=\"italic relative z-10\">{testimonial.quote}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <h3 className=\"text-2xl font-semibold text-center mb-8 text-foreground/80\">Nuestros Logros en N\u00fameros</h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {stats.map((stat) => (\n              <Card key={stat.label} className=\"text-center p-6 shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex justify-center mb-3\">{stat.icon}</div>\n                <p className=\"text-3xl font-bold text-primary\">{stat.value}</p>\n                <p className=\"text-sm text-muted-foreground\">{stat.label}</p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "services-preview.tsx",
          "type": "file",
          "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Truck, Clock, Shield, MapPin } from \"lucide-react\"\n\nexport function ServicesPreview() {\n  const services = [\n    {\n      icon: Truck,\n      title: \"Delivery R\u00e1pido\",\n      description: \"Entregas en el d\u00eda para Mar del Plata y alrededores\",\n    },\n    {\n      icon: Clock,\n      title: \"Disponibilidad 24/7\",\n      description: \"Servicio disponible todos los d\u00edas del a\u00f1o\",\n    },\n    {\n      icon: Shield,\n      title: \"Env\u00edos Seguros\",\n      description: \"Garant\u00eda total en todos nuestros servicios\",\n    },\n    {\n      icon: MapPin,\n      title: \"Cobertura Total\",\n      description: \"Llegamos a toda la zona de Mar del Plata\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4\">\n      <div className=\"container mx-auto\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {services.map((service, index) => {\n            const IconComponent = service.icon\n            return (\n              <Card key={index} className=\"bg-white/10 border-white/20 hover:bg-white/20 transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-16 h-16 bg-yellow-400/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <IconComponent className=\"w-8 h-8 text-yellow-400\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">{service.title}</h3>\n                  <p className=\"text-white/80\">{service.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
        },
        {
          "name": "social",
          "type": "directory",
          "children": [
            {
              "name": "newsletter-signup.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Mail, CheckCircle } from \"lucide-react\"\n\nexport function NewsletterSignup() {\n  const [email, setEmail] = useState(\"\")\n  const [isSubscribed, setIsSubscribed] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    // Simulate subscription process\n    await new Promise((resolve) => setTimeout(resolve, 1500))\n\n    setIsLoading(false)\n    setIsSubscribed(true)\n    setEmail(\"\")\n\n    // Reset after 3 seconds\n    setTimeout(() => {\n      setIsSubscribed(false)\n    }, 3000)\n  }\n\n  return (\n    <section className=\"py-16 px-4 bg-blue-600\">\n      <div className=\"container mx-auto max-w-4xl\">\n        <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n          <CardContent className=\"p-8 text-center\">\n            {isSubscribed ? (\n              <div className=\"text-white\">\n                <CheckCircle className=\"w-16 h-16 mx-auto mb-4 text-green-400\" />\n                <h3 className=\"text-2xl font-bold mb-2\">\u00a1Suscripci\u00f3n Exitosa!</h3>\n                <p className=\"text-lg\">Gracias por unirte a nuestra comunidad. Recibir\u00e1s nuestras mejores ofertas.</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"w-16 h-16 bg-yellow-400 rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <Mail className=\"w-8 h-8 text-blue-600\" />\n                </div>\n\n                <h2 className=\"text-2xl md:text-3xl font-bold text-white mb-4\">Suscr\u00edbete a Nuestro Newsletter</h2>\n                <p className=\"text-lg text-white/90 mb-8 max-w-2xl mx-auto\">\n                  Recibe ofertas exclusivas, noticias y actualizaciones directamente en tu correo electr\u00f3nico\n                </p>\n\n                <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-4 max-w-md mx-auto\">\n                  <Input\n                    type=\"email\"\n                    placeholder=\"tu@email.com\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    className=\"flex-1 bg-white/20 border-white/30 text-white placeholder:text-white/70\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"bg-yellow-400 hover:bg-yellow-500 text-blue-600 font-semibold\"\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n                        Suscribiendo...\n                      </>\n                    ) : (\n                      \"Suscribirse\"\n                    )}\n                  </Button>\n                </form>\n\n                <p className=\"text-sm text-white/70 mt-4\">\n                  No spam. Puedes cancelar tu suscripci\u00f3n en cualquier momento.\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "social-benefits.tsx",
              "type": "file",
              "content": "import { Card, CardContent } from \"@/components/ui/card\"\nimport { Gift, Bell, Users, Zap } from \"lucide-react\"\n\nexport function SocialBenefits() {\n  const benefits = [\n    {\n      icon: Gift,\n      title: \"Ofertas Exclusivas\",\n      description: \"Accede a descuentos y promociones especiales solo para nuestros seguidores en redes sociales.\",\n    },\n    {\n      icon: Bell,\n      title: \"Actualizaciones Inmediatas\",\n      description: \"S\u00e9 el primero en conocer nuevos servicios, cambios de horarios y noticias importantes.\",\n    },\n    {\n      icon: Users,\n      title: \"Comunidad Activa\",\n      description: \"\u00danete a nuestra comunidad de clientes y comparte experiencias con otros usuarios.\",\n    },\n    {\n      icon: Zap,\n      title: \"Soporte R\u00e1pido\",\n      description: \"Obt\u00e9n respuestas r\u00e1pidas a tus consultas a trav\u00e9s de nuestras redes sociales.\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-white\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Beneficios de Seguirnos</h2>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Descubre todas las ventajas de formar parte de nuestra comunidad en redes sociales\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {benefits.map((benefit, index) => {\n            const IconComponent = benefit.icon\n            return (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-shadow duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <IconComponent className=\"w-8 h-8 text-yellow-600\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">{benefit.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "social-connect.tsx",
              "type": "file",
              "content": "\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Facebook, Instagram, Twitter, Youtube, Mail } from \"lucide-react\"\nimport Image from \"next/image\"\n\nexport function SocialConnect() {\n  const socialNetworks = [\n    {\n      name: \"Facebook\",\n      icon: Facebook,\n      handle: \"@enviosdosruedas\",\n      description: \"S\u00edguenos para ofertas exclusivas y actualizaciones diarias.\",\n      color: \"bg-blue-600 hover:bg-blue-700\",\n      url: \"https://facebook.com/enviosdosruedas\",\n      followers: \"2.5K+\", // Example\n    },\n    {\n      name: \"Instagram\",\n      icon: Instagram,\n      handle: \"@enviosdosruedas\",\n      description: \"Fotos de nuestros servicios y promociones especiales.\",\n      color: \"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\",\n      url: \"https://instagram.com/enviosdosruedas\",\n      followers: \"3.2K+\", // Example\n    },\n    {\n      name: \"WhatsApp\",\n      icon: null,\n      handle: \"+54 9 223 660-2699\",\n      description: \"Contacto directo para consultas y pedidos.\",\n      color: \"bg-green-500 hover:bg-green-600\",\n      url: \"https://wa.me/5492236602699?text=Hola%20Envios%20DosRuedas,%20tengo%20una%20consulta.\",\n      followers: \"Directo\",\n    },\n  ]\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-50\">\n      <div className=\"container mx-auto max-w-6xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-blue-800 mb-4\">\u00a1Con\u00e9ctate con nosotros!</h2>\n          <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n            Sigue nuestras redes sociales para acceder a promociones exclusivas, actualizaciones y m\u00e1s.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {socialNetworks.map((network) => {\n            const IconComponent = network.icon\n            return (\n              <Card key={network.name} className=\"hover:shadow-lg transition-all duration-300 hover:-translate-y-1 flex flex-col\">\n                <CardContent className=\"p-6 flex flex-col flex-grow\">\n                  <div className=\"flex items-center mb-4\">\n                    <div className={`w-12 h-12 rounded-full flex items-center justify-center mr-4 ${network.color} flex-shrink-0`}>\n                      {IconComponent ? (\n                        <IconComponent className=\"w-6 h-6 text-white\" />\n                      ) : (\n                        <Image src=\"/icon/icon-whatsapp.svg\" alt=\"WhatsApp\" width={24} height={24} className=\"w-6 h-6\" />\n                      )}\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-800\">{network.name}</h3>\n                      <p className=\"text-sm text-gray-500\">{network.followers} {network.name !== \"WhatsApp\" && network.name !== \"Email\" ? \"seguidores\" : \"\"}</p>\n                    </div>\n                  </div>\n\n                  <p className=\"text-gray-600 mb-4 leading-relaxed flex-grow\">{network.description}</p>\n\n                  <div className=\"mt-auto\">\n                    <Button asChild size=\"sm\" className={`w-full text-white ${network.color} border-0`}>\n                      <a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {network.name === \"WhatsApp\" ? \"Chatear Ahora\" : network.name === \"Email\" ? \"Enviar Email\" : `Seguir en ${network.name}`}\n                      </a>\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            )\n          })}\n        </div>\n      </div>\n    </section>\n  )\n}\n"
            },
            {
              "name": "social-feed.tsx",
              "type": "file",
              "content": "\n// src/components/social/social-feed.tsx\n'use client';\n\nimport type { SocialPost } from \"@/types/social-post\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport Image from \"next/image\";\nimport { Facebook, Instagram, MessageSquare, Heart, MessageCircle as MessageIcon, Share2, ArrowRight, ExternalLink, ThumbsUp } from \"lucide-react\";\n\ninterface SocialFeedProps {\n  posts: SocialPost[];\n}\n\nconst platformIcons = {\n  facebook: Facebook,\n  instagram: Instagram,\n  whatsapp: MessageSquare,\n};\n\nconst platformColors = {\n  facebook: \"bg-blue-600 hover:bg-blue-700\",\n  instagram: \"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\",\n  whatsapp: \"bg-green-500 hover:bg-green-600\",\n};\n\nconst PlatformIcon = ({ platform }: { platform: SocialPost['platform'] }) => {\n  const Icon = platformIcons[platform];\n  return <Icon className=\"w-5 h-5\" />;\n};\n\nexport function SocialFeed({ posts }: SocialFeedProps) {\n  if (!posts || posts.length === 0) {\n    return (\n      <section className=\"py-16 px-4 bg-gray-100\">\n        <div className=\"container mx-auto text-center\">\n          <p className=\"text-lg text-gray-600\">No hay publicaciones recientes para mostrar.</p>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-16 px-4 bg-gray-100\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-4\">Mantente Conectado</h2>\n          <p className=\"text-lg text-gray-600\">\n            Nuestras \u00faltimas actualizaciones y novedades de nuestras redes.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {posts.map((post) => (\n            <Card key={post.id} className=\"overflow-hidden hover:shadow-xl transition-shadow duration-300 flex flex-col bg-white rounded-lg\">\n              <CardHeader className=\"flex flex-row items-center space-x-3 p-4 border-b\">\n                {post.user.avatarUrl ? (\n                  <Image\n                    src={post.user.avatarUrl}\n                    alt={post.user.name}\n                    width={40}\n                    height={40}\n                    className=\"rounded-full\"\n                  />\n                ) : (\n                  <div className={`w-10 h-10 rounded-full ${platformColors[post.platform]} flex items-center justify-center text-white`}>\n                    <PlatformIcon platform={post.platform} />\n                  </div>\n                )}\n                <div>\n                  <a href={post.user.profileUrl || post.postUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">\n                    <CardTitle className=\"text-base font-semibold text-gray-800\">{post.user.name}</CardTitle>\n                  </a>\n                  <p className=\"text-xs text-gray-500\">\n                    {new Date(post.timestamp).toLocaleDateString('es-AR', { year: 'numeric', month: 'long', day: 'numeric' })} en <span className=\"capitalize\">{post.platform}</span>\n                  </p>\n                </div>\n              </CardHeader>\n\n              <CardContent className=\"p-4 flex-grow\">\n                {post.imageUrl && post.platform !== 'whatsapp' && (\n                  <a href={post.postUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"block mb-3 rounded-md overflow-hidden\">\n                    <Image\n                      src={post.imageUrl}\n                      alt={`Post de ${post.user.name} en ${post.platform}`}\n                      width={400}\n                      height={300}\n                      className=\"w-full h-auto object-cover aspect-video\"\n                      data-ai-hint={post.imageHint || 'social media image'}\n                    />\n                  </a>\n                )}\n                \n                <p className=\"text-gray-700 leading-relaxed mb-3 text-sm whitespace-pre-line line-clamp-4\">\n                  {post.content}\n                </p>\n\n                {post.platform === 'whatsapp' && (\n                   <Button asChild className={`w-full mt-4 ${platformColors[post.platform]}`}>\n                     <a href={post.postUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                       <MessageSquare className=\"mr-2 h-4 w-4\" /> Chatear en WhatsApp\n                     </a>\n                   </Button>\n                )}\n              </CardContent>\n\n              {post.platform !== 'whatsapp' && (\n                <CardFooter className=\"p-4 border-t flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3 text-gray-500 text-xs\">\n                    {post.likes !== undefined && (\n                      <span className=\"flex items-center\"><ThumbsUp className=\"w-3.5 h-3.5 mr-1\" /> {post.likes}</span>\n                    )}\n                    {post.comments !== undefined && (\n                      <span className=\"flex items-center\"><MessageIcon className=\"w-3.5 h-3.5 mr-1\" /> {post.comments}</span>\n                    )}\n                     {post.shares !== undefined && (\n                      <span className=\"flex items-center\"><Share2 className=\"w-3.5 h-3.5 mr-1\" /> {post.shares}</span>\n                    )}\n                  </div>\n                  <Button variant=\"ghost\" size=\"sm\" asChild className=\"text-xs text-blue-600 hover:text-blue-700\">\n                    <a href={post.postUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                      Ver Post <ExternalLink className=\"ml-1 w-3 h-3\" />\n                    </a>\n                  </Button>\n                </CardFooter>\n              )}\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <Button size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700 text-white\">\n            Ver M\u00e1s en Nuestras Redes <ArrowRight className=\"ml-2 h-5 w-5\" />\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n"
            },
            {
              "name": "social-hero.tsx",
              "type": "file",
              "content": "\nimport { HeroSection } from \"@/components/ui/HeroSection\";\n\nexport function SocialHero() {\n  return (\n    <HeroSection\n      title={<span className=\"text-yellow-400\">Envios DosRuedas</span>}\n      description={\n        <>\n          <h2 className=\"text-2xl md:text-3xl text-primary-foreground/90 mt-4 mb-2 font-semibold\">Nuestras Redes</h2>\n          <p className=\"text-lg md:text-xl text-primary-foreground/80 max-w-3xl mx-auto leading-relaxed\">\n            Descubre nuestros servicios y ofertas exclusivas conect\u00e1ndote con nosotros.\n          </p>\n        </>\n      }\n      backgroundType=\"image\"\n      backgroundImageUrl=\"/bannerenvios.png\"\n      backgroundImageAlt=\"Banner Redes Sociales Envios DosRuedas\"\n      backgroundOverlayOpacity={0.7}\n      textColorClassName=\"text-primary-foreground\"\n      layout=\"center-stacked\"\n      textAlignment=\"text-center\"\n      minHeight=\"min-h-[50vh]\"\n      className=\"py-12 md:py-16\"\n      titleClassName=\"text-4xl md:text-5xl lg:text-6xl font-bold\"\n    />\n  );\n}\n"
            }
          ]
        },
        {
          "name": "theme-provider.tsx",
          "type": "file",
          "content": "'use client'\n\nimport * as React from 'react'\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from 'next-themes'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n"
        },
        {
          "name": "tracking",
          "type": "directory",
          "children": [
            {
              "name": "driver-info.tsx",
              "type": "file",
              "content": "import Image from \"next/image\";\nimport { Button } from \"@/components/ui/button\";\nimport { Phone, MessageSquare } from \"lucide-react\";\n\ninterface DriverProps {\n  name: string;\n  title: string;\n  photo: string;\n  phone: string;\n}\n\ninterface DriverInfoProps {\n  driver: DriverProps;\n}\n\nexport function DriverInfo({ driver }: DriverInfoProps) {\n  const handleCall = () => {\n    window.open(`tel:${driver.phone}`, '_self');\n  };\n\n  const handleSms = () => {\n    window.open(`sms:${driver.phone}`, '_self');\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex-shrink-0\">\n          <Image\n            src={driver.photo}\n            alt={driver.name}\n            width={80}\n            height={80}\n            className=\"rounded-full object-cover\"\n          />\n        </div>\n        <div className=\"flex-1\">\n          <h3 className=\"text-xl font-bold text-gray-900\">{driver.name}</h3>\n          <p className=\"text-gray-600 text-sm\">{driver.title}</p>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button\n            onClick={handleCall}\n            size=\"sm\"\n            variant=\"outline\"\n            className=\"p-3 rounded-full\"\n            title=\"Llamar al conductor\"\n          >\n            <Phone className=\"w-5 h-5\" />\n          </Button>\n          <Button\n            onClick={handleSms}\n            size=\"sm\"\n            variant=\"outline\"\n            className=\"p-3 rounded-full\"\n            title=\"Enviar SMS al conductor\"\n          >\n            <MessageSquare className=\"w-5 h-5\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
            },
            {
              "name": "interactive-tracking-map.tsx",
              "type": "file",
              "content": "\n\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport { useGoogleMaps } from '@/hooks/useGoogleMaps';\nimport { RouteTracker } from './route-tracker';\nimport { Button } from '@/components/ui/button';\nimport { RefreshCw, MapPin, Navigation, AlertTriangle } from 'lucide-react';\n\ninterface Location {\n  lat: number;\n  lng: number;\n}\n\ninterface InteractiveTrackingMapProps {\n  center: Location;\n  pickupLocation?: Location;\n  deliveryLocation?: Location;\n  driverLocation?: Location;\n  orderId?: string;\n}\n\nexport function InteractiveTrackingMap({\n  center,\n  pickupLocation,\n  deliveryLocation,\n  driverLocation,\n  orderId\n}: InteractiveTrackingMapProps) {\n  const { mapRef, map, isLoaded, error: mapError } = useGoogleMaps({ center });\n  const [isTracking, setIsTracking] = useState(true); \n  const [lastUpdate, setLastUpdate] = useState(new Date());\n  \n  const routePoints = [\n    ...(pickupLocation ? [{\n      location: pickupLocation,\n      title: 'Punto de Recogida',\n      type: 'pickup' as const,\n      completed: !!driverLocation \n    }] : []),\n    ...(deliveryLocation ? [{\n      location: deliveryLocation,\n      title: 'Punto de Entrega',\n      type: 'delivery' as const,\n      completed: false \n    }] : [])\n  ];\n\n  const handleRefresh = () => {\n    setLastUpdate(new Date());\n    if (map && driverLocation) {\n        map.panTo(driverLocation);\n    }\n  };\n\n  const handleCenterOnDriver = () => {\n    if (map && driverLocation) {\n      map.panTo(driverLocation);\n      map.setZoom(15);\n    } else if (map && pickupLocation) {\n      map.panTo(pickupLocation);\n      map.setZoom(15);\n    }\n  };\n  \n  useEffect(() => {\n    if (isLoaded && map && driverLocation) {\n        map.panTo(driverLocation);\n    } else if (isLoaded && map && pickupLocation) {\n        map.panTo(pickupLocation);\n    }\n  }, [isLoaded, map, driverLocation, pickupLocation]);\n\n\n  if (mapError) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden h-full\">\n        <div className=\"relative w-full h-full flex items-center justify-center\">\n          <div className=\"text-center p-6\">\n            <AlertTriangle className=\"w-12 h-12 mx-auto mb-4 text-red-500\" />\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n              Error al Cargar el Mapa\n            </h3>\n            <p className=\"text-sm text-gray-600 mb-4\">\n              {mapError}\n            </p>\n            <p className=\"text-xs text-gray-500 mb-4\">\n              Intente recargar la p\u00e1gina. Si el problema persiste, verifique su conexi\u00f3n a internet y aseg\u00farese de que la API Key de Google Maps (<code>NEXT_PUBLIC_GOOGLE_MAPS_API_KEY</code>) sea v\u00e1lida, est\u00e9 configurada correctamente en su proyecto de Google Cloud (con la \"Maps JavaScript API\" habilitada y facturaci\u00f3n activa) y no tenga restricciones que impidan su uso. Consulte la consola para m\u00e1s detalles.\n            </p>\n             <Button\n                onClick={() => window.open(`https://maps.google.com/maps?ll=${center.lat},${center.lng}&z=13&t=m`, '_blank')}\n                variant=\"outline\"\n                size=\"sm\"\n              >\n                Abrir en Google Maps\n              </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden h-full flex flex-col\">\n      <div className=\"p-3 border-b bg-gray-50\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${driverLocation ? 'bg-green-500 animate-pulse' : 'bg-yellow-500'}`} />\n            <span className=\"text-sm font-medium\">\n              {driverLocation ? 'Conductor en Ruta' : 'Esperando Ubicaci\u00f3n'}\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-xs text-gray-500 hidden sm:inline\">\n              Actualizado: {lastUpdate.toLocaleTimeString('es-AR', { hour: '2-digit', minute: '2-digit' })}\n            </span>\n            <Button\n              onClick={handleRefresh}\n              size=\"icon\"\n              variant=\"outline\"\n              className=\"h-8 w-8\"\n              title=\"Actualizar ubicaci\u00f3n del mapa\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              onClick={handleCenterOnDriver}\n              size=\"icon\"\n              variant=\"outline\"\n              className=\"h-8 w-8\"\n              title=\"Centrar en conductor\"\n              disabled={!driverLocation && !pickupLocation}\n            >\n              <Navigation className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"relative flex-grow\">\n        <div\n          ref={mapRef}\n          className=\"w-full h-full\"\n          style={{ minHeight: '300px' }} \n        />\n\n        {!isLoaded && !mapError && (\n          <div className=\"absolute inset-0 bg-gray-100 flex items-center justify-center z-10\">\n            <div className=\"text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-2\"></div>\n              <p className=\"text-sm text-gray-600\">Cargando mapa...</p>\n            </div>\n          </div>\n        )}\n\n        {isLoaded && map && (\n          <RouteTracker\n            map={map}\n            isLoaded={isLoaded}\n            routePoints={routePoints}\n            driverLocation={driverLocation}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\n    "
            },
            {
              "name": "order-details.tsx",
              "type": "file",
              "content": "interface OrderSummary {\n  items: number;\n  subtotal: string;\n  total: string;\n}\n\ninterface OrderDetailsProps {\n  orderId: string;\n  orderSummary: OrderSummary;\n}\n\nexport function OrderDetails({ orderId, orderSummary }: OrderDetailsProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n        Detalles del Pedido\n      </h3>\n\n      <div className=\"space-y-3\">\n        <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n          <span className=\"text-sm text-gray-600\">Pedido {orderId}</span>\n          <span className=\"text-sm text-gray-600\">({orderSummary.items} art\u00edculos)</span>\n        </div>\n\n        <div className=\"flex justify-between items-center py-2\">\n          <span className=\"text-sm text-gray-600\">Total parcial:</span>\n          <span className=\"text-sm font-medium text-gray-900\">{orderSummary.subtotal}</span>\n        </div>\n\n        <div className=\"flex justify-between items-center py-2 border-t border-gray-100\">\n          <span className=\"text-base font-semibold text-gray-900\">Total del pedido:</span>\n          <span className=\"text-base font-semibold text-gray-900\">{orderSummary.total}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
            },
            {
              "name": "order-status.tsx",
              "type": "file",
              "content": "interface OrderStatusProps {\n  status: string;\n  estimatedArrival: string;\n  timeRemaining: string;\n}\n\nexport function OrderStatus({ status, estimatedArrival, timeRemaining }: OrderStatusProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          {status}\n        </h1>\n        <div className=\"text-gray-600 mb-1\">\n          <span className=\"text-sm\">Llegada estimada a las </span>\n          <span className=\"font-semibold text-lg\">{estimatedArrival}</span>\n        </div>\n        <div className=\"text-2xl font-bold text-blue-600\">\n          {timeRemaining}\n        </div>\n      </div>\n    </div>\n  );\n}\n"
            },
            {
              "name": "route-tracker.tsx",
              "type": "file",
              "content": "\"use client\";\n\nimport { useEffect, useState } from 'react';\n\ninterface Location {\n  lat: number;\n  lng: number;\n}\n\ninterface RoutePoint {\n  location: Location;\n  title: string;\n  type: 'pickup' | 'delivery' | 'driver';\n  completed?: boolean;\n}\n\ninterface RouteTrackerProps {\n  map: google.maps.Map | null;\n  isLoaded: boolean;\n  routePoints: RoutePoint[];\n  driverLocation?: Location;\n}\n\nexport function RouteTracker({ map, isLoaded, routePoints, driverLocation }: RouteTrackerProps) {\n  const [markers, setMarkers] = useState<google.maps.Marker[]>([]);\n  const [directionsRenderer, setDirectionsRenderer] = useState<google.maps.DirectionsRenderer | null>(null);\n\n  useEffect(() => {\n    if (!map || !isLoaded || !window.google) return;\n\n    // Clear existing markers\n    markers.forEach(marker => marker.setMap(null));\n\n    const newMarkers: google.maps.Marker[] = [];\n\n    // Add route point markers\n    routePoints.forEach((point) => {\n      const marker = new window.google.maps.Marker({\n        position: point.location,\n        map,\n        title: point.title,\n        icon: getMarkerIcon(point.type, point.completed),\n      });\n\n      const infoWindow = new window.google.maps.InfoWindow({\n        content: `\n          <div class=\"p-2\">\n            <h3 class=\"font-semibold text-sm\">${point.title}</h3>\n            <p class=\"text-xs text-gray-600\">${point.type === 'pickup' ? 'Punto de Recogida' : 'Punto de Entrega'}</p>\n            ${point.completed ? '<p class=\"text-xs text-green-600\">\u2713 Completado</p>' : ''}\n          </div>\n        `\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n      });\n\n      newMarkers.push(marker);\n    });\n\n    // Add driver location marker if available\n    if (driverLocation) {\n      const driverMarker = new window.google.maps.Marker({\n        position: driverLocation,\n        map,\n        title: 'Conductor',\n        icon: {\n          url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n            <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"16\" cy=\"16\" r=\"12\" fill=\"#3B82F6\" stroke=\"white\" stroke-width=\"3\"/>\n              <text x=\"16\" y=\"20\" text-anchor=\"middle\" fill=\"white\" font-size=\"12\" font-weight=\"bold\">\ud83d\ude97</text>\n            </svg>\n          `),\n          scaledSize: new window.google.maps.Size(32, 32),\n          anchor: new window.google.maps.Point(16, 16),\n        },\n        animation: window.google.maps.Animation.BOUNCE,\n      });\n\n      const driverInfoWindow = new window.google.maps.InfoWindow({\n        content: `\n          <div class=\"p-2\">\n            <h3 class=\"font-semibold text-sm\">Conductor</h3>\n            <p class=\"text-xs text-gray-600\">Ubicaci\u00f3n actual</p>\n          </div>\n        `\n      });\n\n      driverMarker.addListener('click', () => {\n        driverInfoWindow.open(map, driverMarker);\n      });\n\n      newMarkers.push(driverMarker);\n    }\n\n    setMarkers(newMarkers);\n\n    // Draw route if we have pickup and delivery points\n    const pickupPoint = routePoints.find(p => p.type === 'pickup');\n    const deliveryPoint = routePoints.find(p => p.type === 'delivery');\n\n    if (pickupPoint && deliveryPoint) {\n      drawRoute(pickupPoint.location, deliveryPoint.location, driverLocation);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, isLoaded, routePoints, driverLocation]);\n\n  const getMarkerIcon = (type: string, completed?: boolean) => {\n    const colors = {\n      pickup: completed ? '#10B981' : '#F59E0B',\n      delivery: completed ? '#10B981' : '#EF4444',\n      driver: '#3B82F6'\n    };\n\n    const icons = {\n      pickup: '\ud83d\udce6',\n      delivery: '\ud83c\udfe0',\n      driver: '\ud83d\ude97'\n    };\n\n    return {\n      url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n        <svg width=\"32\" height=\"40\" viewBox=\"0 0 32 40\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M16 0C7.164 0 0 7.164 0 16c0 16 16 24 16 24s16-8 16-24C32 7.164 24.836 0 16 0z\" fill=\"${colors[type as keyof typeof colors]}\"/>\n          <circle cx=\"16\" cy=\"16\" r=\"10\" fill=\"white\"/>\n          <text x=\"16\" y=\"20\" text-anchor=\"middle\" font-size=\"12\">${icons[type as keyof typeof icons]}</text>\n        </svg>\n      `),\n      scaledSize: new window.google.maps.Size(32, 40),\n      anchor: new window.google.maps.Point(16, 40),\n    };\n  };\n\n  const drawRoute = (pickup: Location, delivery: Location, driver?: Location) => {\n    if (!map || !window.google) return;\n\n    // Clear existing route\n    if (directionsRenderer) {\n      directionsRenderer.setMap(null);\n    }\n\n    const directionsService = new window.google.maps.DirectionsService();\n    const renderer = new window.google.maps.DirectionsRenderer({\n      suppressMarkers: true, // We're using custom markers\n      polylineOptions: {\n        strokeColor: '#3B82F6',\n        strokeWeight: 4,\n        strokeOpacity: 0.7,\n      }\n    });\n\n    renderer.setMap(map);\n    setDirectionsRenderer(renderer);\n\n    // If driver location is available, show route from driver to delivery\n    // Otherwise show route from pickup to delivery\n    const origin = driver || pickup;\n    const destination = delivery;\n\n    directionsService.route(\n      {\n        origin,\n        destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n        optimizeWaypoints: true,\n      },\n      (result, status) => {\n        if (status === 'OK' && result) {\n          renderer.setDirections(result);\n        } else {\n          console.error('Directions request failed:', status);\n        }\n      }\n    );\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      markers.forEach(marker => marker.setMap(null));\n      if (directionsRenderer) {\n        directionsRenderer.setMap(null);\n      }\n    };\n  }, [markers, directionsRenderer]);\n\n  return null; // This component doesn't render anything directly\n}\n"
            },
            {
              "name": "social-footer.tsx",
              "type": "file",
              "content": "import Image from \"next/image\";\n\nexport function SocialFooter() {\n  const socialLinks = [\n    {\n      name: \"Facebook\",\n      icon: \"https://ext.same-assets.com/2423591613/416928015.svg\",\n      url: \"#\"\n    },\n    {\n      name: \"Instagram\",\n      icon: \"https://ext.same-assets.com/2423591613/2685275487.svg\",\n      url: \"#\"\n    }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      <div className=\"text-center\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n          S\u00edguenos en\n        </h3>\n\n        <div className=\"flex justify-center space-x-4\">\n          {socialLinks.map((social, index) => (\n            <a\n              key={social.name}\n              href={social.url}\n              className=\"p-3 bg-gray-50 rounded-full hover:bg-gray-100 transition-colors\"\n              title={`S\u00edguenos en ${social.name}`}\n            >\n              <Image\n                src={social.icon}\n                alt={social.name}\n                width={24}\n                height={24}\n              />\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"
            },
            {
              "name": "tracking-header.tsx",
              "type": "file",
              "content": "import Image from \"next/image\";\n\nexport function TrackingHeader() {\n  return (\n    <div className=\"w-full bg-white border-b border-gray-200 py-4\">\n      <div className=\"max-w-6xl mx-auto px-4\">\n        <div className=\"flex items-center\">\n          <div className=\"flex items-center mr-3\">\n            <Image\n              src=\"https://ext.same-assets.com/2423591613/1643727609.png\"\n              alt=\"Mensajer\u00eda Env\u00edos DosRuedas\"\n              width={40}\n              height={40}\n              className=\"rounded-md\"\n            />\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"text-lg sm:text-xl font-bold text-gray-900\">\n              Mensajer\u00eda Env\u00edos DosRuedas\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
            },
            {
              "name": "tracking-map.tsx",
              "type": "file",
              "content": "\"use client\";\n\ninterface Location {\n  lat: number;\n  lng: number;\n}\n\ninterface TrackingMapProps {\n  location: Location;\n}\n\nexport function TrackingMap({ location }: TrackingMapProps) {\n  // Generate Google Maps static image URL\n  const mapUrl = `https://maps.googleapis.com/maps/api/staticmap?center=${location.lat},${location.lng}&zoom=13&size=600x400&maptype=roadmap&markers=color:red%7Clabel:D%7C${location.lat},${location.lng}&key=AIzaSyBroadly`;\n\n  // Fallback to a placeholder map since we don't have a real API key\n  const placeholderMapUrl = \"https://via.placeholder.com/600x400/94d5e5/ffffff?text=Mapa+de+Seguimiento\";\n\n  const openInGoogleMaps = () => {\n    const googleMapsUrl = `https://maps.google.com/maps?ll=${location.lat},${location.lng}&z=13&t=m`;\n    window.open(googleMapsUrl, '_blank');\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n      <div className=\"relative\">\n        {/* Map Image */}\n        <div\n          className=\"w-full h-96 bg-cover bg-center cursor-pointer relative\"\n          onClick={openInGoogleMaps}\n          style={{\n            backgroundImage: `url(${placeholderMapUrl})`,\n            backgroundColor: '#94d5e5'\n          }}\n        >\n          {/* Map overlay with location pin */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"bg-red-500 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold text-sm shadow-lg\">\n              \ud83d\udccd\n            </div>\n          </div>\n\n          {/* Map controls overlay */}\n          <div className=\"absolute top-4 right-4 space-y-2\">\n            <button className=\"bg-white shadow-md rounded p-2 hover:bg-gray-50\" title=\"Ampliar\">\n              <span className=\"text-lg font-bold\">+</span>\n            </button>\n            <button className=\"bg-white shadow-md rounded p-2 hover:bg-gray-50\" title=\"Reducir\">\n              <span className=\"text-lg font-bold\">-</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Map footer */}\n        <div className=\"p-4 bg-gray-50 border-t\">\n          <div className=\"flex items-center justify-between text-xs text-gray-500\">\n            <span>Datos del mapa 2025</span>\n            <div className=\"space-x-4\">\n              <button\n                onClick={openInGoogleMaps}\n                className=\"text-blue-600 hover:underline\"\n              >\n                Abrir en Google Maps\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
            },
            {
              "name": "updates-timeline.tsx",
              "type": "file",
              "content": "\n\"use client\";\n\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\nimport { format, parseISO, isValid } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\ninterface UpdateItemRaw {\n  time: string; // Expect ISO string from server\n  status: string;\n  description: string;\n  icon: string;\n  isActive: boolean;\n}\n\ninterface UpdateItemFormatted extends Omit<UpdateItemRaw, 'time'> {\n  formattedTime: string;\n}\n\n\ninterface UpdatesTimelineProps {\n  updates: UpdateItemRaw[];\n}\n\nexport function UpdatesTimeline({ updates: rawUpdates }: UpdatesTimelineProps) {\n  const [formattedUpdates, setFormattedUpdates] = useState<UpdateItemFormatted[]>([]);\n\n  useEffect(() => {\n    const newFormattedUpdates = rawUpdates.map(update => {\n      let formattedTime = \"Hora inv\u00e1lida\";\n      try {\n        const dateObj = parseISO(update.time);\n        if (isValid(dateObj)) {\n          formattedTime = format(dateObj, \"p\", { locale: es }); // Format to 'h:mm a' e.g., \"10:30 AM\"\n        }\n      } catch (e) {\n        console.error(\"Error parsing date for timeline:\", update.time, e);\n      }\n      return {\n        ...update,\n        formattedTime,\n      };\n    });\n    setFormattedUpdates(newFormattedUpdates);\n  }, [rawUpdates]);\n\n  const getIconSrc = (icon: string) => {\n    switch (icon) {\n      case 'started':\n        return 'https://ext.same-assets.com/2423591613/3488193358.svg';\n      case 'pickup':\n        return 'https://ext.same-assets.com/2423591613/496802177.svg';\n      case 'delivery':\n        return 'https://ext.same-assets.com/2423591613/1262641226.svg';\n      default:\n        return 'https://ext.same-assets.com/2423591613/3488193358.svg';\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n        Actualizaciones\n      </h3>\n\n      <div className=\"space-y-4\">\n        {formattedUpdates.map((update, index) => (\n          <div key={`update-${update.status}-${index}`} className=\"flex items-start space-x-4\">\n            <div className=\"flex-shrink-0\">\n              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\n                update.isActive ? 'bg-green-100' : 'bg-gray-100'\n              }`}>\n                <Image\n                  src={getIconSrc(update.icon)}\n                  alt={update.status}\n                  width={24}\n                  height={24}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm font-medium text-gray-900\">\n                  {update.status}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  {update.formattedTime}\n                </p>\n              </div>\n              <p className=\"text-sm text-gray-600 mt-1\">\n                {update.description}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"
            }
          ]
        },
        {
          "name": "ui",
          "type": "directory",
          "children": [
            {
              "name": "HeroSection.tsx",
              "type": "file",
              "content": "\n// src/components/ui/HeroSection.tsx\n'use client';\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, type buttonVariants } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport Link from 'next/link';\nimport type { VariantProps } from 'class-variance-authority';\nimport Image from 'next/image';\nimport { cn } from '@/lib/utils';\nimport { ArrowRight, Mail, Star, Home, Truck, Calculator as CalculatorIcon, Users, ChevronDown, Menu, X } from 'lucide-react';\n\nconst iconMap: Record<string, React.ElementType> = {\n  ArrowRight,\n  Mail,\n  Star,\n  Home,\n  Truck,\n  Calculator: CalculatorIcon,\n  Users,\n  ChevronDown,\n  Menu,\n  X,\n};\n\ninterface CtaButtonProps {\n  text: string;\n  href?: string;\n  variant?: VariantProps<typeof buttonVariants>['variant'];\n  icon?: string;\n  onClick?: () => void;\n  target?: string;\n  rel?: string;\n  asChild?: boolean;\n  className?: string;\n}\n\nexport interface HeroSectionProps {\n  title: React.ReactNode;\n  preTitle?: React.ReactNode;\n  description?: string | React.ReactNode;\n  ctaButtons?: CtaButtonProps[];\n  backgroundType?: 'color' | 'gradient' | 'image';\n  backgroundColor?: string;\n  backgroundGradient?: string;\n  backgroundImageUrl?: string;\n  backgroundImageAlt?: string;\n  backgroundOverlayOpacity?: number;\n  textColorClassName?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n  visualElement?: React.ReactNode;\n  layout?: 'center-stacked' | 'split-visual-right' | 'split-visual-left';\n  minHeight?: string;\n  contentMaxWidth?: string;\n  textAlignment?: 'text-center' | 'text-left' | 'text-right';\n  className?: string;\n  children?: React.ReactNode;\n  priority?: boolean;\n}\n\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n      delayChildren: 0.2,\n    },\n  },\n};\n\nconst itemVariants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      type: 'spring',\n      stiffness: 80,\n      damping: 12,\n    },\n  },\n};\n\nconst visualElementVariants = {\n  hidden: { x: 30, opacity: 0, scale: 0.95 },\n  visible: {\n    x: 0,\n    opacity: 1,\n    scale: 1,\n    transition: {\n      type: 'spring',\n      stiffness: 70,\n      damping: 15,\n      delay: 0.2,\n    },\n  },\n};\n\nexport function HeroSection({\n  title,\n  preTitle,\n  description,\n  ctaButtons,\n  backgroundType = 'gradient',\n  backgroundColor = 'bg-background',\n  backgroundGradient = 'bg-gradient-to-br from-primary to-primary/80',\n  backgroundImageUrl,\n  backgroundImageAlt = 'Hero background image',\n  backgroundOverlayOpacity = 0,\n  textColorClassName = 'text-primary-foreground',\n  titleClassName = 'text-4xl sm:text-5xl lg:text-6xl font-bold',\n  descriptionClassName = 'text-lg sm:text-xl lg:text-2xl opacity-90 leading-relaxed',\n  visualElement,\n  layout = 'center-stacked',\n  minHeight = 'min-h-[60vh] md:min-h-[70vh]',\n  contentMaxWidth = 'max-w-4xl',\n  textAlignment = 'text-center',\n  className = '',\n  children,\n  priority = false,\n}: HeroSectionProps) {\n\n  const ContentWrapper = motion.div;\n  const itemWrapperProps = { variants: itemVariants };\n\n  const VisualWrapper = motion.div;\n  const visualWrapperRightProps = {\n    variants: visualElementVariants,\n    initial: \"hidden\",\n    whileInView: \"visible\",\n    viewport: { once: true, amount: 0.2 },\n  };\n\n  let bgClasses = '';\n  if (backgroundType === 'color') bgClasses = backgroundColor;\n  else if (backgroundType === 'gradient') bgClasses = backgroundGradient;\n\n  const sectionClasses = cn(\n    'relative flex items-center overflow-hidden',\n    minHeight,\n    bgClasses,\n    className\n  );\n\n  const contentContainerClasses = cn(\n    'relative z-10 container mx-auto px-4 w-full',\n    'py-12 sm:py-16 md:py-24 lg:py-32'\n  );\n\n  const textContentWrapper = (\n     <motion.div\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      className={cn(\n        textColorClassName,\n        layout === 'center-stacked' ? `mx-auto ${contentMaxWidth} ${textAlignment}` :\n        (layout === 'split-visual-right' ? `${textAlignment} lg:text-left` :\n         layout === 'split-visual-left' ? `${textAlignment} lg:text-right` : textAlignment),\n      )}\n    >\n      {preTitle && (\n        <motion.div variants={itemVariants}>\n          {typeof preTitle === 'string' ? (\n            <Badge className=\"px-4 py-2 text-sm font-semibold\" variant=\"secondary\">{preTitle}</Badge>\n          ) : preTitle}\n        </motion.div>\n      )}\n\n      <motion.div variants={itemVariants} className={cn(titleClassName, 'mt-4 leading-tight md:leading-tight')}>\n        {title}\n      </motion.div>\n\n      {description && (\n        <motion.p variants={itemVariants} className={cn('mt-6', descriptionClassName, 'max-w-xl', textAlignment === 'text-left' ? 'mr-auto' : textAlignment === 'text-right' ? 'ml-auto' : 'mx-auto')}>\n            {description}\n        </motion.p>\n      )}\n\n      {children && <motion.div variants={itemVariants} className=\"mt-6 md:mt-8\">{children}</motion.div>}\n\n      {ctaButtons && ctaButtons.length > 0 && (\n        <motion.div\n          variants={itemVariants}\n          className={cn(\n            'mt-8 sm:mt-10 flex flex-col sm:flex-row gap-3 sm:gap-4 w-full sm:w-auto',\n            textAlignment === 'text-center' ? 'justify-center' :\n            (layout === 'split-visual-right' || textAlignment === 'text-left') ? 'justify-start' :\n            (layout === 'split-visual-left' || textAlignment === 'text-right') ? 'justify-end' :\n            'justify-center'\n          )}\n        >\n          {ctaButtons.map((button, index) => {\n            const IconComponent = button.icon ? iconMap[button.icon] : null;\n            return (\n              <motion.div key={index} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                <Button\n                  variant={button.variant || 'default'}\n                  size=\"lg\"\n                  asChild={!!button.href && !button.onClick}\n                  onClick={button.onClick}\n                  className={cn(\n                    'font-semibold text-base shadow-lg hover:shadow-xl transition-all duration-300 w-full sm:w-auto',\n                    button.className\n                  )}\n                >\n                  {button.href && !button.onClick ? (\n                    <Link href={button.href} target={button.target} rel={button.rel}>\n                      {IconComponent && <IconComponent className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5\" />}\n                      {button.text}\n                    </Link>\n                  ) : (\n                    <>\n                      {IconComponent && <IconComponent className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5\" />}\n                      {button.text}\n                    </>\n                  )}\n                </Button>\n              </motion.div>\n            );\n          })}\n        </motion.div>\n      )}\n    </motion.div>\n  );\n\n  return (\n    <motion.section\n      className={sectionClasses}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      {backgroundType === 'image' && backgroundImageUrl && (\n        <Image\n          src={backgroundImageUrl}\n          alt={backgroundImageAlt}\n          fill\n          sizes=\"100vw\"\n          style={{ objectFit: 'cover' }}\n          quality={80}\n          priority={priority}\n          className=\"z-0\"\n        />\n      )}\n      {backgroundType === 'image' && backgroundOverlayOpacity > 0 && (\n        <div\n          className=\"absolute inset-0 bg-black z-0\"\n          style={{ opacity: backgroundOverlayOpacity }}\n        ></div>\n      )}\n\n      <div className={contentContainerClasses}>\n        {layout === 'center-stacked' && textContentWrapper}\n        {layout === 'split-visual-right' && (\n          <div className=\"grid lg:grid-cols-2 gap-8 md:gap-12 lg:gap-16 items-center\">\n            <div className=\"lg:col-span-1\">{textContentWrapper}</div>\n            {visualElement && (\n              <div className=\"hidden lg:flex lg:col-span-1 items-center justify-center\">\n                {visualElement}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </motion.section>\n  );\n}\n"
            },
            {
              "name": "accordion.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
            },
            {
              "name": "alert-dialog.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"
            },
            {
              "name": "alert.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"
            },
            {
              "name": "aspect-ratio.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n"
            },
            {
              "name": "avatar.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"
            },
            {
              "name": "badge.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"
            },
            {
              "name": "breadcrumb.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n"
            },
            {
              "name": "button.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
            },
            {
              "name": "calendar.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"
            },
            {
              "name": "card.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"
            },
            {
              "name": "carousel.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n"
            },
            {
              "name": "chart.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"
            },
            {
              "name": "checkbox.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"
            },
            {
              "name": "collapsible.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n"
            },
            {
              "name": "command.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n"
            },
            {
              "name": "context-menu.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n"
            },
            {
              "name": "dialog.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"
            },
            {
              "name": "drawer.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n"
            },
            {
              "name": "dropdown-menu.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"
            },
            {
              "name": "form.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"
            },
            {
              "name": "hover-card.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n"
            },
            {
              "name": "input-otp.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n"
            },
            {
              "name": "input.tsx",
              "type": "file",
              "content": "\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"
            },
            {
              "name": "label.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"
            },
            {
              "name": "menubar.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n"
            },
            {
              "name": "navigation-menu.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n"
            },
            {
              "name": "pagination.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n"
            },
            {
              "name": "popover.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"
            },
            {
              "name": "progress.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"
            },
            {
              "name": "radio-group.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"
            },
            {
              "name": "resizable.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n"
            },
            {
              "name": "scroll-area.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"
            },
            {
              "name": "select.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"
            },
            {
              "name": "separator.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"
            },
            {
              "name": "sheet.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"
            },
            {
              "name": "sidebar.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n"
            },
            {
              "name": "skeleton.tsx",
              "type": "file",
              "content": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"
            },
            {
              "name": "slider.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"
            },
            {
              "name": "sonner.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"
            },
            {
              "name": "switch.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"
            },
            {
              "name": "table.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"
            },
            {
              "name": "tabs.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"
            },
            {
              "name": "textarea.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"
            },
            {
              "name": "toast.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"
            },
            {
              "name": "toaster.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"
            },
            {
              "name": "toggle-group.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n"
            },
            {
              "name": "toggle.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n"
            },
            {
              "name": "tooltip.tsx",
              "type": "file",
              "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"
            },
            {
              "name": "use-mobile.tsx",
              "type": "file",
              "content": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"
            },
            {
              "name": "use-toast.ts",
              "type": "file",
              "content": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"
            }
          ]
        },
        {
          "name": "vision-section.tsx",
          "type": "file",
          "content": "export function VisionSection() {\n  return (\n    <section className=\"py-16 px-4 bg-gray-800/50\">\n      <div className=\"container mx-auto text-center\">\n        <h2 className=\"text-3xl md:text-4xl font-bold text-yellow-400 mb-6\">Nuestra Visi\u00f3n Global</h2>\n\n        {/* Decorative line */}\n        <div className=\"w-24 h-1 bg-yellow-400 mx-auto mb-8\"></div>\n\n        <p className=\"text-lg text-white/90 max-w-4xl mx-auto leading-relaxed\">\n          Datos que respaldan nuestra calidad y compromiso. \u00a1Descubre por qu\u00e9 somos la soluci\u00f3n confiable para tus\n          env\u00edos!\n        </p>\n      </div>\n    </section>\n  )\n}\n"
        }
      ]
    },
    {
      "name": "hooks",
      "type": "directory",
      "children": [
        {
          "name": "use-mobile.tsx",
          "type": "file",
          "content": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"
        },
        {
          "name": "use-toast.ts",
          "type": "file",
          "content": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"
        },
        {
          "name": "useGoogleMaps.ts",
          "type": "file",
          "content": "\n\"use client\";\n\nimport { useJsApiLoader } from '@react-google-maps/api';\nimport { useRef, useEffect, useState } from 'react';\n\ninterface Location {\n  lat: number;\n  lng: number;\n}\n\ninterface UseGoogleMapsProps {\n  center: Location;\n  zoom?: number;\n}\n\nconst mapLibraries: (\"places\" | \"geometry\" | \"marker\")[] = ['places', 'geometry', 'marker'];\n\nexport function useGoogleMaps({ center, zoom = 13 }: UseGoogleMapsProps) {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const effectiveApiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: effectiveApiKey || \"\",\n    libraries: mapLibraries,\n  });\n\n  const error = loadError ? `Failed to load Google Maps: \"${loadError.message}\".`\n    : (!effectiveApiKey || effectiveApiKey === \"YOUR_GOOGLE_MAPS_API_KEY\" || effectiveApiKey === \"demo-key\") ? \"Google Maps API Key no est\u00e1 configurada o es un valor placeholder.\"\n    : null;\n\n\n  useEffect(() => {\n    if (isLoaded && !map && mapRef.current && !error) {\n      const mapInstance = new window.google.maps.Map(mapRef.current, {\n        center,\n        zoom,\n        styles: [\n          // Modern map styles\n          {\n            featureType: \"all\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#f0f5f3\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#c9e2f3\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#ffffff\" }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ color: \"#a9c5e8\" }]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#d4efd0\" }]\n          },\n          {\n            featureType: \"transit.station\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#e0e0e0\" }]\n          }\n        ],\n        disableDefaultUI: false,\n        zoomControl: true,\n        streetViewControl: false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n      });\n      setMap(mapInstance);\n    }\n  }, [isLoaded, map, center, zoom, error]);\n\n  return {\n    mapRef,\n    map,\n    isLoaded,\n    error,\n  };\n}\n"
        }
      ]
    },
    {
      "name": "lib",
      "type": "directory",
      "children": [
        {
          "name": "motofija.ts",
          "type": "file",
          "content": "\nexport interface MotoFijaPlan {\n  name: string;\n  duration: string;\n  price: string;\n  description: string;\n  features: string[];\n  popular: boolean;\n}\n\nexport const motoFijaPlans: MotoFijaPlan[] = [\n  {\n    name: \"Medio D\u00eda\",\n    duration: \"4 horas\",\n    price: \"Desde $37.600\",\n    description: \"Ideal para picos de demanda espec\u00edficos\",\n    features: [\n      \"4 horas de servicio dedicado\",\n      \"Horario a elecci\u00f3n\",\n      \"Repartidor exclusivo\",\n      \"Comunicaci\u00f3n directa\",\n      \"Entregas hasta 10km\",\n    ],\n    popular: false,\n  },\n  {\n    name: \"D\u00eda Completo\",\n    duration: \"8 horas\",\n    price: \"Desde $68.800\",\n    description: \"La opci\u00f3n m\u00e1s popular para restaurantes\",\n    features: [\n      \"8 horas de servicio dedicado\",\n      \"Horario comercial completo\",\n      \"Repartidor exclusivo\",\n      \"Comunicaci\u00f3n directa\",\n      \"Entregas ilimitadas\",\n      \"Soporte prioritario\",\n    ],\n    popular: true,\n  },\n  {\n    name: \"Personalizado\",\n    duration: \"A medida\",\n    price: \"Consultar\",\n    description: \"Soluci\u00f3n adaptada a tus necesidades espec\u00edficas\",\n    features: [\n      \"Horarios flexibles\",\n      \"M\u00faltiples repartidores\",\n      \"Cobertura extendida\",\n      \"Servicios adicionales\",\n      \"Facturaci\u00f3n mensual\",\n      \"Gerente de cuenta dedicado\",\n    ],\n    popular: false,\n  },\n];\n"
        },
        {
          "name": "navigation.ts",
          "type": "file",
          "content": "\nimport {\n  Truck,\n  Calculator,\n  Users,\n  Home,\n  Mail,\n  ChevronDown,\n  Menu,\n  X,\n  Zap,\n  DollarSign,\n  Bike,\n  TrendingUp,\n  ShoppingCart,\n  Info,\n  HelpCircle,\n  Share2,\n  type LucideIcon,\n} from \"lucide-react\";\nimport type React from \"react\";\n\nexport interface NavItem {\n  href: string;\n  label: string;\n  icon?: React.ElementType;\n}\n\nexport interface NavGroup {\n  label: string;\n  icon: React.ElementType;\n  items: NavItem[];\n  basePath?: string;\n}\n\nexport const navGroups: NavGroup[] = [\n  {\n    label: \"Servicios\",\n    icon: Truck,\n    basePath: \"/servicios\",\n    items: [\n      { href: \"/servicios/envios-express\", label: \"Env\u00edos Express\", icon: Zap },\n      { href: \"/servicios/envios-lowcost\", label: \"Env\u00edos LowCost\", icon: DollarSign },\n      { href: \"/servicios/moto-fija\", label: \"Moto Fija\", icon: Bike },\n      { href: \"/servicios/plan-emprendedores\", label: \"Plan Emprendedores\", icon: TrendingUp },\n      { href: \"/servicios/enviosflex\", label: \"Mercado Libre Flex\", icon: ShoppingCart },\n    ],\n  },\n  {\n    label: \"Cotizar\",\n    icon: Calculator,\n    basePath: \"/cotizar\",\n    items: [\n      { href: \"/cotizar/express\", label: \"Cotizar Express\", icon: Zap },\n      { href: \"/cotizar/lowcost\", label: \"Cotizar LowCost\", icon: DollarSign },\n    ],\n  },\n  {\n    label: \"Nosotros\",\n    icon: Users,\n    basePath: \"/nosotros\",\n    items: [\n      { href: \"/nosotros/sobre-nosotros\", label: \"Sobre Nosotros\", icon: Info },\n      { href: \"/nosotros/preguntas-frecuentes\", label: \"Preguntas Frecuentes\", icon: HelpCircle },\n      { href: \"/nosotros/nuestras-redes\", label: \"Nuestras Redes\", icon: Share2 },\n    ],\n  },\n];\n"
        },
        {
          "name": "preciosexpress.ts",
          "type": "file",
          "content": "\nexport interface PrecioRango {\n  distancia_min_km: number;\n  distancia_max_km: number;\n  precio_rango: number;\n}\n\nexport const preciosExpress: PrecioRango[] = [\n  { distancia_min_km: 0.00, distancia_max_km: 2.99, precio_rango: 2700.00 },\n  { distancia_min_km: 3.00, distancia_max_km: 4.99, precio_rango: 3400.00 },\n  { distancia_min_km: 5.00, distancia_max_km: 5.99, precio_rango: 4200.00 },\n  { distancia_min_km: 6.00, distancia_max_km: 6.99, precio_rango: 5000.00 },\n  { distancia_min_km: 7.00, distancia_max_km: 7.99, precio_rango: 5800.00 },\n  { distancia_min_km: 8.00, distancia_max_km: 8.99, precio_rango: 6500.00 },\n  { distancia_min_km: 9.00, distancia_max_km: 10.00, precio_rango: 7350.00 },\n  { distancia_min_km: 10.01, distancia_max_km: 11.00, precio_rango: 8250.00 },\n  { distancia_min_km: 11.01, distancia_max_km: 12.00, precio_rango: 9000.00 },\n  { distancia_min_km: 12.01, distancia_max_km: 13.00, precio_rango: 9750.00 },\n  { distancia_min_km: 13.01, distancia_max_km: 14.00, precio_rango: 10500.00 },\n  { distancia_min_km: 14.01, distancia_max_km: 15.00, precio_rango: 11250.00 },\n  { distancia_min_km: 15.01, distancia_max_km: 16.00, precio_rango: 12000.00 },\n  { distancia_min_km: 16.01, distancia_max_km: 17.00, precio_rango: 12750.00 },\n  { distancia_min_km: 17.01, distancia_max_km: 18.00, precio_rango: 13500.00 },\n  { distancia_min_km: 18.01, distancia_max_km: 19.00, precio_rango: 14250.00 },\n  { distancia_min_km: 19.01, distancia_max_km: 20.00, precio_rango: 15000.00 },\n];\n\n/**\n * Obtiene el precio del servicio Express basado en la distancia.\n * @param distanciaKm La distancia en kil\u00f3metros.\n * @returns El precio del rango correspondiente o undefined si la distancia est\u00e1 fuera de los rangos definidos.\n */\nexport function obtenerPrecioExpressPorDistancia(distanciaKm: number): number | undefined {\n  for (const rango of preciosExpress) {\n    if (distanciaKm >= rango.distancia_min_km && distanciaKm <= rango.distancia_max_km) {\n      return rango.precio_rango;\n    }\n  }\n  // Si la distancia es mayor que el rango m\u00e1ximo definido, o menor que el m\u00ednimo (aunque el m\u00ednimo es 0)\n  // se considera fuera de rango.\n  return undefined;\n}\n"
        },
        {
          "name": "precioslowcost.ts",
          "type": "file",
          "content": "\nexport interface PrecioRango {\n  distancia_min_km: number;\n  distancia_max_km: number;\n  precio_rango: number;\n}\n\n// Datos proporcionados, ordenados por distancia_min_km\nexport const preciosLowCost: PrecioRango[] = [\n  { distancia_min_km: 0.00, distancia_max_km: 2.99, precio_rango: 2150.00 },\n  { distancia_min_km: 3.00, distancia_max_km: 4.99, precio_rango: 2900.00 },\n  { distancia_min_km: 5.00, distancia_max_km: 8.99, precio_rango: 4000.00 },\n  { distancia_min_km: 9.00, distancia_max_km: 12.99, precio_rango: 5800.00 },\n  { distancia_min_km: 13.01, distancia_max_km: 20.00, precio_rango: 8200.00 },\n];\n\n/**\n * Obtiene el precio del servicio Low Cost basado en la distancia.\n * @param distanciaKm La distancia en kil\u00f3metros.\n * @returns El precio del rango correspondiente o undefined si la distancia est\u00e1 fuera de los rangos definidos.\n */\nexport function obtenerPrecioLowCostPorDistancia(distanciaKm: number): number | undefined {\n  for (const rango of preciosLowCost) {\n    if (distanciaKm >= rango.distancia_min_km && distanciaKm <= rango.distancia_max_km) {\n      return rango.precio_rango;\n    }\n  }\n  // Si la distancia es mayor que el rango m\u00e1ximo definido, o menor que el m\u00ednimo (aunque el m\u00ednimo es 0)\n  // se considera fuera de rango.\n  return undefined;\n}\n"
        },
        {
          "name": "prisma.ts",
          "type": "file",
          "content": "import { PrismaClient } from '@prisma/client';\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare global {\n  var prisma: undefined | ReturnType<typeof prismaClientSingleton>;\n}\n\nconst prisma = globalThis.prisma ?? prismaClientSingleton();\n\nexport default prisma;\n\nif (process.env.NODE_ENV !== 'production') {\n  globalThis.prisma = prisma;\n}"
        },
        {
          "name": "social",
          "type": "directory",
          "children": [
            {
              "name": "posts.ts",
              "type": "file",
              "content": "// src/lib/social/posts.ts\nimport prisma from \"@/lib/prisma\";\nimport type { SocialPost as SocialPostType } from \"@/types/social-post\";\nimport type { SocialPost } from \"@prisma/client\";\n\n/**\n * Fetches all social posts from the database and sorts them by timestamp descending.\n * @returns A sorted array of SocialPost objects.\n */\nexport async function getAllPosts(): Promise<SocialPostType[]> {\n  const postsFromDb = await prisma.socialPost.findMany({\n    orderBy: {\n      timestamp: 'desc',\n    },\n  });\n\n  // Map Prisma model to our application's SocialPostType\n  return postsFromDb.map(post => ({\n    id: String(post.id),\n    platform: post.platform.toLowerCase() as 'facebook' | 'instagram' | 'whatsapp',\n    user: {\n      name: post.userName,\n      avatarUrl: post.userAvatar || undefined,\n      profileUrl: post.userUrl || undefined,\n    },\n    content: post.content,\n    imageUrl: post.imageUrl || undefined,\n    imageHint: post.imageHint || undefined,\n    postUrl: post.postUrl,\n    timestamp: post.timestamp, // Keep as Date object\n    likes: post.likes ?? undefined,\n    comments: post.comments ?? undefined,\n    shares: post.shares ?? undefined,\n  }));\n}\n"
            }
          ]
        },
        {
          "name": "utils.ts",
          "type": "file",
          "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"
        }
      ]
    },
    {
      "name": "styles",
      "type": "directory",
      "children": [
        {
          "name": "globals.css",
          "type": "file"
        }
      ]
    },
    {
      "name": "types",
      "type": "directory",
      "children": [
        {
          "name": "index.ts",
          "type": "file",
          "content": "export interface Order {\n  id: string;\n  customerName: string;\n  origin: string;\n  destination: string;\n  status: 'Pendiente' | 'En Tr\u00e1nsito' | 'Entregado' | 'Cancelado';\n  creationDate: string; \n  items: number;\n  weight: string; // e.g., \"5kg\"\n}\n\nexport interface Technology {\n  name: string;\n  version?: string;\n  description: string;\n  icon?: React.ElementType; // For Lucide icons\n}\n"
        },
        {
          "name": "order-actions.ts",
          "type": "file",
          "content": "// src/types/order-actions.ts\nimport type { Client, Prisma, ServiceTypeEnum as PrismaServiceTypeEnum } from '@prisma/client';\nimport type { z } from 'zod';\n\n// --- Types for searchClientByPhone ---\nexport interface ClientSearchInput {\n  phone: string;\n}\nexport interface ClientSearchResult {\n  success: boolean;\n  data?: Client | null; // Client type is from Prisma\n  error?: string;\n  message?: string; \n  fieldErrors?: z.ZodIssue[];\n}\n\n// --- Types for registerClient ---\nexport interface RegisterClientInput {\n  name: string;\n  lastName?: string;\n  phone: string;\n  email?: string;\n  address: string;\n}\nexport interface RegisterClientResult {\n  success: boolean;\n  data?: Client; // Client type is from Prisma\n  error?: string;\n  fieldErrors?: z.ZodIssue[];\n}\n\n// --- Types for quoteShipment ---\nexport interface QuoteShipmentInput {\n  originAddress: string;\n  destinationAddress: string;\n  serviceType: PrismaServiceTypeEnum; \n}\nexport interface QuoteDetails {\n  price: number | null; \n  distanceText: string;\n  durationText: string;\n  originLat: number; \n  originLng: number; \n  destinationLat: number; \n  destinationLng: number; \n}\nexport interface QuoteShipmentResult {\n  success: boolean;\n  data?: QuoteDetails;\n  error?: string;\n  fieldErrors?: z.ZodIssue[];\n}\n\n// --- Types for saveShipment ---\n// Input now expects numbers for prices and coordinates, matching Zod schema.\n// The Server Action will handle conversion to Decimal for Prisma.\nexport interface SaveShipmentInput {\n  clientId?: number; \n\n  originFullName: string;\n  originPhone: string;\n  originAddress: string;\n  originLat: number; \n  originLng: number; \n\n  destinationContactName: string;\n  destinationContactPhone: string;\n  destinationContactEmail?: string;\n  destinationAddress: string;\n  destinationLat: number; \n  destinationLng: number; \n  \n  serviceType: PrismaServiceTypeEnum; \n  quotedPrice: number; \n  distanceText?: string;\n  durationText?: string;\n  \n  clientNameAtOrder?: string; \n  clientPhoneAtOrder?: string;\n\n  pickupDate: Date;\n  pickupTimeFrom: string; \n  pickupTimeTo: string; \n  deliveryDate: Date;\n  deliveryTimeFrom: string; \n  deliveryTimeTo: string;\n  \n  // These are derived in the action, not expected from client for this version\n  // pickupDateTime?: Date; \n  // deliveryDateTime?: Date;\n\n  // These seem like aliases, primary address fields are used\n  // pickupStreetAddress?: string; \n  // deliveryAddress_form?: string; \n  \n  shippingCost?: number; \n  totalCost?: number; \n}\n\nexport interface SaveShipmentResult {\n  success: boolean;\n  message?: string;\n  error?: string;\n  fieldErrors?: z.ZodIssue[];\n  shipmentId?: number; \n}\n"
        },
        {
          "name": "social-post.ts",
          "type": "file",
          "content": "// src/types/social-post.ts\n\nexport type SocialPlatform = 'facebook' | 'instagram' | 'whatsapp';\n\nexport interface SocialPost {\n  id: string;\n  platform: SocialPlatform;\n  user: {\n    name: string;\n    avatarUrl?: string; // URL to user's profile picture\n    profileUrl?: string; // URL to user's profile page\n  };\n  content: string; // Text content of the post\n  imageUrl?: string; // URL for an image in the post\n  imageHint?: string; // Hint for AI image generation if imageUrl is a placeholder\n  videoUrl?: string; // URL for a video in the post\n  postUrl: string; // Direct link to the original post or action (e.g., wa.me link)\n  timestamp: Date; // Changed to Date object for easier sorting\n  likes?: number;\n  comments?: number;\n  shares?: number;\n}\n"
        }
      ]
    }
  ]
}